apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: custom-3.2.1
  annotations:
    policies.kyverno.io/category: CIS 3.2.1
    policies.kyverno.io/description: "CIS 3.2.1: Ensure that the --anonymous-auth\
      \ argument is set to false.\n\nHYBRID VALIDATION APPROACH: This control combines\
      \ kube-bench kubelet configuration validation \nwith Kyverno RBAC validation\
      \ for comprehensive anonymous authentication prevention.\n\nKUBE-BENCH INTEGRATION:\
      \ The primary kubelet --anonymous-auth flag validation requires kube-bench \n\
      to access kubelet configuration on worker nodes. Kube-bench validates:\n- kubelet\
      \ --anonymous-auth=false flag in kubelet configuration\n- /var/lib/kubelet/config.yaml\
      \ authentication.anonymous.enabled=false\n- kubelet service configuration files\n\
      - systemd kubelet service settings\n\nKYVERNO VALIDATION: This policy validates\
      \ Kubernetes API-level controls that prevent anonymous \naccess, which complements\
      \ kubelet-level controls:\n- RoleBindings and ClusterRoleBindings that bind\
      \ to system:anonymous\n- RoleBindings and ClusterRoleBindings that bind to system:unauthenticated\n\
      - ServiceAccounts with overly permissive anonymous access\n- Pods that might\
      \ enable anonymous authentication features\n"
    policies.kyverno.io/kube-bench-required: 'true'
    policies.kyverno.io/kube-bench-checks: 3.2.1
    policies.kyverno.io/validation-scope: rbac-anonymous-bindings-with-kube-bench
    policies.kyverno.io/cel: 'true'
spec:
  validationFailureAction: Audit
  background: true
  rules:
  - name: disallow-anonymous-user-binding
    match:
      resources:
        kinds:
        - RoleBinding
        - ClusterRoleBinding
    validate:
      message: 'RoleBindings and ClusterRoleBindings should not bind to system:anonymous
        user.

        This complements CIS 3.2.1 kubelet --anonymous-auth=false setting validated
        by kube-bench.

        '
      cel:
        expressions:
        - expression: "!object.subjects.exists(subject, \n  subject.kind == \"User\"\
            \ && subject.name == \"system:anonymous\"\n)\n"
          message: 'RoleBindings and ClusterRoleBindings should not bind to system:anonymous
            user.

            This complements CIS 3.2.1 kubelet --anonymous-auth=false setting validated
            by kube-bench.

            '
  - name: disallow-anonymous-group-binding
    match:
      resources:
        kinds:
        - RoleBinding
        - ClusterRoleBinding
    validate:
      message: 'RoleBindings and ClusterRoleBindings should not bind to system:unauthenticated
        group.

        This prevents anonymous access at the RBAC level, complementing kubelet anonymous-auth
        controls.

        '
      cel:
        expressions:
        - expression: '!(false)'
          message: 'RoleBindings and ClusterRoleBindings should not bind to system:unauthenticated
            group.

            This prevents anonymous access at the RBAC level, complementing kubelet
            anonymous-auth controls.

            '
  - name: validate-pod-authentication-config
    match:
      any:
      - resources:
          kinds:
          - Pod
    validate:
      message: 'Pods should not contain configuration that could enable anonymous
        authentication.

        This works with kube-bench validation of kubelet --anonymous-auth=false setting.

        '
      cel:
        expressions:
        - expression: '!(false)'
          message: 'Pods should not contain configuration that could enable anonymous
            authentication.

            This works with kube-bench validation of kubelet --anonymous-auth=false
            setting.

            '
  - name: validate-kube-bench-kubelet-scan
    match:
      any:
      - resources:
          kinds:
          - DaemonSet
          names:
          - kube-bench*
          namespaces:
          - kube-system
          - kube-bench
    validate:
      message: 'Kube-bench DaemonSets must be configured to scan kubelet configuration
        for CIS 3.2.1.

        This ensures validation of kubelet --anonymous-auth=false setting on all nodes.

        '
      cel:
        expressions:
        - expression: object.spec.template.spec.serviceAccountName == 'kube-bench'
            && object.spec.template.spec.hostPID == true && object.spec.template.spec.containers.all(item,
            has(item.name) && item.image == 'aquasec/kube-bench:*' && item.securityContext.privileged
            == true && item.volumeMounts.all(item, item.name == '*kubelet*' && item.mountPath
            == '/var/lib/kubelet' && item.readOnly == true) && item.volumeMounts.all(item,
            item.name == '*kubernetes*' && item.mountPath == '/etc/kubernetes' &&
            item.readOnly == true)) && object.spec.template.spec.volumes.all(item,
            item.name == '*kubelet*' && item.hostPath.path == '/var/lib/kubelet')
            && object.spec.template.spec.volumes.all(item, item.name == '*kubernetes*'
            && item.hostPath.path == '/etc/kubernetes')
          message: 'Kube-bench DaemonSets must be configured to scan kubelet configuration
            for CIS 3.2.1.

            This ensures validation of kubelet --anonymous-auth=false setting on all
            nodes.

            '
  - name: validate-kube-bench-kubelet-job
    match:
      any:
      - resources:
          kinds:
          - Job
          names:
          - kube-bench*
          namespaces:
          - kube-system
          - kube-bench
    validate:
      message: 'Kube-bench Jobs must include node/kubelet scanning for CIS 3.2.1 validation.

        This ensures kubelet --anonymous-auth configuration is properly checked.

        '
      cel:
        expressions:
        - expression: object.spec.template.spec.containers.all(item, has(item.name)
            && item.args == ['node'] && item.volumeMounts.all(item, item.mountPath
            == '/var/lib/kubelet' && item.readOnly == true))
          message: 'Kube-bench Jobs must include node/kubelet scanning for CIS 3.2.1
            validation.

            This ensures kubelet --anonymous-auth configuration is properly checked.

            '
  - name: validate-clusterrole-anonymous-permissions
    match:
      any:
      - resources:
          kinds:
          - ClusterRole
    validate:
      message: 'ClusterRoles should not grant broad permissions that could be exploited
        via anonymous access.

        This complements CIS 3.2.1 kubelet anonymous-auth controls.

        '
      cel:
        expressions:
        - expression: '!(false)'
          message: 'ClusterRoles should not grant broad permissions that could be
            exploited via anonymous access.

            This complements CIS 3.2.1 kubelet anonymous-auth controls.

            '
  - name: validate-serviceaccount-token-automount-security
    match:
      any:
      - resources:
          kinds:
          - ServiceAccount
    validate:
      message: "ServiceAccounts should explicitly configure automountServiceAccountToken\
        \ to prevent \npotential anonymous token usage. This works with CIS 3.2.1\
        \ anonymous-auth prevention.\n"
      cel:
        expressions:
        - expression: (!has(object.automountServiceAccountToken) || true)
          message: "ServiceAccounts should explicitly configure automountServiceAccountToken\
            \ to prevent \npotential anonymous token usage. This works with CIS 3.2.1\
            \ anonymous-auth prevention.\n"
  - name: validate-configmap-auth-settings
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          names:
          - '*kubelet*'
          - '*auth*'
    validate:
      message: 'ConfigMaps should not contain settings that could override kubelet
        anonymous-auth configuration.

        This prevents bypassing CIS 3.2.1 controls validated by kube-bench.

        '
      cel:
        expressions:
        - expression: '!(false)'
          message: 'ConfigMaps should not contain settings that could override kubelet
            anonymous-auth configuration.

            This prevents bypassing CIS 3.2.1 controls validated by kube-bench.

            '
