apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: custom-3.1.1
  annotations:
    policies.kyverno.io/category: CIS 3.1.1
    policies.kyverno.io/description: "CIS 3.1.1: Ensure that the kubeconfig file permissions\
      \ are set to 644 or more restrictive.\n\nSINGLE-TOOL APPROACH: This control\
      \ uses custom CIS scanner results combined with Kyverno validation.\n\
      \nCUSTOM CIS SCANNER: File permission validation is performed by our custom\
      \ CIS scanner DaemonSet that runs on each node to check:\n- /etc/kubernetes/kubelet.conf permissions (should be 644\
      \ or more restrictive)\n- /etc/kubernetes/worker-kubeconfig permissions\n-\
      \ Other kubeconfig files used by kubelet\n- Results are output as JSON to ConfigMaps\n\
      \nKYVERNO VALIDATION: This policy validates both:\n- Custom CIS scanner results from ConfigMaps\
      \ for actual file permissions\n- Pod security contexts and ServiceAccount configurations\
      \ for complementary API-level controls\n"
    policies.kyverno.io/scanner-required: 'true'
    policies.kyverno.io/scanner-checks: '3.1.1'
    policies.kyverno.io/validation-scope: kubeconfig-security-with-custom-scanner
    policies.kyverno.io/cel: 'true'
spec:
  validationFailureAction: Audit
  background: true
  rules:
  - name: validate-pod-file-access-security
    match:
      any:
      - resources:
          kinds:
          - Pod
    validate:
      message: 'Pods with file system access should use appropriate security contexts.

        Note: Actual kubeconfig file permission validation (CIS 3.1.1) is handled by
        our custom CIS scanner pod.

        This rule validates complementary pod security settings.

        '
      cel:
        expressions:
        - expression: (!has(object.spec.securityContext) || (!has(object.spec.securityContext.runAsNonRoot)
            || true) && (!has(object.spec.securityContext.runAsUser) || true) && (!has(object.spec.securityContext.fsGroup)
            || true)) && object.spec.containers.all(item, has(item.name) && (!has(item.securityContext)
            || (!has(item.securityContext.allowPrivilegeEscalation) || true) && (!has(item.securityContext.readOnlyRootFilesystem)
            || true)))
          message: 'Pods with file system access should use appropriate security contexts.

            Note: Actual kubeconfig file permission validation (CIS 3.1.1) is handled
            by our custom CIS scanner pod.

            This rule validates complementary pod security settings.

            '
  - name: validate-serviceaccount-automount
    match:
      any:
      - resources:
          kinds:
          - ServiceAccount
    validate:
      message: "ServiceAccounts should explicitly configure automountServiceAccountToken\
        \ to prevent \nunintended kubeconfig exposure. This complements CIS 3.1.1\
        \ file permission controls.\n"
      cel:
        expressions:
        - expression: (!has(object.automountServiceAccountToken) || true)
          message: "ServiceAccounts should explicitly configure automountServiceAccountToken\
            \ to prevent \nunintended kubeconfig exposure. This complements CIS 3.1.1\
            \ file permission controls.\n"
  - name: validate-kubeconfig-configmaps
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
    validate:
      message: 'ConfigMaps should not contain kubeconfig data. Use proper Secret resources
        instead.

        This prevents kubeconfig exposure that could bypass file permission controls.

        '
      cel:
        expressions:
        - expression: '!(false)'
          message: 'ConfigMaps should not contain kubeconfig data. Use proper Secret
            resources instead.

            This prevents kubeconfig exposure that could bypass file permission controls.

            '
  - name: validate-cis-scanner-results
    match:
      any:
      - resources:
          kinds:
          - ConfigMap
          names:
          - cis-scanner-results*
          namespaces:
          - kube-system
    validate:
      message: 'CIS 3.1.1 kubeconfig file permission scan results indicate non-compliant
        file permissions.

        Custom CIS scanner has detected kubeconfig files with permissions more permissive
        than 644.

        '
      cel:
        expressions:
        - expression: |
            !has(object.data) || !has(object.data['node-results.json']) ||
            size(object.data['node-results.json'].parseJSON().checks.filter(c, 
              c.id == '3.1.1' && c.status == 'FAIL'
            )) == 0
          message: 'CIS 3.1.1 compliance check failed: kubeconfig file permissions
            are not set to 644 or more restrictive.

            Please ensure all kubeconfig files have appropriate permissions.

            '
