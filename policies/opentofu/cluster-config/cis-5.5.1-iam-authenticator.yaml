apiVersion: json.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: cis-5-5-1-iam-authenticator
spec:
  rules:
    - name: eks-iam-authenticator-config
      assert:
        all:
          # Check that EKS cluster has IAM role configured (required for IAM authentication)
          - message: "EKS cluster must have an IAM role ARN configured for authentication."
            check:
              planned_values.root_module.resources[?type=='aws_eks_cluster'].values.role_arn | [0] | length(@) > `0`: true
          
          # Verify the EKS cluster role exists and has proper trust policy
          - message: "EKS cluster IAM role must have trust relationship with eks.amazonaws.com service."
            check:
              planned_values.root_module.resources[?type=='aws_eks_cluster'] | [0].values.role_arn as $role_arn | planned_values.root_module.resources[?type=='aws_iam_role' && values.arn == $role_arn].values.assume_role_policy | [0] | contains(@, 'eks.amazonaws.com'): true
          
          # Check that node group roles are configured for worker authentication
          - message: "EKS node groups must have IAM roles configured for node authentication."
            check:
              planned_values.root_module.resources[?type=='aws_eks_node_group'].values.node_role_arn | length(@) > `0`: true
          
          # Verify node group roles have EC2 trust relationship
          - message: "Node group IAM roles must have trust relationship with ec2.amazonaws.com service."
            check:
              planned_values.root_module.resources[?type=='aws_eks_node_group'].values.node_role_arn as $node_roles | planned_values.root_module.resources[?type=='aws_iam_role' && contains($node_roles, values.arn)].values.assume_role_policy | [?contains(@, 'ec2.amazonaws.com')] | length(@) > `0`: true