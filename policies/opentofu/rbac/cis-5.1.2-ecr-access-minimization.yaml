apiVersion: json.kyverno.io/v1alpha1
kind: ValidatingPolicy
metadata:
  name: cis-5-1-2-ecr-access-minimization
spec:
  rules:
    - name: minimize-ecr-iam-permissions
      assert:
        all:
          # Check node groups have ECR read-only access
          - message: "EKS node group roles must have ECR read-only policy attached."
            check:
              planned_values.root_module.resources[?type=='aws_iam_role_policy_attachment' && contains(values.policy_arn, 'AmazonEC2ContainerRegistryReadOnly')] | length(@) > `0`: true
          
          # Verify no ECR full access policies attached
          - message: "IAM roles must not have ECR full access permissions."
            check:
              planned_values.root_module.resources[?type=='aws_iam_role_policy_attachment' && contains(values.policy_arn, 'ContainerRegistryFullAccess')] | length(@) == `0`: true
          
          # Check for inline policies with excessive ECR permissions
          - message: "IAM roles must not have inline policies with ecr:* permissions."
            check:
              planned_values.root_module.resources[?type=='aws_iam_role_policy' && contains(values.policy, 'ecr:*')] | length(@) == `0`: true
          
          # Verify no policies allowing ECR write operations
          - message: "IAM roles should not have ECR write permissions (PutImage, InitiateLayerUpload, etc)."
            check:
              planned_values.root_module.resources[?type=='aws_iam_role_policy' && contains(values.policy, 'ecr:PutImage')] | length(@) == `0`: true
          
          # Check managed policies don't grant excessive ECR permissions
          - message: "Custom managed policies should not grant excessive ECR permissions."
            check:
              planned_values.root_module.resources[?type=='aws_iam_policy' && contains(values.policy, 'ecr:*')] | length(@) == `0`: true