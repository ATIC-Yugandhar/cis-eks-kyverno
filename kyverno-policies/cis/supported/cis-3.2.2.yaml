# kyverno-policies/cis/cis-3.2.2.yaml
apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: cis-3.2.2-audit-authorization-mode
  annotations:
    policies.kyverno.io/title: Audit API Server Authorization Mode
    policies.kyverno.io/category: CIS EKS Benchmarks
    policies.kyverno.io/severity: high
    policies.kyverno.io/subject: AWSAdapterConfig # Hypothetical CRD
    policies.kyverno.io/minversion: 1.6.0
    policies.kyverno.io/description: >-
      The Kubernetes API server's authorization mode should not be set to 'AlwaysAllow'.
      This policy attempts to audit this setting, potentially via the Kyverno AWS Adapter's
      configuration CRD (e.g., AWSAdapterConfig). Direct validation of API server flags
      is typically outside standard Kyverno capabilities. If the AWSAdapterConfig CRD is not
      present or does not contain this information, this policy may not be effective.
      Manual verification or other tools might be required.
    policies.kyverno.io/benchmark: cis-eks
    policies.kyverno.io/controls: "3.2.2"
spec:
  validationFailureAction: Audit
  background: true
  rules:
    - name: audit-authorization-mode-via-adapter
      # This match assumes a CRD like AWSAdapterConfig exists and holds the relevant info.
      # Adjust the kind and fields based on the actual CRD provided by the AWS Adapter, if used.
      match:
        any:
        - resources:
            kinds:
              # Replace with the actual Kind used by Kyverno AWS Adapter if applicable
              - AWSAdapterConfig
            # Optionally, specify the name if known
            # names:
            # - "eks-cluster-config"
      validate:
        message: "API Server authorization mode should not be AlwaysAllow (CIS 3.2.2). Check AWSAdapterConfig or API server configuration directly."
        # This pattern assumes the authorization mode is available in a field like spec.apiServer.authorizationMode.
        # Adjust the path according to the actual CRD structure.
        pattern:
          spec:
            apiServer:
              authorizationMode: "!AlwaysAllow"

    # As a fallback or alternative, if API server config is somehow exposed via a ConfigMap (less likely in EKS):
    # - name: audit-authorization-mode-via-configmap
    #   match:
    #     any:
    #     - resources:
    #         kinds:
    #           - ConfigMap
    #         namespaces:
    #           - kube-system # Or wherever the config might reside
    #         names:
    #           - kubeadm-config # Example name, adjust as needed
    #   validate:
    #     message: "API Server authorization mode should not be AlwaysAllow (CIS 3.2.2). Check ConfigMap or API server configuration directly."
    #     pattern:
    #       data:
    #         ClusterConfiguration: # Adjust based on actual ConfigMap structure
    #           apiServer:
    #             extraArgs:
    #               authorization-mode: "!*AlwaysAllow*" # Check within the args string