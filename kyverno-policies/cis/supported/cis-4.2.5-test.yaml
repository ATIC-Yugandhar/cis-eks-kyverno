# kyverno-policies/cis/cis-4.2.5-test.yaml
name: cis-4.2.5-disallow-privilege-escalation-test
policies:
  - cis-4.2.5.yaml
resources:
  # Pass case 1: allowPrivilegeEscalation explicitly false in container
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-pass-ape-false
    spec:
      containers:
      - name: nginx
        image: nginx
        securityContext:
          allowPrivilegeEscalation: false # Compliant
  # Pass case 2: No securityContext defined (pattern =(securityContext) won't match)
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-pass-no-context
    spec:
      containers:
      - name: nginx
        image: nginx
  # Pass case 3: allowPrivilegeEscalation explicitly false in initContainer
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-pass-init-ape-false
    spec:
      initContainers:
      - name: init-myservice
        image: busybox
        securityContext:
          allowPrivilegeEscalation: false # Compliant
      containers:
      - name: nginx
        image: nginx
  # Fail case 1: allowPrivilegeEscalation explicitly true in container
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-fail-ape-true
    spec:
      containers:
      - name: nginx
        image: nginx
        securityContext:
          allowPrivilegeEscalation: true # Non-compliant
  # Fail case 2: securityContext exists, allowPrivilegeEscalation not defined (defaults to true)
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-fail-ape-implicit
    spec:
      containers:
      - name: nginx
        image: nginx
        securityContext:
          # allowPrivilegeEscalation implicitly true
          runAsNonRoot: true # Add another field to ensure securityContext exists
  # Fail case 3: allowPrivilegeEscalation explicitly true in initContainer
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-fail-init-ape-true
    spec:
      initContainers:
      - name: init-myservice
        image: busybox
        securityContext:
          allowPrivilegeEscalation: true # Non-compliant
      containers:
      - name: nginx
        image: nginx
results:
  - policy: cis-4.2.5-disallow-privilege-escalation
    rule: disallow-privilege-escalation
    resource: pod-pass-ape-false
    kind: Pod
    result: pass
  - policy: cis-4.2.5-disallow-privilege-escalation
    rule: disallow-privilege-escalation
    resource: pod-pass-no-context
    kind: Pod
    result: pass
  - policy: cis-4.2.5-disallow-privilege-escalation
    rule: disallow-privilege-escalation
    resource: pod-pass-init-ape-false
    kind: Pod
    result: pass
  - policy: cis-4.2.5-disallow-privilege-escalation
    rule: disallow-privilege-escalation
    resource: pod-fail-ape-true
    kind: Pod
    result: fail
  - policy: cis-4.2.5-disallow-privilege-escalation
    rule: disallow-privilege-escalation
    resource: pod-fail-ape-implicit
    kind: Pod
    result: fail
  - policy: cis-4.2.5-disallow-privilege-escalation
    rule: disallow-privilege-escalation
    resource: pod-fail-init-ape-true
    kind: Pod
    result: fail