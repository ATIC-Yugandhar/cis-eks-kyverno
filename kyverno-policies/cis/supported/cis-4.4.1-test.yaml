# kyverno-policies/cis/cis-4.4.1-test.yaml
name: cis-4.4.1-disallow-secrets-as-env-test
policies:
  - cis-4.4.1.yaml
resources:
  # Pass case 1: Env var from ConfigMap
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-pass-env-configmap
    spec:
      containers:
      - name: test-container
        image: busybox
        env:
        - name: SPECIAL_LEVEL_KEY
          valueFrom:
            configMapKeyRef: # Compliant: from ConfigMap
              name: special-config
              key: special.how
  # Pass case 2: Env var with literal value
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-pass-env-literal
    spec:
      containers:
      - name: test-container
        image: busybox
        env:
        - name: MY_VAR
          value: "myvalue" # Compliant: literal value
  # Pass case 3: Secret mounted as volume (best practice, passes policy)
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-pass-secret-volume
    spec:
      containers:
      - name: test-container
        image: busybox
        volumeMounts:
        - name: secret-volume
          mountPath: "/etc/secret"
          readOnly: true
      volumes:
      - name: secret-volume
        secret:
          secretName: my-secret
  # Fail case 1: Env var from Secret using valueFrom.secretKeyRef
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-fail-env-secretkeyref
    spec:
      containers:
      - name: test-container
        image: busybox
        env:
        - name: SECRET_USERNAME
          valueFrom:
            secretKeyRef: # Non-compliant
              name: mysecret
              key: username
  # Fail case 2: Env vars from Secret using envFrom.secretRef
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-fail-envfrom-secretref
    spec:
      containers:
      - name: test-container
        image: busybox
        envFrom:
        - secretRef: # Non-compliant
            name: mysecret
  # Fail case 3: Env var from Secret in initContainer
  - apiVersion: v1
    kind: Pod
    metadata:
      name: pod-fail-init-env-secret
    spec:
      initContainers:
      - name: init-container
        image: busybox
        env:
        - name: INIT_SECRET
          valueFrom:
            secretKeyRef: # Non-compliant
              name: init-secret
              key: init-key
      containers:
      - name: main-container
        image: nginx
results:
  - policy: cis-4.4.1-disallow-secrets-as-env
    rule: disallow-secrets-as-env-vars
    resource: pod-pass-env-configmap
    kind: Pod
    result: pass
  - policy: cis-4.4.1-disallow-secrets-as-env
    rule: disallow-secrets-as-env-vars
    resource: pod-pass-env-literal
    kind: Pod
    result: pass
  - policy: cis-4.4.1-disallow-secrets-as-env
    rule: disallow-secrets-as-env-vars
    resource: pod-pass-secret-volume
    kind: Pod
    result: pass
  - policy: cis-4.4.1-disallow-secrets-as-env
    rule: disallow-secrets-as-env-vars
    resource: pod-fail-env-secretkeyref
    kind: Pod
    result: fail
  - policy: cis-4.4.1-disallow-secrets-as-env
    rule: disallow-secrets-as-env-vars
    resource: pod-fail-envfrom-secretref
    kind: Pod
    result: fail
  - policy: cis-4.4.1-disallow-secrets-as-env
    rule: disallow-secrets-as-env-vars
    resource: pod-fail-init-env-secret
    kind: Pod
    result: fail