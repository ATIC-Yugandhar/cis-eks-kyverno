apiVersion: kuttl.dev/v1beta1
kind: TestSuite
testDirs:
  - ./
timeout: 30
parallel: 4
---
apiVersion: v1
kind: TestStep
name: cis-5.1.6-restrict-privilege-escalation-tests
commands:
  - script: |
      kubectl apply -f ../cis-5.1.6.yaml --dry-run=client -o yaml > policy.yaml
---
# Test Case: Compliant Pod with allowPrivilegeEscalation: false
name: test-compliant-pod-ape-false
policies: [policy.yaml]
resources:
- apiVersion: v1
  kind: Pod
  metadata:
    name: compliant-pod-ape-false
    namespace: default
  spec:
    containers:
    - name: nginx
      image: nginx
      securityContext:
        allowPrivilegeEscalation: false
results:
- policy: cis-5.1.6-restrict-privilege-escalation
  rule: check-privilege-escalation-containers
  resource: compliant-pod-ape-false
  namespace: default
  kind: Pod
  result: pass
---
# Test Case: Non-compliant Pod with allowPrivilegeEscalation: true
name: test-noncompliant-pod-ape-true
policies: [policy.yaml]
resources:
- apiVersion: v1
  kind: Pod
  metadata:
    name: noncompliant-pod-ape-true
    namespace: default
  spec:
    containers:
    - name: nginx
      image: nginx
      securityContext:
        allowPrivilegeEscalation: true # Not allowed
results:
- policy: cis-5.1.6-restrict-privilege-escalation
  rule: check-privilege-escalation-containers
  resource: noncompliant-pod-ape-true
  namespace: default
  kind: Pod
  result: fail
---
# Test Case: Non-compliant Pod with allowPrivilegeEscalation not set (defaults to true)
name: test-noncompliant-pod-ape-unset
policies: [policy.yaml]
resources:
- apiVersion: v1
  kind: Pod
  metadata:
    name: noncompliant-pod-ape-unset
    namespace: default
  spec:
    containers:
    - name: nginx
      image: nginx
      # securityContext.allowPrivilegeEscalation is not set, defaults to true implicitly
results:
- policy: cis-5.1.6-restrict-privilege-escalation
  rule: check-privilege-escalation-containers
  resource: noncompliant-pod-ape-unset
  namespace: default
  kind: Pod
  result: fail # Fails because the policy requires explicit 'false'
---
# Test Case: Compliant Deployment with allowPrivilegeEscalation: false
name: test-compliant-deployment-ape-false
policies: [policy.yaml]
resources:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: compliant-deployment-ape-false
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: nginx
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - name: nginx
          image: nginx
          securityContext:
            allowPrivilegeEscalation: false
results:
- policy: cis-5.1.6-restrict-privilege-escalation
  rule: check-privilege-escalation-controllers
  resource: compliant-deployment-ape-false
  namespace: default
  kind: Deployment
  result: pass
---
# Test Case: Non-compliant Deployment with allowPrivilegeEscalation: true
name: test-noncompliant-deployment-ape-true
policies: [policy.yaml]
resources:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: noncompliant-deployment-ape-true
    namespace: default
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: nginx
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - name: nginx
          image: nginx
          securityContext:
            allowPrivilegeEscalation: true # Not allowed
results:
- policy: cis-5.1.6-restrict-privilege-escalation
  rule: check-privilege-escalation-controllers
  resource: noncompliant-deployment-ape-true
  namespace: default
  kind: Deployment
  result: fail
---
# Test Case: Pod in excluded namespace (kube-system)
name: test-excluded-namespace-pod
policies: [policy.yaml]
resources:
- apiVersion: v1
  kind: Pod
  metadata:
    name: excluded-pod-ape
    namespace: kube-system # Excluded namespace
  spec:
    containers:
    - name: nginx
      image: nginx
      # allowPrivilegeEscalation not set - would fail if not excluded
results:
- policy: cis-5.1.6-restrict-privilege-escalation
  rule: check-privilege-escalation-containers
  resource: excluded-pod-ape
  namespace: kube-system
  kind: Pod
  result: skip # Expecting skip because the namespace is excluded