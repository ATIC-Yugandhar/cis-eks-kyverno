apiVersion: apps/v1
kind: Deployment
metadata:
  name: secure-app
  namespace: application-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secure-app
  template:
    metadata:
      labels:
        app: secure-app
    spec:
      # Using custom service account (CIS 4.1.5)
      serviceAccountName: app-service-account
      # Explicitly disable service account token mounting (CIS 4.1.6)
      automountServiceAccountToken: false  
      containers:
      - name: app
        image: approved-registry.io/myapp:1.0.0  # Using approved registry (CIS 5.1.4)
        # Using volume mounts for secrets, not environment variables (CIS 4.4.1)
        volumeMounts:
        - name: db-creds
          mountPath: "/etc/db-secrets"
          readOnly: true
        securityContext:
          privileged: false  # Not privileged (CIS 4.2.1)
          allowPrivilegeEscalation: false  # Prevents privilege escalation (CIS 4.2.5, 5.1.6)
          readOnlyRootFilesystem: true
          runAsNonRoot: true  # Run as non-root user
          runAsUser: 10001    # Specific non-root UID
          capabilities:
            drop:
              - ALL          # Drop all capabilities
        resources:           # Adding resource requests and limits (CIS 5.5.1 & 5.5.2)
          requests:
            cpu: "100m"
            memory: "128Mi"
          limits:
            cpu: "200m"
            memory: "256Mi"
      volumes:
      - name: db-creds
        secret:
          secretName: db-credentials
---
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
  namespace: application-ns
type: Opaque
data:
  username: YWRtaW4=  # base64 encoded 'admin'
  password: cGFzc3dvcmQxMjM=  # base64 encoded 'password123'