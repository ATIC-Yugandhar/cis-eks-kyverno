apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"labels":{"app":"nginx"},"name":"nginx-demo","namespace":"default"},"spec":{"containers":[{"image":"nginx:stable","name":"nginx","ports":[{"containerPort":80}]}]}}
  creationTimestamp: "2025-05-17T04:10:59Z"
  labels:
    app: nginx
  name: nginx-demo
  namespace: default
  resourceVersion: "638"
  uid: aa5c55cc-95c1-435b-813a-9c04e895a994
spec:
  containers:
    - image: nginx:stable
      imagePullPolicy: IfNotPresent
      name: nginx
      ports:
        - containerPort: 80
          protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-9nqvb
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-9nqvb
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [nginx]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: nginx:stable
      imageID: ""
      lastState: {}
      name: nginx
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-9nqvb
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Pending
  qosClass: BestEffort
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  generateName: coredns-668d6bf9bc-
  labels:
    k8s-app: kube-dns
    pod-template-hash: 668d6bf9bc
  name: coredns-668d6bf9bc-bjgbd
  namespace: kube-system
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-668d6bf9bc
      uid: 3e739168-4743-4c1d-894f-1893888af90e
  resourceVersion: "671"
  uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                    - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
  containers:
    - args:
        - -conf
        - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - NET_BIND_SERVICE
          drop:
            - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-t5fkg
          readOnly: true
  dnsPolicy: Default
  enableServiceLinks: true
  nodeName: demo-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: coredns
  serviceAccountName: coredns
  terminationGracePeriodSeconds: 30
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - configMap:
        defaultMode: 420
        items:
          - key: Corefile
            path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-t5fkg
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://2f88e73946238950a88b294245f82524e4017a800b37309dc1a4acabac85f957
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: sha256:2f6c962e7b8311337352d9fdea917da2184d9919f4da7695bc2a6517cf392fe4
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:11:11Z"
      volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
          recursiveReadOnly: Disabled
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-t5fkg
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 10.244.0.3
  podIPs:
    - ip: 10.244.0.3
  qosClass: Burstable
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  generateName: coredns-668d6bf9bc-
  labels:
    k8s-app: kube-dns
    pod-template-hash: 668d6bf9bc
  name: coredns-668d6bf9bc-z69zr
  namespace: kube-system
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-668d6bf9bc
      uid: 3e739168-4743-4c1d-894f-1893888af90e
  resourceVersion: "680"
  uid: eba88ce4-1351-4842-b6d3-ea388af250ce
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                    - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 100
  containers:
    - args:
        - -conf
        - /etc/coredns/Corefile
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9153
          name: metrics
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          memory: 170Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - NET_BIND_SERVICE
          drop:
            - ALL
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-b9b8w
          readOnly: true
  dnsPolicy: Default
  enableServiceLinks: true
  nodeName: demo-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000000000
  priorityClassName: system-cluster-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: coredns
  serviceAccountName: coredns
  terminationGracePeriodSeconds: 30
  tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - configMap:
        defaultMode: 420
        items:
          - key: Corefile
            path: Corefile
        name: coredns
      name: config-volume
    - name: kube-api-access-b9b8w
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://05a21a1ca3f621d6021ca2b8940c9dfba57473a3f721a15a50f3b1823f5b56ff
      image: registry.k8s.io/coredns/coredns:v1.11.3
      imageID: sha256:2f6c962e7b8311337352d9fdea917da2184d9919f4da7695bc2a6517cf392fe4
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:11:11Z"
      volumeMounts:
        - mountPath: /etc/coredns
          name: config-volume
          readOnly: true
          recursiveReadOnly: Disabled
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-b9b8w
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 10.244.0.7
  podIPs:
    - ip: 10.244.0.7
  qosClass: Burstable
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubeadm.kubernetes.io/etcd.advertise-client-urls: https://192.168.107.2:2379
    kubernetes.io/config.hash: 0fefc9f1a7845615969525d306db0d45
    kubernetes.io/config.mirror: 0fefc9f1a7845615969525d306db0d45
    kubernetes.io/config.seen: "2025-05-17T04:10:48.360726566Z"
    kubernetes.io/config.source: file
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    component: etcd
    tier: control-plane
  name: etcd-demo-control-plane
  namespace: kube-system
  ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: demo-control-plane
      uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
  resourceVersion: "621"
  uid: 9bfa9bb6-1351-482b-9f12-718d2e8f6bf3
spec:
  containers:
    - command:
        - etcd
        - --advertise-client-urls=https://192.168.107.2:2379
        - --cert-file=/etc/kubernetes/pki/etcd/server.crt
        - --client-cert-auth=true
        - --data-dir=/var/lib/etcd
        - --experimental-initial-corrupt-check=true
        - --experimental-watch-progress-notify-interval=5s
        - --initial-advertise-peer-urls=https://192.168.107.2:2380
        - --initial-cluster=demo-control-plane=https://192.168.107.2:2380
        - --key-file=/etc/kubernetes/pki/etcd/server.key
        - --listen-client-urls=https://127.0.0.1:2379,https://192.168.107.2:2379
        - --listen-metrics-urls=http://127.0.0.1:2381
        - --listen-peer-urls=https://192.168.107.2:2380
        - --name=demo-control-plane
        - --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt
        - --peer-client-cert-auth=true
        - --peer-key-file=/etc/kubernetes/pki/etcd/peer.key
        - --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
        - --snapshot-count=10000
        - --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt
      image: registry.k8s.io/etcd:3.5.16-0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: etcd
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
          memory: 100Mi
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 2381
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/lib/etcd
          name: etcd-data
        - mountPath: /etc/kubernetes/pki/etcd
          name: etcd-certs
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      operator: Exists
  volumes:
    - hostPath:
        path: /etc/kubernetes/pki/etcd
        type: DirectoryOrCreate
      name: etcd-certs
    - hostPath:
        path: /var/lib/etcd
        type: DirectoryOrCreate
      name: etcd-data
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://f8e1c40192b8ba89fcf6add6bfe99b7eed1a37faf74e11517f101231e1b07dac
      image: registry.k8s.io/etcd:3.5.16-0
      imageID: sha256:7fc9d4aa817aa6a3e549f3cd49d1f7b496407be979fc36dd5f356d59ce8c3a82
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:10:50Z"
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 192.168.107.2
  podIPs:
    - ip: 192.168.107.2
  qosClass: Burstable
  startTime: "2025-05-17T04:10:53Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  generateName: kindnet-
  labels:
    app: kindnet
    controller-revision-hash: 6497b7d77f
    k8s-app: kindnet
    pod-template-generation: "1"
    tier: node
  name: kindnet-r2qlb
  namespace: kube-system
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kindnet
      uid: eef7ac51-ad54-47be-beea-7b420a02ec71
  resourceVersion: "423"
  uid: e8b0f4c0-96ef-435f-a3cc-670faba5b0ab
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchFields:
              - key: metadata.name
                operator: In
                values:
                  - demo-control-plane
  containers:
    - env:
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: POD_SUBNET
          value: 10.244.0.0/16
        - name: CONTROL_PLANE_ENDPOINT
          value: demo-control-plane:6443
      image: docker.io/kindest/kindnetd:v20250214-acbabc1a
      imagePullPolicy: IfNotPresent
      name: kindnet-cni
      resources:
        limits:
          cpu: 100m
          memory: 50Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
            - NET_RAW
            - NET_ADMIN
        privileged: false
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni-cfg
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-wgmzl
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: demo-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kindnet
  serviceAccountName: kindnet
  terminationGracePeriodSeconds: 30
  tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
  volumes:
    - hostPath:
        path: /etc/cni/net.d
        type: ""
      name: cni-cfg
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-wgmzl
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:59Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://b095606e958e5028df321ed8c811f2e88e96b54987654e62efe87ff6a4da87cf
      image: docker.io/kindest/kindnetd:v20250214-acbabc1a
      imageID: sha256:ee75e27fff91c8d59835f9a3efdf968ff404e580bad69746a65bcf3e304ab26f
      lastState: {}
      name: kindnet-cni
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:11:00Z"
      volumeMounts:
        - mountPath: /etc/cni/net.d
          name: cni-cfg
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
          recursiveReadOnly: Disabled
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-wgmzl
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 192.168.107.2
  podIPs:
    - ip: 192.168.107.2
  qosClass: Guaranteed
  startTime: "2025-05-17T04:10:59Z"
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint: 192.168.107.2:6443
    kubernetes.io/config.hash: 9a6d97073c01c83f5126a8860afe592d
    kubernetes.io/config.mirror: 9a6d97073c01c83f5126a8860afe592d
    kubernetes.io/config.seen: "2025-05-17T04:10:48.360727983Z"
    kubernetes.io/config.source: file
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    component: kube-apiserver
    tier: control-plane
  name: kube-apiserver-demo-control-plane
  namespace: kube-system
  ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: demo-control-plane
      uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
  resourceVersion: "619"
  uid: 50493e3d-a74f-4eb8-92db-23f27d4c391c
spec:
  containers:
    - command:
        - kube-apiserver
        - --advertise-address=192.168.107.2
        - --allow-privileged=true
        - --authorization-mode=Node,RBAC
        - --client-ca-file=/etc/kubernetes/pki/ca.crt
        - --enable-admission-plugins=NodeRestriction
        - --enable-bootstrap-token-auth=true
        - --etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt
        - --etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt
        - --etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key
        - --etcd-servers=https://127.0.0.1:2379
        - --kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt
        - --kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt
        - --proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key
        - --requestheader-allowed-names=front-proxy-client
        - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
        - --requestheader-extra-headers-prefix=X-Remote-Extra-
        - --requestheader-group-headers=X-Remote-Group
        - --requestheader-username-headers=X-Remote-User
        - --runtime-config=
        - --secure-port=6443
        - --service-account-issuer=https://kubernetes.default.svc.cluster.local
        - --service-account-key-file=/etc/kubernetes/pki/sa.pub
        - --service-account-signing-key-file=/etc/kubernetes/pki/sa.key
        - --service-cluster-ip-range=10.96.0.0/16
        - --tls-cert-file=/etc/kubernetes/pki/apiserver.crt
        - --tls-private-key-file=/etc/kubernetes/pki/apiserver.key
      image: registry.k8s.io/kube-apiserver:v1.32.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 192.168.107.2
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-apiserver
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 192.168.107.2
          path: /readyz
          port: 6443
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 250m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 192.168.107.2
          path: /livez
          port: 6443
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /etc/ca-certificates
          name: etc-ca-certificates
          readOnly: true
        - mountPath: /etc/kubernetes/pki
          name: k8s-certs
          readOnly: true
        - mountPath: /usr/local/share/ca-certificates
          name: usr-local-share-ca-certificates
          readOnly: true
        - mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      operator: Exists
  volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:08Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:08Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://4892d7b7c54a42ca294579bf922fa93a8dd9e72bdc705a8aabac159fbe2f95e6
      image: registry.k8s.io/kube-apiserver-arm64:v1.32.2
      imageID: sha256:6417e1437b6d9a789e1ca789695a574e1df00a632bdbfbcae9695c9a7d500e32
      lastState: {}
      name: kube-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:10:50Z"
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 192.168.107.2
  podIPs:
    - ip: 192.168.107.2
  qosClass: Burstable
  startTime: "2025-05-17T04:10:53Z"
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/config.hash: 2c751396421a49c88086824e924f213b
    kubernetes.io/config.mirror: 2c751396421a49c88086824e924f213b
    kubernetes.io/config.seen: "2025-05-17T04:10:48.360728608Z"
    kubernetes.io/config.source: file
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    component: kube-controller-manager
    tier: control-plane
  name: kube-controller-manager-demo-control-plane
  namespace: kube-system
  ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: demo-control-plane
      uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
  resourceVersion: "613"
  uid: becf4767-2d35-41cf-bca6-931fd768a5bd
spec:
  containers:
    - command:
        - kube-controller-manager
        - --allocate-node-cidrs=true
        - --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf
        - --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf
        - --bind-address=127.0.0.1
        - --client-ca-file=/etc/kubernetes/pki/ca.crt
        - --cluster-cidr=10.244.0.0/16
        - --cluster-name=demo
        - --cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt
        - --cluster-signing-key-file=/etc/kubernetes/pki/ca.key
        - --controllers=*,bootstrapsigner,tokencleaner
        - --enable-hostpath-provisioner=true
        - --kubeconfig=/etc/kubernetes/controller-manager.conf
        - --leader-elect=true
        - --requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt
        - --root-ca-file=/etc/kubernetes/pki/ca.crt
        - --service-account-private-key-file=/etc/kubernetes/pki/sa.key
        - --service-cluster-ip-range=10.96.0.0/16
        - --use-service-account-credentials=true
      image: registry.k8s.io/kube-controller-manager:v1.32.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-controller-manager
      resources:
        requests:
          cpu: 200m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /healthz
          port: 10257
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/ssl/certs
          name: ca-certs
          readOnly: true
        - mountPath: /etc/ca-certificates
          name: etc-ca-certificates
          readOnly: true
        - mountPath: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
          name: flexvolume-dir
        - mountPath: /etc/kubernetes/pki
          name: k8s-certs
          readOnly: true
        - mountPath: /etc/kubernetes/controller-manager.conf
          name: kubeconfig
          readOnly: true
        - mountPath: /usr/local/share/ca-certificates
          name: usr-local-share-ca-certificates
          readOnly: true
        - mountPath: /usr/share/ca-certificates
          name: usr-share-ca-certificates
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      operator: Exists
  volumes:
    - hostPath:
        path: /etc/ssl/certs
        type: DirectoryOrCreate
      name: ca-certs
    - hostPath:
        path: /etc/ca-certificates
        type: DirectoryOrCreate
      name: etc-ca-certificates
    - hostPath:
        path: /usr/libexec/kubernetes/kubelet-plugins/volume/exec
        type: DirectoryOrCreate
      name: flexvolume-dir
    - hostPath:
        path: /etc/kubernetes/pki
        type: DirectoryOrCreate
      name: k8s-certs
    - hostPath:
        path: /etc/kubernetes/controller-manager.conf
        type: FileOrCreate
      name: kubeconfig
    - hostPath:
        path: /usr/local/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-local-share-ca-certificates
    - hostPath:
        path: /usr/share/ca-certificates
        type: DirectoryOrCreate
      name: usr-share-ca-certificates
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://cdf269748c39116c34b070cf2e499496d48cb0cfa190c2ae17dc0e2e40ce7439
      image: registry.k8s.io/kube-controller-manager-arm64:v1.32.2
      imageID: sha256:3c9285acfd2ff7915bb451cc40ac060366ac519f3fef00c455f5aca0e0346c4d
      lastState: {}
      name: kube-controller-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:10:50Z"
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 192.168.107.2
  podIPs:
    - ip: 192.168.107.2
  qosClass: Burstable
  startTime: "2025-05-17T04:10:53Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  generateName: kube-proxy-
  labels:
    controller-revision-hash: 7bb84c4984
    k8s-app: kube-proxy
    pod-template-generation: "1"
  name: kube-proxy-xh5qb
  namespace: kube-system
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 016a2fe0-2c7d-41f5-9661-33d7f3592d7d
  resourceVersion: "425"
  uid: 0e14aae8-9d2b-4d0d-918e-06ec1648e30f
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchFields:
              - key: metadata.name
                operator: In
                values:
                  - demo-control-plane
  containers:
    - command:
        - /usr/local/bin/kube-proxy
        - --config=/var/lib/kube-proxy/config.conf
        - --hostname-override=$(NODE_NAME)
      env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
      image: registry.k8s.io/kube-proxy:v1.32.2
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/lib/kube-proxy
          name: kube-proxy
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-nmklh
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: demo-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kube-proxy
  serviceAccountName: kube-proxy
  terminationGracePeriodSeconds: 30
  tolerations:
    - operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
  volumes:
    - configMap:
        defaultMode: 420
        name: kube-proxy
      name: kube-proxy
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: xtables-lock
    - hostPath:
        path: /lib/modules
        type: ""
      name: lib-modules
    - name: kube-api-access-nmklh
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:00Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:59Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://e83a4640ab20e1619d5d8a5d0695749cd112db88d775db1b315d655461b6c980
      image: registry.k8s.io/kube-proxy-arm64:v1.32.2
      imageID: sha256:e5aac5df76d9b8dc899ab8c4db25a7648e7fb25cafe7a155066247883c78f062
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:10:59Z"
      volumeMounts:
        - mountPath: /var/lib/kube-proxy
          name: kube-proxy
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
          recursiveReadOnly: Disabled
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-nmklh
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 192.168.107.2
  podIPs:
    - ip: 192.168.107.2
  qosClass: BestEffort
  startTime: "2025-05-17T04:10:59Z"
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubernetes.io/config.hash: 167a80a11e882d5330e241139c569ad7
    kubernetes.io/config.mirror: 167a80a11e882d5330e241139c569ad7
    kubernetes.io/config.seen: "2025-05-17T04:10:48.360728983Z"
    kubernetes.io/config.source: file
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    component: kube-scheduler
    tier: control-plane
  name: kube-scheduler-demo-control-plane
  namespace: kube-system
  ownerReferences:
    - apiVersion: v1
      controller: true
      kind: Node
      name: demo-control-plane
      uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
  resourceVersion: "615"
  uid: 5ac89c0a-f3d0-40bd-8149-60da8a98ad2e
spec:
  containers:
    - command:
        - kube-scheduler
        - --authentication-kubeconfig=/etc/kubernetes/scheduler.conf
        - --authorization-kubeconfig=/etc/kubernetes/scheduler.conf
        - --bind-address=127.0.0.1
        - --kubeconfig=/etc/kubernetes/scheduler.conf
        - --leader-elect=true
      image: registry.k8s.io/kube-scheduler:v1.32.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 8
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: kube-scheduler
      readinessProbe:
        failureThreshold: 3
        httpGet:
          host: 127.0.0.1
          path: /readyz
          port: 10259
          scheme: HTTPS
        periodSeconds: 1
        successThreshold: 1
        timeoutSeconds: 15
      resources:
        requests:
          cpu: 100m
      startupProbe:
        failureThreshold: 24
        httpGet:
          host: 127.0.0.1
          path: /livez
          port: 10259
          scheme: HTTPS
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/kubernetes/scheduler.conf
          name: kubeconfig
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  hostNetwork: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      operator: Exists
  volumes:
    - hostPath:
        path: /etc/kubernetes/scheduler.conf
        type: FileOrCreate
      name: kubeconfig
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:10:53Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://147c4447714ffb8f2064911c09d553a3abf3bc9f0b57d791a7f8e1abdb8f8279
      image: registry.k8s.io/kube-scheduler-arm64:v1.32.2
      imageID: sha256:82dfa03f692fb5d84f66c17d6ee9126b081182152b25d28ea456d89b7d5d8911
      lastState: {}
      name: kube-scheduler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:10:50Z"
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 192.168.107.2
  podIPs:
    - ip: 192.168.107.2
  qosClass: Burstable
  startTime: "2025-05-17T04:10:53Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  generateName: kyverno-admission-controller-6468f4bbd4-
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 6468f4bbd4
  name: kyverno-admission-controller-6468f4bbd4-tgs2z
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-admission-controller-6468f4bbd4
      uid: 7246e068-bcba-4c94-966e-36fc2621a774
  resourceVersion: "641"
  uid: 85f2627a-c64a-4c4d-befa-d84986c51519
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - admission-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
  containers:
    - args:
        - --caSecretName=kyverno-svc.kyverno.svc.kyverno-tls-ca
        - --tlsSecretName=kyverno-svc.kyverno.svc.kyverno-tls-pair
        - --backgroundServiceAccountName=system:serviceaccount:kyverno:kyverno-background-controller
        - --servicePort=443
        - --disableMetrics=false
        - --otelConfig=prometheus
        - --metricsPort=8000
        - --admissionReports=true
        - --autoUpdateWebhooks=true
        - --enableConfigMapCaching=true
        - --enableDeferredLoading=true
        - --dumpPayload=false
        - --forceFailurePolicyIgnore=false
        - --generateValidatingAdmissionPolicy=false
        - --loggingFormat=text
        - --v=2
        - --enablePolicyException=true
        - --protectManagedResources=false
        - --allowInsecureRegistry=false
        - --registryCredentialHelpers=default,google,amazon,azure,github
      env:
        - name: INIT_CONFIG
          value: kyverno
        - name: METRICS_CONFIG
          value: kyverno-metrics
        - name: KYVERNO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KYVERNO_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KYVERNO_SERVICEACCOUNT_NAME
          value: kyverno-admission-controller
        - name: KYVERNO_SVC
          value: kyverno-svc
        - name: TUF_ROOT
          value: /.sigstore
        - name: KYVERNO_DEPLOYMENT
          value: kyverno-admission-controller
      image: ghcr.io/kyverno/kyverno:v1.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: kyverno
      ports:
        - containerPort: 9443
          name: https
          protocol: TCP
        - containerPort: 8000
          name: metrics-port
          protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /health/readiness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 384Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 20
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 2
        periodSeconds: 6
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /.sigstore
          name: sigstore
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-cz4wc
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  initContainers:
    - args:
        - --loggingFormat=text
        - --v=2
      env:
        - name: KYVERNO_SERVICEACCOUNT_NAME
          value: kyverno-admission-controller
        - name: INIT_CONFIG
          value: kyverno
        - name: METRICS_CONFIG
          value: kyverno-metrics
        - name: KYVERNO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KYVERNO_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KYVERNO_DEPLOYMENT
          value: kyverno-admission-controller
        - name: KYVERNO_SVC
          value: kyverno-svc
      image: ghcr.io/kyverno/kyvernopre:v1.11.1
      imagePullPolicy: IfNotPresent
      name: kyverno-pre
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 10m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-cz4wc
          readOnly: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kyverno-admission-controller
  serviceAccountName: kyverno-admission-controller
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - emptyDir: {}
      name: sigstore
    - name: kube-api-access-cz4wc
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with incomplete status: [kyverno-pre]'
      reason: ContainersNotInitialized
      status: "False"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [kyverno]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [kyverno]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: ghcr.io/kyverno/kyverno:v1.11.1
      imageID: ""
      lastState: {}
      name: kyverno
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
      volumeMounts:
        - mountPath: /.sigstore
          name: sigstore
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-cz4wc
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  initContainerStatuses:
    - image: ghcr.io/kyverno/kyvernopre:v1.11.1
      imageID: ""
      lastState: {}
      name: kyverno-pre
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: PodInitializing
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-cz4wc
          readOnly: true
          recursiveReadOnly: Disabled
  phase: Pending
  qosClass: Burstable
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  generateName: kyverno-background-controller-86d48fc7db-
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 86d48fc7db
  name: kyverno-background-controller-86d48fc7db-v8rcr
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-background-controller-86d48fc7db
      uid: e4b37928-b320-4272-91ca-c6106057a13d
  resourceVersion: "646"
  uid: 7d7c375f-1da8-4dcc-93d8-bfb822eef205
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - background-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
  containers:
    - args:
        - --disableMetrics=false
        - --otelConfig=prometheus
        - --metricsPort=8000
        - --enableConfigMapCaching=true
        - --enableDeferredLoading=true
        - --loggingFormat=text
        - --v=2
        - --enablePolicyException=true
      env:
        - name: KYVERNO_SERVICEACCOUNT_NAME
          value: kyverno-background-controller
        - name: KYVERNO_DEPLOYMENT
          value: kyverno-background-controller
        - name: INIT_CONFIG
          value: kyverno
        - name: METRICS_CONFIG
          value: kyverno-metrics
        - name: KYVERNO_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KYVERNO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
      image: ghcr.io/kyverno/background-controller:v1.11.1
      imagePullPolicy: IfNotPresent
      name: controller
      ports:
        - containerPort: 9443
          name: https
          protocol: TCP
        - containerPort: 8000
          name: metrics
          protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-pjgb9
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kyverno-background-controller
  serviceAccountName: kyverno-background-controller
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-pjgb9
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [controller]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [controller]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: ghcr.io/kyverno/background-controller:v1.11.1
      imageID: ""
      lastState: {}
      name: controller
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-pjgb9
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Pending
  qosClass: Burstable
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  generateName: kyverno-cleanup-controller-7766d9df55-
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 7766d9df55
  name: kyverno-cleanup-controller-7766d9df55-z57hq
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-cleanup-controller-7766d9df55
      uid: e1d316e6-753b-435b-93b7-e422c70c6937
  resourceVersion: "648"
  uid: 81ad58a5-b432-48b9-bafa-353dd8a1bc3d
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - cleanup-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
  containers:
    - args:
        - --caSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
        - --tlsSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
        - --servicePort=443
        - --disableMetrics=false
        - --otelConfig=prometheus
        - --metricsPort=8000
        - --enableDeferredLoading=true
        - --dumpPayload=false
        - --loggingFormat=text
        - --v=2
        - --ttlReconciliationInterval=1m
      env:
        - name: KYVERNO_DEPLOYMENT
          value: kyverno-cleanup-controller
        - name: INIT_CONFIG
          value: kyverno
        - name: METRICS_CONFIG
          value: kyverno-metrics
        - name: KYVERNO_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KYVERNO_SERVICEACCOUNT_NAME
          value: kyverno-cleanup-controller
        - name: KYVERNO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KYVERNO_SVC
          value: kyverno-cleanup-controller
      image: ghcr.io/kyverno/cleanup-controller:v1.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 2
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 15
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 5
      name: controller
      ports:
        - containerPort: 9443
          name: https
          protocol: TCP
        - containerPort: 8000
          name: metrics
          protocol: TCP
      readinessProbe:
        failureThreshold: 6
        httpGet:
          path: /health/readiness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 20
        httpGet:
          path: /health/liveness
          port: 9443
          scheme: HTTPS
        initialDelaySeconds: 2
        periodSeconds: 6
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-z5ncx
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kyverno-cleanup-controller
  serviceAccountName: kyverno-cleanup-controller
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-z5ncx
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [controller]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [controller]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: ghcr.io/kyverno/cleanup-controller:v1.11.1
      imageID: ""
      lastState: {}
      name: controller
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-z5ncx
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Pending
  qosClass: Burstable
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  generateName: kyverno-reports-controller-8c4667558-
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 8c4667558
  name: kyverno-reports-controller-8c4667558-zt6sf
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kyverno-reports-controller-8c4667558
      uid: 472bedf1-9f1a-4382-aec6-ee839bc5fc6c
  resourceVersion: "649"
  uid: 3a10ff5c-017c-42e1-bd43-d95e5ac6242f
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - reports-controller
            topologyKey: kubernetes.io/hostname
          weight: 1
  containers:
    - args:
        - --disableMetrics=false
        - --otelConfig=prometheus
        - --metricsPort=8000
        - --admissionReports=true
        - --aggregateReports=true
        - --policyReports=true
        - --validatingAdmissionPolicyReports=false
        - --backgroundScan=true
        - --backgroundScanWorkers=2
        - --backgroundScanInterval=1h
        - --skipResourceFilters=true
        - --enableConfigMapCaching=true
        - --enableDeferredLoading=true
        - --loggingFormat=text
        - --v=2
        - --enablePolicyException=true
        - --reportsChunkSize=1000
        - --allowInsecureRegistry=false
        - --registryCredentialHelpers=default,google,amazon,azure,github
      env:
        - name: KYVERNO_SERVICEACCOUNT_NAME
          value: kyverno-reports-controller
        - name: KYVERNO_DEPLOYMENT
          value: kyverno-reports-controller
        - name: INIT_CONFIG
          value: kyverno
        - name: METRICS_CONFIG
          value: kyverno-metrics
        - name: KYVERNO_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KYVERNO_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: TUF_ROOT
          value: /.sigstore
      image: ghcr.io/kyverno/reports-controller:v1.11.1
      imagePullPolicy: IfNotPresent
      name: controller
      ports:
        - containerPort: 9443
          name: https
          protocol: TCP
        - containerPort: 8000
          name: metrics
          protocol: TCP
      resources:
        limits:
          memory: 128Mi
        requests:
          cpu: 100m
          memory: 64Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        privileged: false
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /.sigstore
          name: sigstore
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-6qd66
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: demo-control-plane
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: kyverno-reports-controller
  serviceAccountName: kyverno-reports-controller
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - emptyDir: {}
      name: sigstore
    - name: kube-api-access-6qd66
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "False"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [controller]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: 'containers with unready status: [controller]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - image: ghcr.io/kyverno/reports-controller:v1.11.1
      imageID: ""
      lastState: {}
      name: controller
      ready: false
      restartCount: 0
      started: false
      state:
        waiting:
          reason: ContainerCreating
      volumeMounts:
        - mountPath: /.sigstore
          name: sigstore
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-6qd66
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Pending
  qosClass: Burstable
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  generateName: local-path-provisioner-7dc846544d-
  labels:
    app: local-path-provisioner
    pod-template-hash: 7dc846544d
  name: local-path-provisioner-7dc846544d-p8nhl
  namespace: local-path-storage
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: local-path-provisioner-7dc846544d
      uid: 98a15e7a-aaae-4d7b-8657-9254dc0e0439
  resourceVersion: "675"
  uid: c3c2c50b-37d8-4a8f-ba7a-d7e13c301adb
spec:
  containers:
    - command:
        - local-path-provisioner
        - --debug
        - start
        - --helper-image
        - docker.io/kindest/local-path-helper:v20241212-8ac705d0
        - --config
        - /etc/config/config.json
      env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CONFIG_MOUNT_PATH
          value: /etc/config/
      image: docker.io/kindest/local-path-provisioner:v20250214-acbabc1a
      imagePullPolicy: IfNotPresent
      name: local-path-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /etc/config/
          name: config-volume
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-856mg
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: demo-control-plane
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: local-path-provisioner-service-account
  serviceAccountName: local-path-provisioner-service-account
  terminationGracePeriodSeconds: 30
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/control-plane
      operator: Equal
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Equal
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - configMap:
        defaultMode: 420
        name: local-path-config
      name: config-volume
    - name: kube-api-access-856mg
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-17T04:11:10Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://ebc7d8103d3dd2ab3d2f9b9a2df277aaecb4ac7890f93dd41f0daf9ef49e8874
      image: docker.io/kindest/local-path-provisioner:v20250214-acbabc1a
      imageID: sha256:653e2348b2d4ab640e418f5eade4c0335d4f648b83ca46a69c96fb382ed26dd2
      lastState: {}
      name: local-path-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-17T04:11:11Z"
      volumeMounts:
        - mountPath: /etc/config/
          name: config-volume
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-856mg
          readOnly: true
          recursiveReadOnly: Disabled
  hostIP: 192.168.107.2
  hostIPs:
    - ip: 192.168.107.2
  phase: Running
  podIP: 10.244.0.6
  podIPs:
    - ip: 10.244.0.6
  qosClass: BestEffort
  startTime: "2025-05-17T04:11:10Z"
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    component: apiserver
    provider: kubernetes
  name: kubernetes
  namespace: default
  resourceVersion: "199"
  uid: b9403c16-24e1-4687-8e3d-4afa449fc914
spec:
  clusterIP: 10.96.0.1
  clusterIPs:
    - 10.96.0.1
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 6443
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "9153"
    prometheus.io/scrape: "true"
  creationTimestamp: "2025-05-17T04:10:53Z"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
  resourceVersion: "283"
  uid: 1dcb5f9e-d6e3-46bc-af22-c6b0a5254b6e
spec:
  clusterIP: 10.96.0.10
  clusterIPs:
    - 10.96.0.10
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    - name: metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
  selector:
    k8s-app: kube-dns
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-background-controller-metrics
  namespace: kyverno
  resourceVersion: "542"
  uid: 3dbbe737-e886-49c5-a085-bb46e5846e60
spec:
  clusterIP: 10.96.158.118
  clusterIPs:
    - 10.96.158.118
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-controller
  namespace: kyverno
  resourceVersion: "546"
  uid: 0ddd4539-1dd5-49e3-9e34-5f745a1adbe3
spec:
  clusterIP: 10.96.220.210
  clusterIPs:
    - 10.96.220.210
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-controller-metrics
  namespace: kyverno
  resourceVersion: "550"
  uid: 69529c19-ea5a-4a7b-8355-8f7944ba0f9e
spec:
  clusterIP: 10.96.20.223
  clusterIPs:
    - 10.96.20.223
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-reports-controller-metrics
  namespace: kyverno
  resourceVersion: "554"
  uid: fe292c13-5063-4a3c-a2a1-496d11d4dc77
spec:
  clusterIP: 10.96.79.182
  clusterIPs:
    - 10.96.79.182
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-svc
  namespace: kyverno
  resourceVersion: "534"
  uid: 1017e9bf-f82b-49f1-a6f7-8deada4d2d45
spec:
  clusterIP: 10.96.121.33
  clusterIPs:
    - 10.96.121.33
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
  selector:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-svc-metrics
  namespace: kyverno
  resourceVersion: "538"
  uid: e6b74ffb-4bb0-49d0-b1d7-914a3c354467
spec:
  clusterIP: 10.96.70.69
  clusterIPs:
    - 10.96.70.69
  internalTrafficPolicy: Cluster
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  ports:
    - name: metrics-port
      port: 8000
      protocol: TCP
      targetPort: 8000
  selector:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:10:53Z"
  generation: 1
  labels:
    k8s-app: kube-dns
  name: coredns
  namespace: kube-system
  resourceVersion: "684"
  uid: 0f791acc-9729-44ba-a6cc-027ad3e6ee13
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-dns
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: k8s-app
                      operator: In
                      values:
                        - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - -conf
            - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9153
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/coredns
              name: config-volume
              readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: Corefile
                path: Corefile
            name: coredns
          name: config-volume
status:
  availableReplicas: 2
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:12Z"
      lastUpdateTime: "2025-05-17T04:11:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-17T04:10:59Z"
      lastUpdateTime: "2025-05-17T04:11:13Z"
      message: ReplicaSet "coredns-668d6bf9bc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
  updatedReplicas: 2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-admission-controller
  namespace: kyverno
  resourceVersion: "577"
  uid: fca0b96d-7fe6-4413-89cf-305204a9f4e8
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - admission-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --caSecretName=kyverno-svc.kyverno.svc.kyverno-tls-ca
            - --tlsSecretName=kyverno-svc.kyverno.svc.kyverno-tls-pair
            - --backgroundServiceAccountName=system:serviceaccount:kyverno:kyverno-background-controller
            - --servicePort=443
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --admissionReports=true
            - --autoUpdateWebhooks=true
            - --enableConfigMapCaching=true
            - --enableDeferredLoading=true
            - --dumpPayload=false
            - --forceFailurePolicyIgnore=false
            - --generateValidatingAdmissionPolicy=false
            - --loggingFormat=text
            - --v=2
            - --enablePolicyException=true
            - --protectManagedResources=false
            - --allowInsecureRegistry=false
            - --registryCredentialHelpers=default,google,amazon,azure,github
          env:
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-admission-controller
            - name: KYVERNO_SVC
              value: kyverno-svc
            - name: TUF_ROOT
              value: /.sigstore
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-admission-controller
          image: ghcr.io/kyverno/kyverno:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: kyverno
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics-port
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /.sigstore
              name: sigstore
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - --loggingFormat=text
            - --v=2
          env:
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-admission-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-admission-controller
            - name: KYVERNO_SVC
              value: kyverno-svc
          image: ghcr.io/kyverno/kyvernopre:v1.11.1
          imagePullPolicy: IfNotPresent
          name: kyverno-pre
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-admission-controller
      serviceAccountName: kyverno-admission-controller
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: sigstore
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: ReplicaSet "kyverno-admission-controller-6468f4bbd4" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-background-controller
  namespace: kyverno
  resourceVersion: "586"
  uid: c954fc45-8116-4276-a380-5a592544d7d0
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: background-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - background-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --enableConfigMapCaching=true
            - --enableDeferredLoading=true
            - --loggingFormat=text
            - --v=2
            - --enablePolicyException=true
          env:
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-background-controller
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-background-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: ghcr.io/kyverno/background-controller:v1.11.1
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-background-controller
      serviceAccountName: kyverno-background-controller
      terminationGracePeriodSeconds: 30
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: ReplicaSet "kyverno-background-controller-86d48fc7db" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-controller
  namespace: kyverno
  resourceVersion: "604"
  uid: f09850ac-9817-4c34-beae-9719ed56eb32
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: cleanup-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - cleanup-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --caSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
            - --tlsSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
            - --servicePort=443
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --enableDeferredLoading=true
            - --dumpPayload=false
            - --loggingFormat=text
            - --v=2
            - --ttlReconciliationInterval=1m
          env:
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-cleanup-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-cleanup-controller
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KYVERNO_SVC
              value: kyverno-cleanup-controller
          image: ghcr.io/kyverno/cleanup-controller:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: controller
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-cleanup-controller
      serviceAccountName: kyverno-cleanup-controller
      terminationGracePeriodSeconds: 30
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: ReplicaSet "kyverno-cleanup-controller-7766d9df55" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-reports-controller
  namespace: kyverno
  resourceVersion: "605"
  uid: e7cb8cae-4979-438f-a802-fb8b66cd9094
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: reports-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - reports-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --admissionReports=true
            - --aggregateReports=true
            - --policyReports=true
            - --validatingAdmissionPolicyReports=false
            - --backgroundScan=true
            - --backgroundScanWorkers=2
            - --backgroundScanInterval=1h
            - --skipResourceFilters=true
            - --enableConfigMapCaching=true
            - --enableDeferredLoading=true
            - --loggingFormat=text
            - --v=2
            - --enablePolicyException=true
            - --reportsChunkSize=1000
            - --allowInsecureRegistry=false
            - --registryCredentialHelpers=default,google,amazon,azure,github
          env:
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-reports-controller
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-reports-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: TUF_ROOT
              value: /.sigstore
          image: ghcr.io/kyverno/reports-controller:v1.11.1
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /.sigstore
              name: sigstore
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-reports-controller
      serviceAccountName: kyverno-reports-controller
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: sigstore
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: Deployment does not have minimum availability.
      reason: MinimumReplicasUnavailable
      status: "False"
      type: Available
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      lastUpdateTime: "2025-05-17T04:11:03Z"
      message: ReplicaSet "kyverno-reports-controller-8c4667558" is progressing.
      reason: ReplicaSetUpdated
      status: "True"
      type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"local-path-provisioner","namespace":"local-path-storage"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"local-path-provisioner"}},"template":{"metadata":{"labels":{"app":"local-path-provisioner"}},"spec":{"containers":[{"command":["local-path-provisioner","--debug","start","--helper-image","docker.io/kindest/local-path-helper:v20241212-8ac705d0","--config","/etc/config/config.json"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"CONFIG_MOUNT_PATH","value":"/etc/config/"}],"image":"docker.io/kindest/local-path-provisioner:v20250214-acbabc1a","imagePullPolicy":"IfNotPresent","name":"local-path-provisioner","volumeMounts":[{"mountPath":"/etc/config/","name":"config-volume"}]}],"nodeSelector":{"kubernetes.io/os":"linux"},"serviceAccountName":"local-path-provisioner-service-account","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/control-plane","operator":"Equal"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal"}],"volumes":[{"configMap":{"name":"local-path-config"},"name":"config-volume"}]}}}}
  creationTimestamp: "2025-05-17T04:10:55Z"
  generation: 1
  name: local-path-provisioner
  namespace: local-path-storage
  resourceVersion: "678"
  uid: 95d41887-66b1-4ef3-a090-9d595c199c16
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: local-path-provisioner
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: local-path-provisioner
    spec:
      containers:
        - command:
            - local-path-provisioner
            - --debug
            - start
            - --helper-image
            - docker.io/kindest/local-path-helper:v20241212-8ac705d0
            - --config
            - /etc/config/config.json
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CONFIG_MOUNT_PATH
              value: /etc/config/
          image: docker.io/kindest/local-path-provisioner:v20250214-acbabc1a
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/config/
              name: config-volume
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: local-path-provisioner-service-account
      serviceAccountName: local-path-provisioner-service-account
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
      volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
status:
  availableReplicas: 1
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:12Z"
      lastUpdateTime: "2025-05-17T04:11:12Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-05-17T04:10:59Z"
      lastUpdateTime: "2025-05-17T04:11:12Z"
      message: ReplicaSet "local-path-provisioner-7dc846544d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  creationTimestamp: "2025-05-17T04:10:54Z"
  generation: 1
  labels:
    app: kindnet
    k8s-app: kindnet
    tier: node
  name: kindnet
  namespace: kube-system
  resourceVersion: "424"
  uid: eef7ac51-ad54-47be-beea-7b420a02ec71
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kindnet
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: kindnet
        k8s-app: kindnet
        tier: node
    spec:
      containers:
        - env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: POD_SUBNET
              value: 10.244.0.0/16
            - name: CONTROL_PLANE_ENDPOINT
              value: demo-control-plane:6443
          image: docker.io/kindest/kindnetd:v20250214-acbabc1a
          imagePullPolicy: IfNotPresent
          name: kindnet-cni
          resources:
            limits:
              cpu: 100m
              memory: 50Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
                - NET_RAW
                - NET_ADMIN
            privileged: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/cni/net.d
              name: cni-cfg
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kindnet
      serviceAccountName: kindnet
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
      volumes:
        - hostPath:
            path: /etc/cni/net.d
            type: ""
          name: cni-cfg
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
status:
  currentNumberScheduled: 1
  desiredNumberScheduled: 1
  numberAvailable: 1
  numberMisscheduled: 0
  numberReady: 1
  observedGeneration: 1
  updatedNumberScheduled: 1
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    deprecated.daemonset.template.generation: "1"
  creationTimestamp: "2025-05-17T04:10:53Z"
  generation: 1
  labels:
    k8s-app: kube-proxy
  name: kube-proxy
  namespace: kube-system
  resourceVersion: "426"
  uid: 016a2fe0-2c7d-41f5-9661-33d7f3592d7d
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kube-proxy
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-proxy
    spec:
      containers:
        - command:
            - /usr/local/bin/kube-proxy
            - --config=/var/lib/kube-proxy/config.conf
            - --hostname-override=$(NODE_NAME)
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: registry.k8s.io/kube-proxy:v1.32.2
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /var/lib/kube-proxy
              name: kube-proxy
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kube-proxy
      serviceAccountName: kube-proxy
      terminationGracePeriodSeconds: 30
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            defaultMode: 420
            name: kube-proxy
          name: kube-proxy
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - hostPath:
            path: /lib/modules
            type: ""
          name: lib-modules
  updateStrategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
status:
  currentNumberScheduled: 1
  desiredNumberScheduled: 1
  numberAvailable: 1
  numberMisscheduled: 0
  numberReady: 1
  observedGeneration: 1
  updatedNumberScheduled: 1
---
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: cleanup
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-admission-reports
  namespace: kyverno
  resourceVersion: "596"
  uid: e0a19864-604f-4860-a872-580e19ae4637
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - command:
                - /bin/sh
                - -c
                - |
                  COUNT=$(kubectl get admissionreports.kyverno.io -A | wc -l)
                  if [ "$COUNT" -gt 10000 ]; then
                    echo "too many reports found ($COUNT), cleaning up..."
                    kubectl delete admissionreports.kyverno.io -A -l='!audit.kyverno.io/report.aggregate'
                  else
                    echo "($COUNT) reports found, no clean up needed"
                  fi
              image: bitnami/kubectl:1.26.10
              imagePullPolicy: IfNotPresent
              name: cleanup
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: kyverno-cleanup-jobs
          serviceAccountName: kyverno-cleanup-jobs
          terminationGracePeriodSeconds: 30
  schedule: '*/10 * * * *'
  successfulJobsHistoryLimit: 1
  suspend: false
status: {}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: cleanup
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-cluster-admission-reports
  namespace: kyverno
  resourceVersion: "606"
  uid: f968c793-4f77-41a6-adb1-a58cd99acb2a
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    metadata:
      creationTimestamp: null
    spec:
      template:
        metadata:
          creationTimestamp: null
        spec:
          containers:
            - command:
                - /bin/sh
                - -c
                - |
                  COUNT=$(kubectl get clusteradmissionreports.kyverno.io -A | wc -l)
                  if [ "$COUNT" -gt 10000 ]; then
                    echo "too many reports found ($COUNT), cleaning up..."
                    kubectl delete clusteradmissionreports.kyverno.io -A -l='!audit.kyverno.io/report.aggregate'
                  else
                    echo "($COUNT) reports found, no clean up needed"
                  fi
              image: bitnami/kubectl:1.26.4
              imagePullPolicy: IfNotPresent
              name: cleanup
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - ALL
                privileged: false
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                seccompProfile:
                  type: RuntimeDefault
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: kyverno-cleanup-jobs
          serviceAccountName: kyverno-cleanup-jobs
          terminationGracePeriodSeconds: 30
  schedule: '*/10 * * * *'
  successfulJobsHistoryLimit: 1
  suspend: false
status: {}
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-root-ca.crt
  namespace: default
  resourceVersion: "384"
  uid: 881deaf0-a34b-49e5-97b4-c302c0a916b0
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-root-ca.crt
  namespace: kube-node-lease
  resourceVersion: "385"
  uid: 7e3b8033-ac4b-44cf-b424-c9f79880c17d
---
apiVersion: v1
data:
  jws-kubeconfig-abcdef: eyJhbGciOiJIUzI1NiIsImtpZCI6ImFiY2RlZiJ9..jJMj4ci2IYMQ3vNCPaLWAmCivhMBMwi_Z0-LccW_Grw
  kubeconfig: |
    apiVersion: v1
    clusters:
    - cluster:
        certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCVENDQWUyZ0F3SUJBZ0lJWG9ZSS81TDFCSEF3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TlRBMU1UY3dOREExTkRaYUZ3MHpOVEExTVRVd05ERXdORFphTUJVeApFekFSQmdOVkJBTVRDbXQxWW1WeWJtVjBaWE13Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUUNsVWwzc1JxT2hrblBkZ0JoMXl1K2M4TFgyaU9uQ2pQZk9EZ2tKc01QVGVsamUrbkVzbmozZk1UZlUKdXpYbCtpVDdkS3ZNNkloNTA1QVVDRUVFd0lGMUExaExwTVdCRmo5R05jT3VPdU1HV0hXUEU0WmEzNmZFQk4xTwpIcEtVRUhPaHM5cElkQkxrbzlyOHIrQVNQcTdveXdoSnhFWTUzQ1M1ZGdDWXI2L2JyZE56bHE0akI4bDVSN3RBCjlESWM5U1pkR21jbW93c21FVkZLOCt6NzJGRnQrSXBXK0ttYUpKMXhMSG1wRzcvSnR5K2U0UitZTnE0S0prRzAKbmp0dFBCY0JDb09nTDUyTHo0UDZoeEkwTzdMTkRGbWZBWUxxbU51TUxNbzJJYU1DdGIwWTJydDNmRWRjQnZBRQpPVjFqYWpsUjFwSlMyUzBaTHA2d2x5RzBkN1paQWdNQkFBR2pXVEJYTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJUYW95RDllV0VIdXRlaW9iMWJqQ2JXZEIxaUt6QVYKQmdOVkhSRUVEakFNZ2dwcmRXSmxjbTVsZEdWek1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmFGUU8xVlltUgpycjhZaW5FdlI3OU9XRWNLcHFVdEZ2OHVhVFNTVlRNb2V6Nmg5WUQ2U2xnNlBYZy81a2lUSmxOMkJIa2dDdElqClZrWURDVU54Q3VCeTBRMHVEa3hqY3RBZjcrRnlvQlFsdjVmMGMxMnRoY2FOOGpsbENvemVTeFBWSC9oR0RJRFcKUWVvNm9Ddnl3enF5aGdOd0ZBWXhFWk55Zi9KZXNSOFpBZGZNbXBoenVBY1BFbTFNR2NYRkxTQjY2S2d5dXI4TQp3UlFTWkFxWXA0NTRYWEU3OE4rY1dJWFZPYVhoTkNNOUQ5UVVreHhQNjY5VkVseTJFejZxSHEvZy9iNk1aaHRqCjZmWEJCaDhnVWRwcytZQjFJUGVzRmdHRGt1WlplTUhEcFBzNm81Z3FtT0J4bS9MZ3dkZzFxRlNEMzNrTnpKcW4KcEF1TFZaWEVZQWd6Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        server: https://demo-control-plane:6443
      name: ""
    contexts: null
    current-context: ""
    kind: Config
    preferences: {}
    users: null
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: cluster-info
  namespace: kube-public
  resourceVersion: "360"
  uid: 11d4d0ea-35bc-4324-b8fc-f49e7b0f271d
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-root-ca.crt
  namespace: kube-public
  resourceVersion: "386"
  uid: 8fc0d29c-e62d-40b5-a771-36e1d0c3f277
---
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
           lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30 {
           disable success cluster.local
           disable denial cluster.local
        }
        loop
        reload
        loadbalance
    }
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: coredns
  namespace: kube-system
  resourceVersion: "258"
  uid: 40aa884d-86af-4087-9c5c-d97f608c340d
---
apiVersion: v1
data:
  client-ca-file: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
  requestheader-allowed-names: '["front-proxy-client"]'
  requestheader-client-ca-file: |
    -----BEGIN CERTIFICATE-----
    MIIDETCCAfmgAwIBAgIILY7abefkCucwDQYJKoZIhvcNAQELBQAwGTEXMBUGA1UE
    AxMOZnJvbnQtcHJveHktY2EwHhcNMjUwNTE3MDQwNTQ2WhcNMzUwNTE1MDQxMDQ2
    WjAZMRcwFQYDVQQDEw5mcm9udC1wcm94eS1jYTCCASIwDQYJKoZIhvcNAQEBBQAD
    ggEPADCCAQoCggEBAMmPyYSJxTLJ9XgRZfbkXZPA8i7rs6x3c/npuSwUCrwqNzQs
    clgN++ytOE5D8OtqLTTr5sGNKzmmcyIL9OapDglvmClnkyQK+OB5mp8/NIyr+vqN
    Rm0YRokYkNkJ+eRWvfQAsw4w/Yt6H8hD6jL96lAtj6Dq1UNt3DTKgdDjTsyz70Uv
    Md2LE3CFxa54uMedhIiu2boUuQHDoeCcG04B65a5U2Lg3OJLyEs32QrSZvEHbl4P
    lcWhNNrHG3koXFBCXVKk4EizG5kSnxclFIvTDtTajTgNR+KarpNGIgPWvzBye9ND
    Au0USLmHljAX5Dj7sLs55NmECs8hZJ2pK2XOxgcCAwEAAaNdMFswDgYDVR0PAQH/
    BAQDAgKkMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFLeWXFRAX9YyuQ95vhs4
    S+fCc6cBMBkGA1UdEQQSMBCCDmZyb250LXByb3h5LWNhMA0GCSqGSIb3DQEBCwUA
    A4IBAQCs03WXEiUjL0CAGJ4yUwnnYWAqdrOxMMJ/KQ7FjjITGrIWv4g//Q9QsBh0
    mqIfvlTi/YJuxv7IrpW1iea9j+NmOjApMMppD3L/i79g9KGvYDHCNHqA/vCqK1/x
    TF5kfEZzd11cnhuaAjia8LZB6i30AkmNS8CXQ3JVgp32K+lR15TE8UWORHOCqgNN
    TpkZo55hoKN6rnkqkmemtJrH2Ia8IRcQg2hWjMPgnyqnu02JUpeINw5jGM7cRYLd
    3ahT6HZGnfTUe2gzSNnnvUtyAtuhAoUO47Uca0A1w4JXCvBBmsg6nr8uDwGXxNJq
    gBcm9BedZN1+gqfjgxB4w0qva/4F
    -----END CERTIFICATE-----
  requestheader-extra-headers-prefix: '["X-Remote-Extra-"]'
  requestheader-group-headers: '["X-Remote-Group"]'
  requestheader-username-headers: '["X-Remote-User"]'
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  name: extension-apiserver-authentication
  namespace: kube-system
  resourceVersion: "21"
  uid: 5352c72e-e642-4512-b047-f575316a2b78
---
apiVersion: v1
data:
  since: "2025-05-17"
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  name: kube-apiserver-legacy-service-account-token-tracking
  namespace: kube-system
  resourceVersion: "63"
  uid: 3b4d857d-22a3-4488-a667-08c022e697a1
---
apiVersion: v1
data:
  config.conf: |-
    apiVersion: kubeproxy.config.k8s.io/v1alpha1
    bindAddress: 0.0.0.0
    bindAddressHardFail: false
    clientConnection:
      acceptContentTypes: ""
      burst: 0
      contentType: ""
      kubeconfig: /var/lib/kube-proxy/kubeconfig.conf
      qps: 0
    clusterCIDR: 10.244.0.0/16
    configSyncPeriod: 0s
    conntrack:
      maxPerCore: 0
      min: null
      tcpBeLiberal: false
      tcpCloseWaitTimeout: null
      tcpEstablishedTimeout: null
      udpStreamTimeout: 0s
      udpTimeout: 0s
    detectLocal:
      bridgeInterface: ""
      interfaceNamePrefix: ""
    detectLocalMode: ""
    enableProfiling: false
    healthzBindAddress: ""
    hostnameOverride: ""
    iptables:
      localhostNodePorts: null
      masqueradeAll: false
      masqueradeBit: null
      minSyncPeriod: 1s
      syncPeriod: 0s
    ipvs:
      excludeCIDRs: null
      minSyncPeriod: 0s
      scheduler: ""
      strictARP: false
      syncPeriod: 0s
      tcpFinTimeout: 0s
      tcpTimeout: 0s
      udpTimeout: 0s
    kind: KubeProxyConfiguration
    logging:
      flushFrequency: 0
      options:
        json:
          infoBufferSize: "0"
        text:
          infoBufferSize: "0"
      verbosity: 0
    metricsBindAddress: ""
    mode: iptables
    nftables:
      masqueradeAll: false
      masqueradeBit: null
      minSyncPeriod: 0s
      syncPeriod: 0s
    nodePortAddresses: null
    oomScoreAdj: null
    portRange: ""
    showHiddenMetricsForVersion: ""
    winkernel:
      enableDSR: false
      forwardHealthCheckVip: false
      networkName: ""
      rootHnsEndpointName: ""
      sourceVip: ""
  kubeconfig.conf: |-
    apiVersion: v1
    kind: Config
    clusters:
    - cluster:
        certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        server: https://demo-control-plane:6443
      name: default
    contexts:
    - context:
        cluster: default
        namespace: default
        user: default
      name: default
    current-context: default
    users:
    - name: default
      user:
        tokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  labels:
    app: kube-proxy
  name: kube-proxy
  namespace: kube-system
  resourceVersion: "284"
  uid: 71449bcb-5fc1-48b9-8b9b-6833d6468458
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-root-ca.crt
  namespace: kube-system
  resourceVersion: "387"
  uid: acd065ae-de18-49e6-a237-d4b6c36ec1c6
---
apiVersion: v1
data:
  ClusterConfiguration: |
    apiServer:
      certSANs:
      - localhost
      - 127.0.0.1
      extraArgs:
      - name: runtime-config
        value: ""
    apiVersion: kubeadm.k8s.io/v1beta4
    caCertificateValidityPeriod: 87600h0m0s
    certificateValidityPeriod: 8760h0m0s
    certificatesDir: /etc/kubernetes/pki
    clusterName: demo
    controlPlaneEndpoint: demo-control-plane:6443
    controllerManager:
      extraArgs:
      - name: enable-hostpath-provisioner
        value: "true"
    dns: {}
    encryptionAlgorithm: RSA-2048
    etcd:
      local:
        dataDir: /var/lib/etcd
    imageRepository: registry.k8s.io
    kind: ClusterConfiguration
    kubernetesVersion: v1.32.2
    networking:
      dnsDomain: cluster.local
      podSubnet: 10.244.0.0/16
      serviceSubnet: 10.96.0.0/16
    proxy: {}
    scheduler: {}
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm-config
  namespace: kube-system
  resourceVersion: "241"
  uid: f5128074-a3ba-4f7c-834b-d2b0652fd41e
---
apiVersion: v1
data:
  kubelet: |
    apiVersion: kubelet.config.k8s.io/v1beta1
    authentication:
      anonymous:
        enabled: false
      webhook:
        cacheTTL: 0s
        enabled: true
      x509:
        clientCAFile: /etc/kubernetes/pki/ca.crt
    authorization:
      mode: Webhook
      webhook:
        cacheAuthorizedTTL: 0s
        cacheUnauthorizedTTL: 0s
    cgroupDriver: systemd
    cgroupRoot: /kubelet
    clusterDNS:
    - 10.96.0.10
    clusterDomain: cluster.local
    containerRuntimeEndpoint: ""
    cpuManagerReconcilePeriod: 0s
    crashLoopBackOff: {}
    evictionHard:
      imagefs.available: 0%
      nodefs.available: 0%
      nodefs.inodesFree: 0%
    evictionPressureTransitionPeriod: 0s
    failSwapOn: false
    fileCheckFrequency: 0s
    healthzBindAddress: 127.0.0.1
    healthzPort: 10248
    httpCheckFrequency: 0s
    imageGCHighThresholdPercent: 100
    imageMaximumGCAge: 0s
    imageMinimumGCAge: 0s
    kind: KubeletConfiguration
    logging:
      flushFrequency: 0
      options:
        json:
          infoBufferSize: "0"
        text:
          infoBufferSize: "0"
      verbosity: 0
    memorySwap: {}
    nodeStatusReportFrequency: 0s
    nodeStatusUpdateFrequency: 0s
    rotateCertificates: true
    runtimeRequestTimeout: 0s
    shutdownGracePeriod: 0s
    shutdownGracePeriodCriticalPods: 0s
    staticPodPath: /etc/kubernetes/manifests
    streamingConnectionIdleTimeout: 0s
    syncFrequency: 0s
    volumeStatsAggPeriod: 0s
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubelet-config
  namespace: kube-system
  resourceVersion: "244"
  uid: a5c0c9fa-2a7d-4256-b6f0-761973569b18
---
apiVersion: v1
data:
  logging: audit,authenticator
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"logging":"audit,authenticator"},"kind":"ConfigMap","metadata":{"annotations":{},"name":"eks-cluster-config","namespace":"kyverno-aws"}}
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: eks-cluster-config
  namespace: kyverno-aws
  resourceVersion: "410"
  uid: a4c1079c-2216-413a-b829-e77942fc43d0
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-root-ca.crt
  namespace: kyverno-aws
  resourceVersion: "407"
  uid: 990e4e8a-b230-40ad-bc8a-b491e4dcb3d4
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:11:02Z"
  name: kube-root-ca.crt
  namespace: kyverno
  resourceVersion: "432"
  uid: e5d91813-f458-4c93-add3-9360080c50aa
---
apiVersion: v1
data:
  defaultRegistry: docker.io
  enableDefaultRegistryMutation: "true"
  excludeGroups: system:nodes
  generateSuccessEvents: "false"
  resourceFilters: '[*/*,kyverno,*] [Event,*,*] [*/*,kube-system,*] [*/*,kube-public,*] [*/*,kube-node-lease,*] [Node,*,*] [Node/*,*,*] [APIService,*,*] [APIService/*,*,*] [TokenReview,*,*] [SubjectAccessReview,*,*] [SelfSubjectAccessReview,*,*] [Binding,*,*] [Pod/binding,*,*] [ReplicaSet,*,*] [ReplicaSet/*,*,*] [AdmissionReport,*,*] [AdmissionReport/*,*,*] [ClusterAdmissionReport,*,*] [ClusterAdmissionReport/*,*,*] [BackgroundScanReport,*,*] [BackgroundScanReport/*,*,*] [ClusterBackgroundScanReport,*,*] [ClusterBackgroundScanReport/*,*,*] [ClusterRole,*,kyverno:admission-controller] [ClusterRole,*,kyverno:admission-controller:core] [ClusterRole,*,kyverno:admission-controller:additional] [ClusterRole,*,kyverno:background-controller] [ClusterRole,*,kyverno:background-controller:core] [ClusterRole,*,kyverno:background-controller:additional] [ClusterRole,*,kyverno:cleanup-controller] [ClusterRole,*,kyverno:cleanup-controller:core] [ClusterRole,*,kyverno:cleanup-controller:additional] [ClusterRole,*,kyverno:reports-controller] [ClusterRole,*,kyverno:reports-controller:core] [ClusterRole,*,kyverno:reports-controller:additional] [ClusterRoleBinding,*,kyverno:admission-controller] [ClusterRoleBinding,*,kyverno:background-controller] [ClusterRoleBinding,*,kyverno:cleanup-controller] [ClusterRoleBinding,*,kyverno:reports-controller] [ServiceAccount,kyverno,kyverno-admission-controller] [ServiceAccount/*,kyverno,kyverno-admission-controller] [ServiceAccount,kyverno,kyverno-background-controller] [ServiceAccount/*,kyverno,kyverno-background-controller] [ServiceAccount,kyverno,kyverno-cleanup-controller] [ServiceAccount/*,kyverno,kyverno-cleanup-controller] [ServiceAccount,kyverno,kyverno-reports-controller] [ServiceAccount/*,kyverno,kyverno-reports-controller] [Role,kyverno,kyverno:admission-controller] [Role,kyverno,kyverno:background-controller] [Role,kyverno,kyverno:cleanup-controller] [Role,kyverno,kyverno:reports-controller] [RoleBinding,kyverno,kyverno:admission-controller] [RoleBinding,kyverno,kyverno:background-controller] [RoleBinding,kyverno,kyverno:cleanup-controller] [RoleBinding,kyverno,kyverno:reports-controller] [ConfigMap,kyverno,kyverno] [ConfigMap,kyverno,kyverno-metrics] [Deployment,kyverno,kyverno-admission-controller] [Deployment/*,kyverno,kyverno-admission-controller] [Deployment,kyverno,kyverno-background-controller] [Deployment/*,kyverno,kyverno-background-controller] [Deployment,kyverno,kyverno-cleanup-controller] [Deployment/*,kyverno,kyverno-cleanup-controller] [Deployment,kyverno,kyverno-reports-controller] [Deployment/*,kyverno,kyverno-reports-controller] [Pod,kyverno,kyverno-admission-controller-*] [Pod/*,kyverno,kyverno-admission-controller-*] [Pod,kyverno,kyverno-background-controller-*] [Pod/*,kyverno,kyverno-background-controller-*] [Pod,kyverno,kyverno-cleanup-controller-*] [Pod/*,kyverno,kyverno-cleanup-controller-*] [Pod,kyverno,kyverno-reports-controller-*] [Pod/*,kyverno,kyverno-reports-controller-*] [Job,kyverno,kyverno-hook-pre-delete] [Job/*,kyverno,kyverno-hook-pre-delete] [NetworkPolicy,kyverno,kyverno-admission-controller] [NetworkPolicy/*,kyverno,kyverno-admission-controller] [NetworkPolicy,kyverno,kyverno-background-controller] [NetworkPolicy/*,kyverno,kyverno-background-controller] [NetworkPolicy,kyverno,kyverno-cleanup-controller] [NetworkPolicy/*,kyverno,kyverno-cleanup-controller] [NetworkPolicy,kyverno,kyverno-reports-controller] [NetworkPolicy/*,kyverno,kyverno-reports-controller] [PodDisruptionBudget,kyverno,kyverno-admission-controller] [PodDisruptionBudget/*,kyverno,kyverno-admission-controller] [PodDisruptionBudget,kyverno,kyverno-background-controller] [PodDisruptionBudget/*,kyverno,kyverno-background-controller] [PodDisruptionBudget,kyverno,kyverno-cleanup-controller] [PodDisruptionBudget/*,kyverno,kyverno-cleanup-controller] [PodDisruptionBudget,kyverno,kyverno-reports-controller] [PodDisruptionBudget/*,kyverno,kyverno-reports-controller] [Service,kyverno,kyverno-svc] [Service/*,kyverno,kyverno-svc] [Service,kyverno,kyverno-svc-metrics] [Service/*,kyverno,kyverno-svc-metrics] [Service,kyverno,kyverno-background-controller-metrics] [Service/*,kyverno,kyverno-background-controller-metrics] [Service,kyverno,kyverno-cleanup-controller] [Service/*,kyverno,kyverno-cleanup-controller] [Service,kyverno,kyverno-cleanup-controller-metrics] [Service/*,kyverno,kyverno-cleanup-controller-metrics] [Service,kyverno,kyverno-reports-controller-metrics] [Service/*,kyverno,kyverno-reports-controller-metrics] [ServiceMonitor,kyverno,kyverno-admission-controller] [ServiceMonitor,kyverno,kyverno-background-controller] [ServiceMonitor,kyverno,kyverno-cleanup-controller] [ServiceMonitor,kyverno,kyverno-reports-controller] [Secret,kyverno,kyverno-svc.kyverno.svc.*] [Secret,kyverno,kyverno-cleanup-controller.kyverno.svc.*]'
  webhooks: '[{"namespaceSelector": {"matchExpressions": [{"key":"kubernetes.io/metadata.name","operator":"NotIn","values":["kyverno"]}]}}]'
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno
  namespace: kyverno
  resourceVersion: "438"
  uid: dceb4dbb-6019-4327-a95f-305f69ed1b42
---
apiVersion: v1
data:
  bucketBoundaries: 0.005, 0.01, 0.025, 0.05, 0.1, 0.25, 0.5, 1, 2.5, 5, 10, 15, 20, 25, 30
  namespaces: '{"exclude":[],"include":[]}'
kind: ConfigMap
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/component: config
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-metrics
  namespace: kyverno
  resourceVersion: "439"
  uid: 85c50654-ce80-4599-bd89-cae40adfb295
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MIIDBTCCAe2gAwIBAgIIXoYI/5L1BHAwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
    AxMKa3ViZXJuZXRlczAeFw0yNTA1MTcwNDA1NDZaFw0zNTA1MTUwNDEwNDZaMBUx
    EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
    AoIBAQClUl3sRqOhknPdgBh1yu+c8LX2iOnCjPfODgkJsMPTelje+nEsnj3fMTfU
    uzXl+iT7dKvM6Ih505AUCEEEwIF1A1hLpMWBFj9GNcOuOuMGWHWPE4Za36fEBN1O
    HpKUEHOhs9pIdBLko9r8r+ASPq7oywhJxEY53CS5dgCYr6/brdNzlq4jB8l5R7tA
    9DIc9SZdGmcmowsmEVFK8+z72FFt+IpW+KmaJJ1xLHmpG7/Jty+e4R+YNq4KJkG0
    njttPBcBCoOgL52Lz4P6hxI0O7LNDFmfAYLqmNuMLMo2IaMCtb0Y2rt3fEdcBvAE
    OV1jajlR1pJS2S0ZLp6wlyG0d7ZZAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
    BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTaoyD9eWEHuteiob1bjCbWdB1iKzAV
    BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQBaFQO1VYmR
    rr8YinEvR79OWEcKpqUtFv8uaTSSVTMoez6h9YD6Slg6PXg/5kiTJlN2BHkgCtIj
    VkYDCUNxCuBy0Q0uDkxjctAf7+FyoBQlv5f0c12thcaN8jllCozeSxPVH/hGDIDW
    Qeo6oCvywzqyhgNwFAYxEZNyf/JesR8ZAdfMmphzuAcPEm1MGcXFLSB66Kgyur8M
    wRQSZAqYp454XXE78N+cWIXVOaXhNCM9D9QUkxxP669VEly2Ez6qHq/g/b6MZhtj
    6fXBBh8gUdps+YB1IPesFgGDkuZZeMHDpPs6o5gqmOBxm/Lgwdg1qFSD33kNzJqn
    pAuLVZXEYAgz
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  annotations:
    kubernetes.io/description: Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters.
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-root-ca.crt
  namespace: local-path-storage
  resourceVersion: "388"
  uid: 1e46765c-3407-43bc-8223-d768d1af8bf2
---
apiVersion: v1
data:
  config.json: |-
    {
            "nodePathMap":[
            {
                    "node":"DEFAULT_PATH_FOR_NON_LISTED_NODES",
                    "paths":["/var/local-path-provisioner"]
            }
            ]
    }
  helperPod.yaml: |-
    apiVersion: v1
    kind: Pod
    metadata:
      name: helper-pod
    spec:
      priorityClassName: system-node-critical
      tolerations:
        - key: node.kubernetes.io/disk-pressure
          operator: Exists
          effect: NoSchedule
      containers:
      - name: helper-pod
        image: docker.io/kindest/local-path-helper:v20241212-8ac705d0
        imagePullPolicy: IfNotPresent
  setup: |-
    #!/bin/sh
    set -eu
    mkdir -m 0777 -p "$VOL_DIR"
  teardown: |-
    #!/bin/sh
    set -eu
    rm -rf "$VOL_DIR"
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"config.json":"{\n        \"nodePathMap\":[\n        {\n                \"node\":\"DEFAULT_PATH_FOR_NON_LISTED_NODES\",\n                \"paths\":[\"/var/local-path-provisioner\"]\n        }\n        ]\n}","helperPod.yaml":"apiVersion: v1\nkind: Pod\nmetadata:\n  name: helper-pod\nspec:\n  priorityClassName: system-node-critical\n  tolerations:\n    - key: node.kubernetes.io/disk-pressure\n      operator: Exists\n      effect: NoSchedule\n  containers:\n  - name: helper-pod\n    image: docker.io/kindest/local-path-helper:v20241212-8ac705d0\n    imagePullPolicy: IfNotPresent","setup":"#!/bin/sh\nset -eu\nmkdir -m 0777 -p \"$VOL_DIR\"","teardown":"#!/bin/sh\nset -eu\nrm -rf \"$VOL_DIR\""},"kind":"ConfigMap","metadata":{"annotations":{},"name":"local-path-config","namespace":"local-path-storage"}}
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: local-path-config
  namespace: local-path-storage
  resourceVersion: "319"
  uid: c1abb452-a59b-4c68-9b93-1a4f9d7c09d0
---
apiVersion: v1
data:
  auth-extra-groups: c3lzdGVtOmJvb3RzdHJhcHBlcnM6a3ViZWFkbTpkZWZhdWx0LW5vZGUtdG9rZW4=
  expiration: MjAyNS0wNS0xOFQwNDoxMDo1M1o=
  token-id: YWJjZGVm
  token-secret: MDEyMzQ1Njc4OWFiY2RlZg==
  usage-bootstrap-authentication: dHJ1ZQ==
  usage-bootstrap-signing: dHJ1ZQ==
kind: Secret
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: bootstrap-token-abcdef
  namespace: kube-system
  resourceVersion: "249"
  uid: 6b0721c5-e214-4a3f-8422-e8485e6e094e
type: bootstrap.kubernetes.io/token
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: default
  namespace: default
  resourceVersion: "354"
  uid: 83458555-34aa-4307-8757-4e5f8c9ed115
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: default
  namespace: kube-node-lease
  resourceVersion: "355"
  uid: 049b183a-4e59-43f6-9a37-dd749635a201
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: default
  namespace: kube-public
  resourceVersion: "356"
  uid: 52518adb-40b4-42b3-831f-09332a196634
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: attachdetach-controller
  namespace: kube-system
  resourceVersion: "329"
  uid: f228e622-b907-4831-9a1e-29bf662fe344
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: bootstrap-signer
  namespace: kube-system
  resourceVersion: "341"
  uid: 4f7f319d-1065-4868-b5f4-ce093d0eb21c
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: certificate-controller
  namespace: kube-system
  resourceVersion: "278"
  uid: 0cad2887-2d86-4abb-b22c-0a2e134c9a30
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:57Z"
  name: clusterrole-aggregation-controller
  namespace: kube-system
  resourceVersion: "335"
  uid: 829267cf-1060-41dd-9cd3-3177aacfeb18
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: coredns
  namespace: kube-system
  resourceVersion: "280"
  uid: 99cbbecf-8168-4eb7-ae3d-417a4066ec2d
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: cronjob-controller
  namespace: kube-system
  resourceVersion: "274"
  uid: 8e32f4d4-e242-4b60-bd01-3209e1456b75
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: daemon-set-controller
  namespace: kube-system
  resourceVersion: "271"
  uid: 325a08ac-05ff-4268-8978-f87713a21bf2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: default
  namespace: kube-system
  resourceVersion: "357"
  uid: 21d9281b-097c-444b-8624-f016d62169e7
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: deployment-controller
  namespace: kube-system
  resourceVersion: "273"
  uid: c6d6cb82-986c-458e-a967-3e79187f7505
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: disruption-controller
  namespace: kube-system
  resourceVersion: "277"
  uid: b8423b63-3b0e-4c21-abf9-cff3d5b9876f
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: endpoint-controller
  namespace: kube-system
  resourceVersion: "323"
  uid: f048ce57-93d0-40fe-bca5-d97e9a6fd613
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: endpointslice-controller
  namespace: kube-system
  resourceVersion: "293"
  uid: 71b7b757-9d09-47ff-842c-4be06e57647e
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: endpointslicemirroring-controller
  namespace: kube-system
  resourceVersion: "295"
  uid: a92fd5b1-fb2d-4783-96fe-414769d9e180
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: ephemeral-volume-controller
  namespace: kube-system
  resourceVersion: "290"
  uid: d47efcbd-0144-46b2-bf47-009fa3ef5d5c
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:57Z"
  name: expand-controller
  namespace: kube-system
  resourceVersion: "334"
  uid: 30b20550-870f-4e97-963c-c8d11788ecc9
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:56Z"
  name: generic-garbage-collector
  namespace: kube-system
  resourceVersion: "332"
  uid: e301a0f4-97a0-445b-88af-023e447d319f
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:57Z"
  name: horizontal-pod-autoscaler
  namespace: kube-system
  resourceVersion: "338"
  uid: b70aafe3-de85-436a-9ce9-860f6ecc4b3c
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: job-controller
  namespace: kube-system
  resourceVersion: "272"
  uid: 73cdd2a1-64fb-4fe2-be77-da963c9fd93d
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kindnet
  namespace: kube-system
  resourceVersion: "308"
  uid: d7bc32ef-1871-4131-93b0-2be1688f8582
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kube-proxy
  namespace: kube-system
  resourceVersion: "287"
  uid: 4cc16084-028b-46c5-a899-4b079e01eaef
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:56Z"
  name: legacy-service-account-token-cleaner
  namespace: kube-system
  resourceVersion: "330"
  uid: 698db69f-8200-41ee-95e8-ff172c973325
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:56Z"
  name: namespace-controller
  namespace: kube-system
  resourceVersion: "331"
  uid: 28e24703-c402-4992-96cf-c62514eb3bc3
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: node-controller
  namespace: kube-system
  resourceVersion: "269"
  uid: 9ecec715-a4de-4446-a637-6c2df46b5306
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: persistent-volume-binder
  namespace: kube-system
  resourceVersion: "286"
  uid: 45fb91a3-b948-41ef-8178-91550134edcb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: pod-garbage-collector
  namespace: kube-system
  resourceVersion: "320"
  uid: b868290d-7f02-4477-89d5-1ee90c828ae2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: pv-protection-controller
  namespace: kube-system
  resourceVersion: "289"
  uid: 48bc2427-ebfd-4461-bda1-025f4a224068
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:57Z"
  name: pvc-protection-controller
  namespace: kube-system
  resourceVersion: "336"
  uid: f6282aa1-d89a-43ad-b17a-9875001d9beb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: replicaset-controller
  namespace: kube-system
  resourceVersion: "342"
  uid: 2a56071f-b802-490a-8201-3130646ea715
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: replication-controller
  namespace: kube-system
  resourceVersion: "310"
  uid: badc363a-2d37-4f47-956a-9114eee62b43
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: resourcequota-controller
  namespace: kube-system
  resourceVersion: "305"
  uid: 7a8ed839-11a2-4d1d-a9ca-27e6c86a19eb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: root-ca-cert-publisher
  namespace: kube-system
  resourceVersion: "275"
  uid: 77a02a46-bc46-4f6d-b737-78531f4c6f9f
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:57Z"
  name: service-account-controller
  namespace: kube-system
  resourceVersion: "337"
  uid: 666de9f5-4581-452e-a0a1-a9637fc1605e
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: statefulset-controller
  namespace: kube-system
  resourceVersion: "325"
  uid: f2ad2b07-45d9-4173-8bca-84f47be7dabb
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: token-cleaner
  namespace: kube-system
  resourceVersion: "321"
  uid: 90e2ffc9-0d50-4ca5-8cf4-50e72e5d34e6
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: ttl-after-finished-controller
  namespace: kube-system
  resourceVersion: "322"
  uid: 6e3b8e28-18d9-4225-9961-1754ff62f542
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:56Z"
  name: ttl-controller
  namespace: kube-system
  resourceVersion: "333"
  uid: d1290dec-d930-428a-bf5b-da013eeb2388
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: validatingadmissionpolicy-status-controller
  namespace: kube-system
  resourceVersion: "276"
  uid: b7463c46-39ea-48f4-b77a-3483ca29ba65
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: default
  namespace: kyverno-aws
  resourceVersion: "406"
  uid: 4d37fa73-d4af-467b-b134-505034801f0c
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  name: default
  namespace: kyverno
  resourceVersion: "431"
  uid: ea49a9e5-178d-45bb-8282-1e1ce2938af2
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-admission-controller
  namespace: kyverno
  resourceVersion: "433"
  uid: f2b8dacd-ba4d-4844-afda-43c3c0206481
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-background-controller
  namespace: kyverno
  resourceVersion: "434"
  uid: bf2a587a-ab1f-4460-8d0b-be3770e26ac3
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-controller
  namespace: kyverno
  resourceVersion: "435"
  uid: 0e1fd0fe-eb91-43bf-986a-ef75e280aa07
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-jobs
  namespace: kyverno
  resourceVersion: "436"
  uid: e82cc51d-9255-4dc9-bb85-40e83a93b3aa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-reports-controller
  namespace: kyverno
  resourceVersion: "437"
  uid: ad559cb5-d2fe-435b-9ce4-d1373d3112b7
---
apiVersion: v1
kind: ServiceAccount
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: default
  namespace: local-path-storage
  resourceVersion: "358"
  uid: 078196e8-2170-48ef-a3f8-573fe63af2ee
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ServiceAccount","metadata":{"annotations":{},"name":"local-path-provisioner-service-account","namespace":"local-path-storage"}}
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: local-path-provisioner-service-account
  namespace: local-path-storage
  resourceVersion: "312"
  uid: 97b32dc5-f490-413d-b1bb-c1e5b49b059f
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:bootstrap-signer-clusterinfo
  namespace: kube-public
  resourceVersion: "256"
  uid: 9eb29951-64f6-4933-b6ba-92d8f80d91fa
rules:
  - apiGroups:
      - ""
    resourceNames:
      - cluster-info
    resources:
      - configmaps
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:bootstrap-signer
  namespace: kube-public
  resourceVersion: "184"
  uid: 7112f143-3920-459d-80de-6763d34f208d
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resourceNames:
      - cluster-info
    resources:
      - configmaps
    verbs:
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: extension-apiserver-authentication-reader
  namespace: kube-system
  resourceVersion: "185"
  uid: a74c75e3-5d15-4e10-ae43-56b93f85d289
rules:
  - apiGroups:
      - ""
    resourceNames:
      - extension-apiserver-authentication
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kube-proxy
  namespace: kube-system
  resourceVersion: "291"
  uid: d4a742a1-83f2-41dc-8d2d-83bcc7e8c4c8
rules:
  - apiGroups:
      - ""
    resourceNames:
      - kube-proxy
    resources:
      - configmaps
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:kubelet-config
  namespace: kube-system
  resourceVersion: "245"
  uid: f372d9a5-6d96-49db-a906-c5090570222c
rules:
  - apiGroups:
      - ""
    resourceNames:
      - kubelet-config
    resources:
      - configmaps
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:nodes-kubeadm-config
  namespace: kube-system
  resourceVersion: "242"
  uid: afa5d7d6-dc2e-4b8c-acb5-70a26e76e8ed
rules:
  - apiGroups:
      - ""
    resourceNames:
      - kubeadm-config
    resources:
      - configmaps
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system::leader-locking-kube-controller-manager
  namespace: kube-system
  resourceVersion: "189"
  uid: 14172d4d-c886-46ae-a73e-bbaf86e0f4f4
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - watch
  - apiGroups:
      - ""
    resourceNames:
      - kube-controller-manager
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leasecandidates
    verbs:
      - create
      - get
      - list
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system::leader-locking-kube-scheduler
  namespace: kube-system
  resourceVersion: "190"
  uid: ad4cd1f2-764d-4ae2-9183-1b51fac754f2
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - watch
  - apiGroups:
      - ""
    resourceNames:
      - kube-scheduler
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - list
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leasecandidates
    verbs:
      - create
      - get
      - list
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:bootstrap-signer
  namespace: kube-system
  resourceVersion: "186"
  uid: cdd339a4-edcc-426e-bf3f-814caf2084bc
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:cloud-provider
  namespace: kube-system
  resourceVersion: "187"
  uid: d5889bb1-3839-4b75-b1d5-09de2e4c9711
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:token-cleaner
  namespace: kube-system
  resourceVersion: "188"
  uid: ac75134d-b7d0-48bb-b03b-6c19cf1583ef
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:admission-controller
  namespace: kyverno
  resourceVersion: "521"
  uid: ca398686-3d53-4d5a-8a8c-4dc03ab0cab9
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - delete
  - apiGroups:
      - ""
    resourceNames:
      - kyverno
      - kyverno-metrics
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:background-controller
  namespace: kyverno
  resourceVersion: "522"
  uid: 9587dd1c-273f-4662-8886-7c0429fa7f87
rules:
  - apiGroups:
      - ""
    resourceNames:
      - kyverno
      - kyverno-metrics
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - kyverno-background-controller
    resources:
      - leases
    verbs:
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:cleanup-controller
  namespace: kyverno
  resourceVersion: "523"
  uid: f06070cb-02fd-4a56-8866-c63a1398dd15
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
  - apiGroups:
      - ""
    resourceNames:
      - kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
      - kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
    resources:
      - secrets
    verbs:
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resourceNames:
      - kyverno
      - kyverno-metrics
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - kyverno-cleanup-controller
    resources:
      - leases
    verbs:
      - delete
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:reports-controller
  namespace: kyverno
  resourceVersion: "525"
  uid: 6d5efdc0-9715-4b95-92a5-3c842a2e3336
rules:
  - apiGroups:
      - ""
    resourceNames:
      - kyverno
      - kyverno-metrics
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - kyverno-reports-controller
    resources:
      - leases
    verbs:
      - delete
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"Role","metadata":{"annotations":{},"name":"local-path-provisioner-role","namespace":"local-path-storage"},"rules":[{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch","create","patch","update","delete"]}]}
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: local-path-provisioner-role
  namespace: local-path-storage
  resourceVersion: "313"
  uid: a67b1439-9dbf-4937-97ec-ed9deb6252fe
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:bootstrap-signer-clusterinfo
  namespace: kube-public
  resourceVersion: "257"
  uid: d065064f-f0fd-4fa2-a2b9-ab248ffb5644
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeadm:bootstrap-signer-clusterinfo
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:anonymous
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:bootstrap-signer
  namespace: kube-public
  resourceVersion: "197"
  uid: f1930988-4475-4dd9-a78e-0b4657e02cd5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system:controller:bootstrap-signer
subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kube-proxy
  namespace: kube-system
  resourceVersion: "294"
  uid: 76285eb0-5dc9-4f9a-9b7b-9831e60bd714
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-proxy
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:kubelet-config
  namespace: kube-system
  resourceVersion: "246"
  uid: 6c93b985-fe03-446c-9ae3-787d501e3b6d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeadm:kubelet-config
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:nodes-kubeadm-config
  namespace: kube-system
  resourceVersion: "243"
  uid: ae32e4eb-54e7-4404-9b61-140b4df43caf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeadm:nodes-kubeadm-config
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system::extension-apiserver-authentication-reader
  namespace: kube-system
  resourceVersion: "191"
  uid: 010fd603-24c0-480f-b475-864e0c3b79fe
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: extension-apiserver-authentication-reader
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system::leader-locking-kube-controller-manager
  namespace: kube-system
  resourceVersion: "192"
  uid: 5a00978b-85be-4ef6-bc5a-fe6d229eb899
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system::leader-locking-kube-controller-manager
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
  - kind: ServiceAccount
    name: kube-controller-manager
    namespace: kube-system
  - kind: ServiceAccount
    name: leader-election-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system::leader-locking-kube-scheduler
  namespace: kube-system
  resourceVersion: "193"
  uid: 24fd315c-3841-49b3-b7bb-1b85f9002822
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system::leader-locking-kube-scheduler
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
  - kind: ServiceAccount
    name: kube-scheduler
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:bootstrap-signer
  namespace: kube-system
  resourceVersion: "194"
  uid: c60b8664-8545-48fe-82d3-61cc765d68c6
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system:controller:bootstrap-signer
subjects:
  - kind: ServiceAccount
    name: bootstrap-signer
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:cloud-provider
  namespace: kube-system
  resourceVersion: "195"
  uid: cb11df02-3856-4a81-bc90-a188f7366374
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system:controller:cloud-provider
subjects:
  - kind: ServiceAccount
    name: cloud-provider
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:token-cleaner
  namespace: kube-system
  resourceVersion: "196"
  uid: 9155df85-a6bd-411c-8b13-76fa0a5f1a66
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: system:controller:token-cleaner
subjects:
  - kind: ServiceAccount
    name: token-cleaner
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:admission-controller
  namespace: kyverno
  resourceVersion: "526"
  uid: e7e97a92-73d4-49d3-907b-e9af82bc9058
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kyverno:admission-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-admission-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:background-controller
  namespace: kyverno
  resourceVersion: "529"
  uid: 0b68952e-ebb1-4d02-9972-91118a23bbd7
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kyverno:background-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-background-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:cleanup-controller
  namespace: kyverno
  resourceVersion: "531"
  uid: c4e97b39-243c-4c18-9c7b-3cb85c3a2c45
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kyverno:cleanup-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-cleanup-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:reports-controller
  namespace: kyverno
  resourceVersion: "532"
  uid: 20899d2e-b145-4c45-a1b2-164ad00137b0
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kyverno:reports-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-reports-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"RoleBinding","metadata":{"annotations":{},"name":"local-path-provisioner-bind","namespace":"local-path-storage"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"Role","name":"local-path-provisioner-role"},"subjects":[{"kind":"ServiceAccount","name":"local-path-provisioner-service-account","namespace":"local-path-storage"}]}
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: local-path-provisioner-bind
  namespace: local-path-storage
  resourceVersion: "315"
  uid: d1401104-8f18-4ff8-a5c7-300fdb327a75
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: local-path-provisioner-role
subjects:
  - kind: ServiceAccount
    name: local-path-provisioner-service-account
    namespace: local-path-storage
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "2"
    deployment.kubernetes.io/max-replicas: "3"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:10:59Z"
  generation: 1
  labels:
    k8s-app: kube-dns
    pod-template-hash: 668d6bf9bc
  name: coredns-668d6bf9bc
  namespace: kube-system
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: 0f791acc-9729-44ba-a6cc-027ad3e6ee13
  resourceVersion: "683"
  uid: 3e739168-4743-4c1d-894f-1893888af90e
spec:
  replicas: 2
  selector:
    matchLabels:
      k8s-app: kube-dns
      pod-template-hash: 668d6bf9bc
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kube-dns
        pod-template-hash: 668d6bf9bc
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: k8s-app
                      operator: In
                      values:
                        - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - args:
            - -conf
            - /etc/coredns/Corefile
          image: registry.k8s.io/coredns/coredns:v1.11.3
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 9153
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 170Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/coredns
              name: config-volume
              readOnly: true
      dnsPolicy: Default
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: coredns
      serviceAccountName: coredns
      terminationGracePeriodSeconds: 30
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
      volumes:
        - configMap:
            defaultMode: 420
            items:
              - key: Corefile
                path: Corefile
            name: coredns
          name: config-volume
status:
  availableReplicas: 2
  fullyLabeledReplicas: 2
  observedGeneration: 1
  readyReplicas: 2
  replicas: 2
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 6468f4bbd4
  name: kyverno-admission-controller-6468f4bbd4
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-admission-controller
      uid: fca0b96d-7fe6-4413-89cf-305204a9f4e8
  resourceVersion: "569"
  uid: 7246e068-bcba-4c94-966e-36fc2621a774
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: admission-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
      pod-template-hash: 6468f4bbd4
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
        pod-template-hash: 6468f4bbd4
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - admission-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --caSecretName=kyverno-svc.kyverno.svc.kyverno-tls-ca
            - --tlsSecretName=kyverno-svc.kyverno.svc.kyverno-tls-pair
            - --backgroundServiceAccountName=system:serviceaccount:kyverno:kyverno-background-controller
            - --servicePort=443
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --admissionReports=true
            - --autoUpdateWebhooks=true
            - --enableConfigMapCaching=true
            - --enableDeferredLoading=true
            - --dumpPayload=false
            - --forceFailurePolicyIgnore=false
            - --generateValidatingAdmissionPolicy=false
            - --loggingFormat=text
            - --v=2
            - --enablePolicyException=true
            - --protectManagedResources=false
            - --allowInsecureRegistry=false
            - --registryCredentialHelpers=default,google,amazon,azure,github
          env:
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-admission-controller
            - name: KYVERNO_SVC
              value: kyverno-svc
            - name: TUF_ROOT
              value: /.sigstore
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-admission-controller
          image: ghcr.io/kyverno/kyverno:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: kyverno
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics-port
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 384Mi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /.sigstore
              name: sigstore
      dnsPolicy: ClusterFirst
      initContainers:
        - args:
            - --loggingFormat=text
            - --v=2
          env:
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-admission-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-admission-controller
            - name: KYVERNO_SVC
              value: kyverno-svc
          image: ghcr.io/kyverno/kyvernopre:v1.11.1
          imagePullPolicy: IfNotPresent
          name: kyverno-pre
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-admission-controller
      serviceAccountName: kyverno-admission-controller
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: sigstore
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  replicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 86d48fc7db
  name: kyverno-background-controller-86d48fc7db
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-background-controller
      uid: c954fc45-8116-4276-a380-5a592544d7d0
  resourceVersion: "579"
  uid: e4b37928-b320-4272-91ca-c6106057a13d
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: background-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
      pod-template-hash: 86d48fc7db
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: background-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
        pod-template-hash: 86d48fc7db
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - background-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --enableConfigMapCaching=true
            - --enableDeferredLoading=true
            - --loggingFormat=text
            - --v=2
            - --enablePolicyException=true
          env:
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-background-controller
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-background-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: ghcr.io/kyverno/background-controller:v1.11.1
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-background-controller
      serviceAccountName: kyverno-background-controller
      terminationGracePeriodSeconds: 30
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  replicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 7766d9df55
  name: kyverno-cleanup-controller-7766d9df55
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-cleanup-controller
      uid: f09850ac-9817-4c34-beae-9719ed56eb32
  resourceVersion: "602"
  uid: e1d316e6-753b-435b-93b7-e422c70c6937
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: cleanup-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
      pod-template-hash: 7766d9df55
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: cleanup-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
        pod-template-hash: 7766d9df55
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - cleanup-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --caSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-ca
            - --tlsSecretName=kyverno-cleanup-controller.kyverno.svc.kyverno-tls-pair
            - --servicePort=443
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --enableDeferredLoading=true
            - --dumpPayload=false
            - --loggingFormat=text
            - --v=2
            - --ttlReconciliationInterval=1m
          env:
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-cleanup-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-cleanup-controller
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KYVERNO_SVC
              value: kyverno-cleanup-controller
          image: ghcr.io/kyverno/cleanup-controller:v1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: controller
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 6
            httpGet:
              path: /health/readiness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 20
            httpGet:
              path: /health/liveness
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 6
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-cleanup-controller
      serviceAccountName: kyverno-cleanup-controller
      terminationGracePeriodSeconds: 30
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  replicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    pod-template-hash: 8c4667558
  name: kyverno-reports-controller-8c4667558
  namespace: kyverno
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kyverno-reports-controller
      uid: e7cb8cae-4979-438f-a802-fb8b66cd9094
  resourceVersion: "603"
  uid: 472bedf1-9f1a-4382-aec6-ee839bc5fc6c
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: reports-controller
      app.kubernetes.io/instance: kyverno
      app.kubernetes.io/part-of: kyverno
      pod-template-hash: 8c4667558
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: reports-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
        app.kubernetes.io/version: v1.11.1
        pod-template-hash: 8c4667558
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: In
                      values:
                        - reports-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --disableMetrics=false
            - --otelConfig=prometheus
            - --metricsPort=8000
            - --admissionReports=true
            - --aggregateReports=true
            - --policyReports=true
            - --validatingAdmissionPolicyReports=false
            - --backgroundScan=true
            - --backgroundScanWorkers=2
            - --backgroundScanInterval=1h
            - --skipResourceFilters=true
            - --enableConfigMapCaching=true
            - --enableDeferredLoading=true
            - --loggingFormat=text
            - --v=2
            - --enablePolicyException=true
            - --reportsChunkSize=1000
            - --allowInsecureRegistry=false
            - --registryCredentialHelpers=default,google,amazon,azure,github
          env:
            - name: KYVERNO_SERVICEACCOUNT_NAME
              value: kyverno-reports-controller
            - name: KYVERNO_DEPLOYMENT
              value: kyverno-reports-controller
            - name: INIT_CONFIG
              value: kyverno
            - name: METRICS_CONFIG
              value: kyverno-metrics
            - name: KYVERNO_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: KYVERNO_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: TUF_ROOT
              value: /.sigstore
          image: ghcr.io/kyverno/reports-controller:v1.11.1
          imagePullPolicy: IfNotPresent
          name: controller
          ports:
            - containerPort: 9443
              name: https
              protocol: TCP
            - containerPort: 8000
              name: metrics
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /.sigstore
              name: sigstore
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: kyverno-reports-controller
      serviceAccountName: kyverno-reports-controller
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: sigstore
status:
  fullyLabeledReplicas: 1
  observedGeneration: 1
  replicas: 1
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  annotations:
    deployment.kubernetes.io/desired-replicas: "1"
    deployment.kubernetes.io/max-replicas: "2"
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2025-05-17T04:10:59Z"
  generation: 1
  labels:
    app: local-path-provisioner
    pod-template-hash: 7dc846544d
  name: local-path-provisioner-7dc846544d
  namespace: local-path-storage
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: local-path-provisioner
      uid: 95d41887-66b1-4ef3-a090-9d595c199c16
  resourceVersion: "677"
  uid: 98a15e7a-aaae-4d7b-8657-9254dc0e0439
spec:
  replicas: 1
  selector:
    matchLabels:
      app: local-path-provisioner
      pod-template-hash: 7dc846544d
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: local-path-provisioner
        pod-template-hash: 7dc846544d
    spec:
      containers:
        - command:
            - local-path-provisioner
            - --debug
            - start
            - --helper-image
            - docker.io/kindest/local-path-helper:v20241212-8ac705d0
            - --config
            - /etc/config/config.json
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CONFIG_MOUNT_PATH
              value: /etc/config/
          image: docker.io/kindest/local-path-provisioner:v20250214-acbabc1a
          imagePullPolicy: IfNotPresent
          name: local-path-provisioner
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/config/
              name: config-volume
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: local-path-provisioner-service-account
      serviceAccountName: local-path-provisioner-service-account
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Equal
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
      volumes:
        - configMap:
            defaultMode: 420
            name: local-path-config
          name: config-volume
status:
  availableReplicas: 1
  fullyLabeledReplicas: 1
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
---
apiVersion: v1
kind: Endpoints
metadata:
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    endpointslice.kubernetes.io/skip-mirror: "true"
  name: kubernetes
  namespace: default
  resourceVersion: "201"
  uid: 3a66dfbb-5768-4f7f-95ed-00ce1c7fbbe1
subsets:
  - addresses:
      - ip: 192.168.107.2
    ports:
      - name: https
        port: 6443
        protocol: TCP
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:13Z"
  creationTimestamp: "2025-05-17T04:10:58Z"
  labels:
    k8s-app: kube-dns
    kubernetes.io/cluster-service: "true"
    kubernetes.io/name: CoreDNS
  name: kube-dns
  namespace: kube-system
  resourceVersion: "682"
  uid: 8187c57b-5a6b-485f-a5f0-7973676c11e8
subsets:
  - addresses:
      - ip: 10.244.0.3
        nodeName: demo-control-plane
        targetRef:
          kind: Pod
          name: coredns-668d6bf9bc-bjgbd
          namespace: kube-system
          uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
      - ip: 10.244.0.7
        nodeName: demo-control-plane
        targetRef:
          kind: Pod
          name: coredns-668d6bf9bc-z69zr
          namespace: kube-system
          uid: eba88ce4-1351-4842-b6d3-ea388af250ce
    ports:
      - name: dns-tcp
        port: 53
        protocol: TCP
      - name: dns
        port: 53
        protocol: UDP
      - name: metrics
        port: 9153
        protocol: TCP
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:03Z"
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-background-controller-metrics
  namespace: kyverno
  resourceVersion: "543"
  uid: fff8f317-b987-45a4-b908-1848409a52dc
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:03Z"
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-controller
  namespace: kyverno
  resourceVersion: "547"
  uid: 2c355d2f-ab91-4ac7-a9b0-59e483718a2a
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:03Z"
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-controller-metrics
  namespace: kyverno
  resourceVersion: "551"
  uid: 4505b019-57d3-4cf3-b437-35a8f6b41c42
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:03Z"
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-reports-controller-metrics
  namespace: kyverno
  resourceVersion: "556"
  uid: 31b58e38-9cc7-4f47-9618-87fea12a4e47
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:03Z"
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-svc
  namespace: kyverno
  resourceVersion: "535"
  uid: cacb23fc-f21c-4a26-8c03-e08b01f0ef77
---
apiVersion: v1
kind: Endpoints
metadata:
  annotations:
    endpoints.kubernetes.io/last-change-trigger-time: "2025-05-17T04:11:03Z"
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-svc-metrics
  namespace: kyverno
  resourceVersion: "539"
  uid: 1272bbe0-f3cf-4010-a315-6e929ccae2b0
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: Starting kubelet.
metadata:
  creationTimestamp: "2025-05-17T04:10:52Z"
  name: demo-control-plane.1840351baa6a0629
  namespace: default
  resourceVersion: "203"
  uid: bee39ca6-a58a-48bc-ac37-1d0a2f5d3256
reason: Starting
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 8
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: 'Node demo-control-plane status is now: NodeHasSufficientMemory'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351baaa8774b
  namespace: default
  resourceVersion: "226"
  uid: 1644b699-c2e3-4dd6-8586-284887d200d9
reason: NodeHasSufficientMemory
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 8
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: 'Node demo-control-plane status is now: NodeHasNoDiskPressure'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351baaa87e4b
  namespace: default
  resourceVersion: "227"
  uid: 5217fad4-52c5-4e44-bbe1-b6635f0090e6
reason: NodeHasNoDiskPressure
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 7
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: 'Node demo-control-plane status is now: NodeHasSufficientPID'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351baaa882da
  namespace: default
  resourceVersion: "225"
  uid: a077d36c-66e3-431a-8799-6ad7d45e4d3f
reason: NodeHasSufficientPID
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: Updated Node Allocatable limit across pods
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351baccf239c
  namespace: default
  resourceVersion: "207"
  uid: 4f9e7ee8-5495-4301-ae00-917ec1d489bd
reason: NodeAllocatableEnforced
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:53Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:53Z"
message: Starting kubelet.
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351ce19de0cb
  namespace: default
  resourceVersion: "259"
  uid: e30126e2-9678-4629-b388-c8f8e38983b7
reason: Starting
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:53Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:53Z"
message: Updated Node Allocatable limit across pods
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351ce2ba32ef
  namespace: default
  resourceVersion: "261"
  uid: 0d2928e0-b848-46f9-8692-c35fef9e6c7c
reason: NodeAllocatableEnforced
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:53Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:53Z"
message: 'Node demo-control-plane status is now: NodeHasSufficientMemory'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351ce8ce300d
  namespace: default
  resourceVersion: "265"
  uid: 0916e483-26bd-4838-8b87-2714b3ce3573
reason: NodeHasSufficientMemory
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:53Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:53Z"
message: 'Node demo-control-plane status is now: NodeHasNoDiskPressure'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351ce8ce39fb
  namespace: default
  resourceVersion: "267"
  uid: 41f79717-b6a1-4167-bb9e-b3cff77388c8
reason: NodeHasNoDiskPressure
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:53Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:10:53Z"
message: 'Node demo-control-plane status is now: NodeHasSufficientPID'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane.1840351ce8ce414e
  namespace: default
  resourceVersion: "268"
  uid: 7f7cda23-32cf-41bf-856b-1e54fbe258f6
reason: NodeHasSufficientPID
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:58Z"
involvedObject:
  apiVersion: v1
  kind: Node
  name: demo-control-plane
  uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
kind: Event
lastTimestamp: "2025-05-17T04:10:58Z"
message: 'Node demo-control-plane event: Registered Node demo-control-plane in Controller'
metadata:
  creationTimestamp: "2025-05-17T04:10:58Z"
  name: demo-control-plane.1840351dfb4c6e53
  namespace: default
  resourceVersion: "343"
  uid: f8f4a38e-fe7d-430c-8841-f6f815ca3234
reason: RegisteredNode
reportingComponent: node-controller
reportingInstance: ""
source:
  component: node-controller
type: Normal
---
action: StartKubeProxy
apiVersion: v1
eventTime: "2025-05-17T04:10:59.806899Z"
firstTimestamp: null
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: null
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: demo-control-plane.1840351e54bfd015
  namespace: default
  resourceVersion: "420"
  uid: f30ec58c-a34e-45a3-99ec-537d317cb807
reason: Starting
reportingComponent: kube-proxy
reportingInstance: kube-proxy-demo-control-plane
source: {}
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  kind: Node
  name: demo-control-plane
  uid: demo-control-plane
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: 'Node demo-control-plane status is now: NodeReady'
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: demo-control-plane.18403520ddba4496
  namespace: default
  resourceVersion: "624"
  uid: cea25f0f-cdf4-4367-b5de-75961ab8d70b
reason: NodeReady
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: nginx-demo
  namespace: default
  resourceVersion: "411"
  uid: aa5c55cc-95c1-435b-813a-9c04e895a994
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: nginx-demo.1840351e474badb1
  namespace: default
  resourceVersion: "412"
  uid: 96c8fde1-36a8-4a54-be70-6299e6a2f60f
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: nginx-demo
  namespace: default
  resourceVersion: "413"
  uid: aa5c55cc-95c1-435b-813a-9c04e895a994
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned default/nginx-demo to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: nginx-demo.18403520df84a4cf
  namespace: default
  resourceVersion: "635"
  uid: 4d2ea07b-9639-45ff-b5d5-3085c39fdf00
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{nginx}
  kind: Pod
  name: nginx-demo
  namespace: default
  resourceVersion: "627"
  uid: aa5c55cc-95c1-435b-813a-9c04e895a994
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Pulling image "nginx:stable"
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: nginx-demo.18403520fb7b09c0
  namespace: default
  resourceVersion: "653"
  uid: a0bf3776-8b46-49e6-b90a-e2d2a8a5116f
reason: Pulling
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: coredns-668d6bf9bc-bjgbd
  namespace: kube-system
  resourceVersion: "392"
  uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: coredns-668d6bf9bc-bjgbd.1840351e3d836dd4
  namespace: kube-system
  resourceVersion: "398"
  uid: 4969dddc-4b1f-49e7-bff4-95a3977ceb98
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: coredns-668d6bf9bc-bjgbd
  namespace: kube-system
  resourceVersion: "400"
  uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned kube-system/coredns-668d6bf9bc-bjgbd to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: coredns-668d6bf9bc-bjgbd.18403520dfb2cf40
  namespace: kube-system
  resourceVersion: "640"
  uid: 755eac72-0358-42c0-a380-c14bae3678c4
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{coredns}
  kind: Pod
  name: coredns-668d6bf9bc-bjgbd
  namespace: kube-system
  resourceVersion: "628"
  uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Container image "registry.k8s.io/coredns/coredns:v1.11.3" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: coredns-668d6bf9bc-bjgbd.18403520faccb149
  namespace: kube-system
  resourceVersion: "651"
  uid: 43d5d188-113b-4d30-8822-59fb3188511a
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{coredns}
  kind: Pod
  name: coredns-668d6bf9bc-bjgbd
  namespace: kube-system
  resourceVersion: "628"
  uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: 'Created container: coredns'
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: coredns-668d6bf9bc-bjgbd.1840352115eab422
  namespace: kube-system
  resourceVersion: "659"
  uid: f26849e1-11a2-4475-b491-e61c202fc755
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{coredns}
  kind: Pod
  name: coredns-668d6bf9bc-bjgbd
  namespace: kube-system
  resourceVersion: "628"
  uid: 0e13cd55-8312-4dc3-8782-6d0d6afd712f
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Started container coredns
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: coredns-668d6bf9bc-bjgbd.18403521183ed592
  namespace: kube-system
  resourceVersion: "662"
  uid: d397424d-42f1-4bbe-a56a-98b0ad12f547
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: coredns-668d6bf9bc-z69zr
  namespace: kube-system
  resourceVersion: "389"
  uid: eba88ce4-1351-4842-b6d3-ea388af250ce
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: coredns-668d6bf9bc-z69zr.1840351e3d023998
  namespace: kube-system
  resourceVersion: "393"
  uid: e6f447d0-274d-4754-9538-a2cebfefe96b
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: coredns-668d6bf9bc-z69zr
  namespace: kube-system
  resourceVersion: "395"
  uid: eba88ce4-1351-4842-b6d3-ea388af250ce
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned kube-system/coredns-668d6bf9bc-z69zr to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: coredns-668d6bf9bc-z69zr.18403520dfb31566
  namespace: kube-system
  resourceVersion: "642"
  uid: ac43ac41-3c55-486a-bce9-07d91c9dc5dc
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{coredns}
  kind: Pod
  name: coredns-668d6bf9bc-z69zr
  namespace: kube-system
  resourceVersion: "633"
  uid: eba88ce4-1351-4842-b6d3-ea388af250ce
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Container image "registry.k8s.io/coredns/coredns:v1.11.3" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: coredns-668d6bf9bc-z69zr.18403520fc67679b
  namespace: kube-system
  resourceVersion: "656"
  uid: db9d682d-744c-4ade-b903-d9635ba34f5c
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{coredns}
  kind: Pod
  name: coredns-668d6bf9bc-z69zr
  namespace: kube-system
  resourceVersion: "633"
  uid: eba88ce4-1351-4842-b6d3-ea388af250ce
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: 'Created container: coredns'
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: coredns-668d6bf9bc-z69zr.18403521162ebe38
  namespace: kube-system
  resourceVersion: "660"
  uid: d86b6c04-258c-4d12-977b-d8f8d50f88dd
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{coredns}
  kind: Pod
  name: coredns-668d6bf9bc-z69zr
  namespace: kube-system
  resourceVersion: "633"
  uid: eba88ce4-1351-4842-b6d3-ea388af250ce
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Started container coredns
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: coredns-668d6bf9bc-z69zr.1840352118b52972
  namespace: kube-system
  resourceVersion: "663"
  uid: a5873e02-a7b0-4600-a848-36dd2a4636d2
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: coredns-668d6bf9bc
  namespace: kube-system
  resourceVersion: "376"
  uid: 3e739168-4743-4c1d-894f-1893888af90e
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created pod: coredns-668d6bf9bc-z69zr'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: coredns-668d6bf9bc.1840351e3cf900e7
  namespace: kube-system
  resourceVersion: "391"
  uid: a35868f5-044a-4322-877a-26d40aaea1a2
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: coredns-668d6bf9bc
  namespace: kube-system
  resourceVersion: "376"
  uid: 3e739168-4743-4c1d-894f-1893888af90e
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created pod: coredns-668d6bf9bc-bjgbd'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: coredns-668d6bf9bc.1840351e3d65d66b
  namespace: kube-system
  resourceVersion: "399"
  uid: c993ad4e-0bee-459b-9c39-3436d61ae412
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  name: coredns
  namespace: kube-system
  resourceVersion: "281"
  uid: 0f791acc-9729-44ba-a6cc-027ad3e6ee13
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Scaled up replica set coredns-668d6bf9bc from 0 to 2
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: coredns.1840351e3409c9f7
  namespace: kube-system
  resourceVersion: "378"
  uid: 037bb035-3c1f-42f9-9ebf-07e778accd81
reason: ScalingReplicaSet
reportingComponent: deployment-controller
reportingInstance: ""
source:
  component: deployment-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{etcd}
  kind: Pod
  name: etcd-demo-control-plane
  namespace: kube-system
  uid: 0fefc9f1a7845615969525d306db0d45
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: Container image "registry.k8s.io/etcd:3.5.16-0" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: etcd-demo-control-plane.1840351bcb47a0ac
  namespace: kube-system
  resourceVersion: "231"
  uid: cfa6b8d6-26fb-4a89-a84d-341317070d3e
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{etcd}
  kind: Pod
  name: etcd-demo-control-plane
  namespace: kube-system
  uid: 0fefc9f1a7845615969525d306db0d45
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: 'Created container: etcd'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: etcd-demo-control-plane.1840351c205783ad
  namespace: kube-system
  resourceVersion: "238"
  uid: 4291463a-4087-4be5-b803-8af37493b911
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{etcd}
  kind: Pod
  name: etcd-demo-control-plane
  namespace: kube-system
  uid: 0fefc9f1a7845615969525d306db0d45
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: Started container etcd
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: etcd-demo-control-plane.1840351c22c858a8
  namespace: kube-system
  resourceVersion: "239"
  uid: c9c5606f-fb25-4538-b8b2-323d532ca14a
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kindnet-r2qlb
  namespace: kube-system
  resourceVersion: "365"
  uid: e8b0f4c0-96ef-435f-a3cc-670faba5b0ab
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Successfully assigned kube-system/kindnet-r2qlb to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kindnet-r2qlb.1840351e32500cb8
  namespace: kube-system
  resourceVersion: "373"
  uid: a6522443-43a0-4747-93d7-51ed4036a704
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kindnet-cni}
  kind: Pod
  name: kindnet-r2qlb
  namespace: kube-system
  resourceVersion: "369"
  uid: e8b0f4c0-96ef-435f-a3cc-670faba5b0ab
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Container image "docker.io/kindest/kindnetd:v20250214-acbabc1a" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kindnet-r2qlb.1840351e4a9acec7
  namespace: kube-system
  resourceVersion: "415"
  uid: b7b9e964-76b0-4e0f-a918-d3c950c88bc9
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kindnet-cni}
  kind: Pod
  name: kindnet-r2qlb
  namespace: kube-system
  resourceVersion: "369"
  uid: e8b0f4c0-96ef-435f-a3cc-670faba5b0ab
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created container: kindnet-cni'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kindnet-r2qlb.1840351e5d4cf9f0
  namespace: kube-system
  resourceVersion: "421"
  uid: 1bc84538-f607-4c6a-9b3c-77c7f6bfe81a
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:00Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kindnet-cni}
  kind: Pod
  name: kindnet-r2qlb
  namespace: kube-system
  resourceVersion: "369"
  uid: e8b0f4c0-96ef-435f-a3cc-670faba5b0ab
kind: Event
lastTimestamp: "2025-05-17T04:11:00Z"
message: Started container kindnet-cni
metadata:
  creationTimestamp: "2025-05-17T04:11:00Z"
  name: kindnet-r2qlb.1840351e6ada75a1
  namespace: kube-system
  resourceVersion: "422"
  uid: e68143af-707d-49d5-8ffb-2b49208a122d
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: DaemonSet
  name: kindnet
  namespace: kube-system
  resourceVersion: "309"
  uid: eef7ac51-ad54-47be-beea-7b420a02ec71
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created pod: kindnet-r2qlb'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kindnet.1840351e3208f7fb
  namespace: kube-system
  resourceVersion: "372"
  uid: df667715-aa60-41dd-8567-1d74b4090980
reason: SuccessfulCreate
reportingComponent: daemonset-controller
reportingInstance: ""
source:
  component: daemonset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-apiserver}
  kind: Pod
  name: kube-apiserver-demo-control-plane
  namespace: kube-system
  uid: 9a6d97073c01c83f5126a8860afe592d
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: Container image "registry.k8s.io/kube-apiserver:v1.32.2" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-apiserver-demo-control-plane.1840351bcab49241
  namespace: kube-system
  resourceVersion: "228"
  uid: bb6239f3-d8c2-49c5-ba8b-d92db8fb6167
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-apiserver}
  kind: Pod
  name: kube-apiserver-demo-control-plane
  namespace: kube-system
  uid: 9a6d97073c01c83f5126a8860afe592d
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: 'Created container: kube-apiserver'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-apiserver-demo-control-plane.1840351c1159df9f
  namespace: kube-system
  resourceVersion: "234"
  uid: 2a9c2828-e573-40f9-9a79-96a3e9fd8bb8
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-apiserver}
  kind: Pod
  name: kube-apiserver-demo-control-plane
  namespace: kube-system
  uid: 9a6d97073c01c83f5126a8860afe592d
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: Started container kube-apiserver
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-apiserver-demo-control-plane.1840351c18019a1f
  namespace: kube-system
  resourceVersion: "237"
  uid: 42b9a7c5-ae3a-4869-ba87-9cef2ac2855d
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-controller-manager}
  kind: Pod
  name: kube-controller-manager-demo-control-plane
  namespace: kube-system
  uid: 2c751396421a49c88086824e924f213b
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: Container image "registry.k8s.io/kube-controller-manager:v1.32.2" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-controller-manager-demo-control-plane.1840351bcaec4a83
  namespace: kube-system
  resourceVersion: "229"
  uid: 964e8de8-3037-48a2-adb6-3513a996a8c1
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-controller-manager}
  kind: Pod
  name: kube-controller-manager-demo-control-plane
  namespace: kube-system
  uid: 2c751396421a49c88086824e924f213b
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: 'Created container: kube-controller-manager'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-controller-manager-demo-control-plane.1840351c10ca46f4
  namespace: kube-system
  resourceVersion: "233"
  uid: d554446d-2613-4ae3-92fc-027a4c3a84aa
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-controller-manager}
  kind: Pod
  name: kube-controller-manager-demo-control-plane
  namespace: kube-system
  uid: 2c751396421a49c88086824e924f213b
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: Started container kube-controller-manager
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-controller-manager-demo-control-plane.1840351c18005804
  namespace: kube-system
  resourceVersion: "236"
  uid: 392f47d3-e496-4f3f-969c-9c5b35fdb60a
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:53Z"
involvedObject:
  apiVersion: coordination.k8s.io/v1
  kind: Lease
  name: kube-controller-manager
  namespace: kube-system
  resourceVersion: "263"
  uid: 4d460ef4-78c5-4111-a8e0-0a0d0d2b0817
kind: Event
lastTimestamp: "2025-05-17T04:10:53Z"
message: demo-control-plane_0e704820-3e80-4d82-a775-692869914d6b became leader
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-controller-manager.1840351ce8c1c070
  namespace: kube-system
  resourceVersion: "266"
  uid: 9afd4951-b5fc-432c-b3ff-bc670f334fbe
reason: LeaderElection
reportingComponent: kube-controller-manager
reportingInstance: ""
source:
  component: kube-controller-manager
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kube-proxy-xh5qb
  namespace: kube-system
  resourceVersion: "364"
  uid: 0e14aae8-9d2b-4d0d-918e-06ec1648e30f
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Successfully assigned kube-system/kube-proxy-xh5qb to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-proxy-xh5qb.1840351e322457ae
  namespace: kube-system
  resourceVersion: "371"
  uid: 44ed1279-7e3e-47d7-b7ff-5ea30f48494a
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-proxy}
  kind: Pod
  name: kube-proxy-xh5qb
  namespace: kube-system
  resourceVersion: "367"
  uid: 0e14aae8-9d2b-4d0d-918e-06ec1648e30f
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Container image "registry.k8s.io/kube-proxy:v1.32.2" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-proxy-xh5qb.1840351e48341972
  namespace: kube-system
  resourceVersion: "414"
  uid: d458ffdf-e75b-486e-8804-2be7a34846bb
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-proxy}
  kind: Pod
  name: kube-proxy-xh5qb
  namespace: kube-system
  resourceVersion: "367"
  uid: 0e14aae8-9d2b-4d0d-918e-06ec1648e30f
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created container: kube-proxy'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-proxy-xh5qb.1840351e50783d54
  namespace: kube-system
  resourceVersion: "417"
  uid: b8d0c8e2-b661-4dbb-bc86-579d16970baa
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-proxy}
  kind: Pod
  name: kube-proxy-xh5qb
  namespace: kube-system
  resourceVersion: "367"
  uid: 0e14aae8-9d2b-4d0d-918e-06ec1648e30f
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Started container kube-proxy
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-proxy-xh5qb.1840351e52f9319d
  namespace: kube-system
  resourceVersion: "418"
  uid: 28890277-0fb8-470c-a254-09ae2a098c2a
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: DaemonSet
  name: kube-proxy
  namespace: kube-system
  resourceVersion: "285"
  uid: 016a2fe0-2c7d-41f5-9661-33d7f3592d7d
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created pod: kube-proxy-xh5qb'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: kube-proxy.1840351e31e6bde1
  namespace: kube-system
  resourceVersion: "366"
  uid: 99f1848a-06a9-4c23-a311-9603c654f02a
reason: SuccessfulCreate
reportingComponent: daemonset-controller
reportingInstance: ""
source:
  component: daemonset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:48Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-scheduler}
  kind: Pod
  name: kube-scheduler-demo-control-plane
  namespace: kube-system
  uid: 167a80a11e882d5330e241139c569ad7
kind: Event
lastTimestamp: "2025-05-17T04:10:48Z"
message: Container image "registry.k8s.io/kube-scheduler:v1.32.2" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-scheduler-demo-control-plane.1840351bcaf946eb
  namespace: kube-system
  resourceVersion: "230"
  uid: a8e5ff57-5967-4135-a211-c69f6a6b879b
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-scheduler}
  kind: Pod
  name: kube-scheduler-demo-control-plane
  namespace: kube-system
  uid: 167a80a11e882d5330e241139c569ad7
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: 'Created container: kube-scheduler'
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-scheduler-demo-control-plane.1840351c0fbfb2ac
  namespace: kube-system
  resourceVersion: "232"
  uid: 204e4772-447f-4b72-81a5-81bb31e66482
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:50Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-scheduler}
  kind: Pod
  name: kube-scheduler-demo-control-plane
  namespace: kube-system
  uid: 167a80a11e882d5330e241139c569ad7
kind: Event
lastTimestamp: "2025-05-17T04:10:50Z"
message: Started container kube-scheduler
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-scheduler-demo-control-plane.1840351c126afdbd
  namespace: kube-system
  resourceVersion: "235"
  uid: e7fdeb28-f167-445c-bcff-895137436eec
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:54Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{kube-scheduler}
  kind: Pod
  name: kube-scheduler-demo-control-plane
  namespace: kube-system
  uid: 167a80a11e882d5330e241139c569ad7
kind: Event
lastTimestamp: "2025-05-17T04:10:54Z"
message: 'Readiness probe failed: HTTP probe failed with statuscode: 500'
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kube-scheduler-demo-control-plane.1840351d107fd3c0
  namespace: kube-system
  resourceVersion: "292"
  uid: e3bcbe07-0f7e-42f5-b20b-843949de53f1
reason: Unhealthy
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:55Z"
involvedObject:
  apiVersion: coordination.k8s.io/v1
  kind: Lease
  name: kube-scheduler
  namespace: kube-system
  resourceVersion: "326"
  uid: 3e2e75e8-5f02-492d-8c23-50e44b16e951
kind: Event
lastTimestamp: "2025-05-17T04:10:55Z"
message: demo-control-plane_cfa18b03-498c-4f39-92b5-2f432f222a6b became leader
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: kube-scheduler.1840351d646fae40
  namespace: kube-system
  resourceVersion: "327"
  uid: 43a09e03-d899-4141-9c7d-41f86186aa5c
reason: LeaderElection
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-admission-controller-6468f4bbd4-tgs2z
  namespace: kyverno
  resourceVersion: "561"
  uid: 85f2627a-c64a-4c4d-befa-d84986c51519
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-admission-controller-6468f4bbd4-tgs2z.1840351f2c9520e0
  namespace: kyverno
  resourceVersion: "562"
  uid: bbfaacff-3177-4386-8fee-2bfff3e4b886
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-admission-controller-6468f4bbd4-tgs2z
  namespace: kyverno
  resourceVersion: "566"
  uid: 85f2627a-c64a-4c4d-befa-d84986c51519
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned kyverno/kyverno-admission-controller-6468f4bbd4-tgs2z to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: kyverno-admission-controller-6468f4bbd4-tgs2z.18403520dfb33718
  namespace: kyverno
  resourceVersion: "644"
  uid: ee2c6925-e703-4a2d-ae14-4fd609de4356
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.initContainers{kyverno-pre}
  kind: Pod
  name: kyverno-admission-controller-6468f4bbd4-tgs2z
  namespace: kyverno
  resourceVersion: "630"
  uid: 85f2627a-c64a-4c4d-befa-d84986c51519
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Pulling image "ghcr.io/kyverno/kyvernopre:v1.11.1"
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: kyverno-admission-controller-6468f4bbd4-tgs2z.18403520fb31c6be
  namespace: kyverno
  resourceVersion: "652"
  uid: 2cb9046c-eb07-4fed-a7d7-3fd66df66b14
reason: Pulling
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: kyverno-admission-controller-6468f4bbd4
  namespace: kyverno
  resourceVersion: "558"
  uid: 7246e068-bcba-4c94-966e-36fc2621a774
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: 'Created pod: kyverno-admission-controller-6468f4bbd4-tgs2z'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-admission-controller-6468f4bbd4.1840351f2c965813
  namespace: kyverno
  resourceVersion: "564"
  uid: a701f470-e447-44e4-b637-e505bdb93794
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  name: kyverno-admission-controller
  namespace: kyverno
  resourceVersion: "557"
  uid: fca0b96d-7fe6-4413-89cf-305204a9f4e8
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: Scaled up replica set kyverno-admission-controller-6468f4bbd4 from 0 to 1
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-admission-controller.1840351f2c5760d3
  namespace: kyverno
  resourceVersion: "559"
  uid: 1fea8abd-e57b-409c-80ed-402dd2476e68
reason: ScalingReplicaSet
reportingComponent: deployment-controller
reportingInstance: ""
source:
  component: deployment-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-background-controller-86d48fc7db-v8rcr
  namespace: kyverno
  resourceVersion: "570"
  uid: 7d7c375f-1da8-4dcc-93d8-bfb822eef205
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-background-controller-86d48fc7db-v8rcr.1840351f2d10588c
  namespace: kyverno
  resourceVersion: "574"
  uid: 80f16979-dbdd-4e7a-87fd-708e7430d92f
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-background-controller-86d48fc7db-v8rcr
  namespace: kyverno
  resourceVersion: "576"
  uid: 7d7c375f-1da8-4dcc-93d8-bfb822eef205
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned kyverno/kyverno-background-controller-86d48fc7db-v8rcr to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: kyverno-background-controller-86d48fc7db-v8rcr.18403520dfb275bb
  namespace: kyverno
  resourceVersion: "637"
  uid: 73108c1b-3a7c-4b21-83f5-587542baf767
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{controller}
  kind: Pod
  name: kyverno-background-controller-86d48fc7db-v8rcr
  namespace: kyverno
  resourceVersion: "632"
  uid: 7d7c375f-1da8-4dcc-93d8-bfb822eef205
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Pulling image "ghcr.io/kyverno/background-controller:v1.11.1"
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: kyverno-background-controller-86d48fc7db-v8rcr.18403520fc7ccf4c
  namespace: kyverno
  resourceVersion: "657"
  uid: 67e0bf5f-2d80-4e31-98ba-fd19910e1aef
reason: Pulling
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: kyverno-background-controller-86d48fc7db
  namespace: kyverno
  resourceVersion: "568"
  uid: e4b37928-b320-4272-91ca-c6106057a13d
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: 'Created pod: kyverno-background-controller-86d48fc7db-v8rcr'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-background-controller-86d48fc7db.1840351f2d0c6e43
  namespace: kyverno
  resourceVersion: "573"
  uid: fecfbcad-6447-4483-8a95-6e1a115f8b9d
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  name: kyverno-background-controller
  namespace: kyverno
  resourceVersion: "563"
  uid: c954fc45-8116-4276-a380-5a592544d7d0
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: Scaled up replica set kyverno-background-controller-86d48fc7db from 0 to 1
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-background-controller.1840351f2ce38a6b
  namespace: kyverno
  resourceVersion: "571"
  uid: 2b871cf4-d864-46c2-bda2-676826914e9b
reason: ScalingReplicaSet
reportingComponent: deployment-controller
reportingInstance: ""
source:
  component: deployment-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-cleanup-controller-7766d9df55-z57hq
  namespace: kyverno
  resourceVersion: "584"
  uid: 81ad58a5-b432-48b9-bafa-353dd8a1bc3d
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-cleanup-controller-7766d9df55-z57hq.1840351f2dd7afa8
  namespace: kyverno
  resourceVersion: "587"
  uid: 914f035e-eb82-4e4f-ac69-8e61e2b67ae3
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-cleanup-controller-7766d9df55-z57hq
  namespace: kyverno
  resourceVersion: "591"
  uid: 81ad58a5-b432-48b9-bafa-353dd8a1bc3d
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned kyverno/kyverno-cleanup-controller-7766d9df55-z57hq to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: kyverno-cleanup-controller-7766d9df55-z57hq.18403520dfb29866
  namespace: kyverno
  resourceVersion: "639"
  uid: ed50ab9a-4e86-4fa9-a354-7b26eda8a635
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{controller}
  kind: Pod
  name: kyverno-cleanup-controller-7766d9df55-z57hq
  namespace: kyverno
  resourceVersion: "629"
  uid: 81ad58a5-b432-48b9-bafa-353dd8a1bc3d
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Pulling image "ghcr.io/kyverno/cleanup-controller:v1.11.1"
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: kyverno-cleanup-controller-7766d9df55-z57hq.18403520fbe051d3
  namespace: kyverno
  resourceVersion: "654"
  uid: 09319308-e122-442d-bbfd-1530d9e19117
reason: Pulling
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: kyverno-cleanup-controller-7766d9df55
  namespace: kyverno
  resourceVersion: "581"
  uid: e1d316e6-753b-435b-93b7-e422c70c6937
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: 'Created pod: kyverno-cleanup-controller-7766d9df55-z57hq'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-cleanup-controller-7766d9df55.1840351f2de01322
  namespace: kyverno
  resourceVersion: "588"
  uid: cc20d70c-8b89-48b2-ad6e-bf79610679db
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  name: kyverno-cleanup-controller
  namespace: kyverno
  resourceVersion: "578"
  uid: f09850ac-9817-4c34-beae-9719ed56eb32
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: Scaled up replica set kyverno-cleanup-controller-7766d9df55 from 0 to 1
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-cleanup-controller.1840351f2d7a5e2c
  namespace: kyverno
  resourceVersion: "582"
  uid: 2bd43a3b-4c5d-47a5-8d00-cc6687e51a5c
reason: ScalingReplicaSet
reportingComponent: deployment-controller
reportingInstance: ""
source:
  component: deployment-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-reports-controller-8c4667558-zt6sf
  namespace: kyverno
  resourceVersion: "594"
  uid: 3a10ff5c-017c-42e1-bd43-d95e5ac6242f
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-reports-controller-8c4667558-zt6sf.1840351f2e6eb0fc
  namespace: kyverno
  resourceVersion: "599"
  uid: aa258fae-aa9c-4322-9a19-ca0c241c1715
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: kyverno-reports-controller-8c4667558-zt6sf
  namespace: kyverno
  resourceVersion: "600"
  uid: 3a10ff5c-017c-42e1-bd43-d95e5ac6242f
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned kyverno/kyverno-reports-controller-8c4667558-zt6sf to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: kyverno-reports-controller-8c4667558-zt6sf.18403520dfb35d57
  namespace: kyverno
  resourceVersion: "645"
  uid: fbe74219-19cc-4169-b459-54a327654cd6
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{controller}
  kind: Pod
  name: kyverno-reports-controller-8c4667558-zt6sf
  namespace: kyverno
  resourceVersion: "634"
  uid: 3a10ff5c-017c-42e1-bd43-d95e5ac6242f
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Pulling image "ghcr.io/kyverno/reports-controller:v1.11.1"
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: kyverno-reports-controller-8c4667558-zt6sf.18403520fcaa79a5
  namespace: kyverno
  resourceVersion: "658"
  uid: d456ec3a-7f99-4114-b0de-3b7bbf6e17b5
reason: Pulling
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: kyverno-reports-controller-8c4667558
  namespace: kyverno
  resourceVersion: "592"
  uid: 472bedf1-9f1a-4382-aec6-ee839bc5fc6c
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: 'Created pod: kyverno-reports-controller-8c4667558-zt6sf'
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-reports-controller-8c4667558.1840351f2e650e02
  namespace: kyverno
  resourceVersion: "597"
  uid: afd31743-4fc6-420b-82dd-2f1fbf15902c
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:03Z"
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  name: kyverno-reports-controller
  namespace: kyverno
  resourceVersion: "585"
  uid: e7cb8cae-4979-438f-a802-fb8b66cd9094
kind: Event
lastTimestamp: "2025-05-17T04:11:03Z"
message: Scaled up replica set kyverno-reports-controller-8c4667558 from 0 to 1
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  name: kyverno-reports-controller.1840351f2e22c718
  namespace: kyverno
  resourceVersion: "595"
  uid: 0593b5f2-eb0c-4d37-a65b-1c7a21a0d4ef
reason: ScalingReplicaSet
reportingComponent: deployment-controller
reportingInstance: ""
source:
  component: deployment-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: local-path-provisioner-7dc846544d-p8nhl
  namespace: local-path-storage
  resourceVersion: "390"
  uid: c3c2c50b-37d8-4a8f-ba7a-d7e13c301adb
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: '0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: local-path-provisioner-7dc846544d-p8nhl.1840351e3dc2cf5d
  namespace: local-path-storage
  resourceVersion: "403"
  uid: 9710136f-d666-47a2-a05b-1eea3aede9e9
reason: FailedScheduling
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Warning
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:10Z"
involvedObject:
  apiVersion: v1
  kind: Pod
  name: local-path-provisioner-7dc846544d-p8nhl
  namespace: local-path-storage
  resourceVersion: "404"
  uid: c3c2c50b-37d8-4a8f-ba7a-d7e13c301adb
kind: Event
lastTimestamp: "2025-05-17T04:11:10Z"
message: Successfully assigned local-path-storage/local-path-provisioner-7dc846544d-p8nhl to demo-control-plane
metadata:
  creationTimestamp: "2025-05-17T04:11:10Z"
  name: local-path-provisioner-7dc846544d-p8nhl.18403520dfb21e2a
  namespace: local-path-storage
  resourceVersion: "636"
  uid: 62f1e4c6-0392-4fb4-a495-e5f1f940192e
reason: Scheduled
reportingComponent: default-scheduler
reportingInstance: ""
source:
  component: default-scheduler
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{local-path-provisioner}
  kind: Pod
  name: local-path-provisioner-7dc846544d-p8nhl
  namespace: local-path-storage
  resourceVersion: "631"
  uid: c3c2c50b-37d8-4a8f-ba7a-d7e13c301adb
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Container image "docker.io/kindest/local-path-provisioner:v20250214-acbabc1a" already present on machine
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: local-path-provisioner-7dc846544d-p8nhl.18403520fc11d55e
  namespace: local-path-storage
  resourceVersion: "655"
  uid: 6a931932-47fc-4ec8-9d12-5b3e1670963d
reason: Pulled
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{local-path-provisioner}
  kind: Pod
  name: local-path-provisioner-7dc846544d-p8nhl
  namespace: local-path-storage
  resourceVersion: "631"
  uid: c3c2c50b-37d8-4a8f-ba7a-d7e13c301adb
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: 'Created container: local-path-provisioner'
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: local-path-provisioner-7dc846544d-p8nhl.184035211772f0ed
  namespace: local-path-storage
  resourceVersion: "661"
  uid: a0f454a1-4cb8-4d94-8d8d-aef87d7a944b
reason: Created
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:11:11Z"
involvedObject:
  apiVersion: v1
  fieldPath: spec.containers{local-path-provisioner}
  kind: Pod
  name: local-path-provisioner-7dc846544d-p8nhl
  namespace: local-path-storage
  resourceVersion: "631"
  uid: c3c2c50b-37d8-4a8f-ba7a-d7e13c301adb
kind: Event
lastTimestamp: "2025-05-17T04:11:11Z"
message: Started container local-path-provisioner
metadata:
  creationTimestamp: "2025-05-17T04:11:11Z"
  name: local-path-provisioner-7dc846544d-p8nhl.18403521199477d9
  namespace: local-path-storage
  resourceVersion: "664"
  uid: 7e0fb606-654f-4c09-9623-43694db3dc22
reason: Started
reportingComponent: kubelet
reportingInstance: demo-control-plane
source:
  component: kubelet
  host: demo-control-plane
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: ReplicaSet
  name: local-path-provisioner-7dc846544d
  namespace: local-path-storage
  resourceVersion: "377"
  uid: 98a15e7a-aaae-4d7b-8657-9254dc0e0439
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: 'Created pod: local-path-provisioner-7dc846544d-p8nhl'
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: local-path-provisioner-7dc846544d.1840351e3d0acd93
  namespace: local-path-storage
  resourceVersion: "396"
  uid: 2bae4bd6-e412-4483-a415-5652ba928ffb
reason: SuccessfulCreate
reportingComponent: replicaset-controller
reportingInstance: ""
source:
  component: replicaset-controller
type: Normal
---
apiVersion: v1
count: 1
eventTime: null
firstTimestamp: "2025-05-17T04:10:59Z"
involvedObject:
  apiVersion: apps/v1
  kind: Deployment
  name: local-path-provisioner
  namespace: local-path-storage
  resourceVersion: "317"
  uid: 95d41887-66b1-4ef3-a090-9d595c199c16
kind: Event
lastTimestamp: "2025-05-17T04:10:59Z"
message: Scaled up replica set local-path-provisioner-7dc846544d from 0 to 1
metadata:
  creationTimestamp: "2025-05-17T04:10:59Z"
  name: local-path-provisioner.1840351e34173fa0
  namespace: local-path-storage
  resourceVersion: "381"
  uid: 85f5b3aa-25fb-4aa6-a90d-f4763388e568
reason: ScalingReplicaSet
reportingComponent: deployment-controller
reportingInstance: ""
source:
  component: deployment-controller
type: Normal
---
apiVersion: coordination.k8s.io/v1
kind: Lease
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: demo-control-plane
  namespace: kube-node-lease
  ownerReferences:
    - apiVersion: v1
      kind: Node
      name: demo-control-plane
      uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
  resourceVersion: "687"
  uid: 85e6de15-0bfe-45cf-a107-109b9ab8778e
spec:
  holderIdentity: demo-control-plane
  leaseDurationSeconds: 40
  renewTime: "2025-05-17T04:11:14.040304Z"
---
apiVersion: coordination.k8s.io/v1
kind: Lease
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    apiserver.kubernetes.io/identity: kube-apiserver
    kubernetes.io/hostname: demo-control-plane
  name: apiserver-n6hcmps3wne3gd7k42gwfaw7hy
  namespace: kube-system
  resourceVersion: "667"
  uid: c72e91ac-e611-43e0-951d-66863f35822e
spec:
  holderIdentity: apiserver-n6hcmps3wne3gd7k42gwfaw7hy_32be2a4a-ae4a-46ce-866b-f420a57756ed
  leaseDurationSeconds: 3600
  renewTime: "2025-05-17T04:11:12.366795Z"
---
apiVersion: coordination.k8s.io/v1
kind: Lease
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kube-controller-manager
  namespace: kube-system
  resourceVersion: "685"
  uid: 4d460ef4-78c5-4111-a8e0-0a0d0d2b0817
spec:
  acquireTime: "2025-05-17T04:10:53.696891Z"
  holderIdentity: demo-control-plane_0e704820-3e80-4d82-a775-692869914d6b
  leaseDurationSeconds: 15
  leaseTransitions: 0
  renewTime: "2025-05-17T04:11:13.801605Z"
---
apiVersion: coordination.k8s.io/v1
kind: Lease
metadata:
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: kube-scheduler
  namespace: kube-system
  resourceVersion: "686"
  uid: 3e2e75e8-5f02-492d-8c23-50e44b16e951
spec:
  acquireTime: "2025-05-17T04:10:55.766706Z"
  holderIdentity: demo-control-plane_cfa18b03-498c-4f39-92b5-2f432f222a6b
  leaseDurationSeconds: 15
  leaseTransitions: 0
  renewTime: "2025-05-17T04:11:13.861069Z"
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kubernetes.io/metadata.name: default
  name: default
  resourceVersion: "66"
  uid: d3ab3b70-2fa1-449f-b98f-8a32d5cf3fef
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kubernetes.io/metadata.name: kube-node-lease
  name: kube-node-lease
  resourceVersion: "68"
  uid: aa42d5c1-5cd9-429c-ac53-8d5ef9f7cfdc
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kubernetes.io/metadata.name: kube-public
  name: kube-public
  resourceVersion: "64"
  uid: 63323a09-71f6-4008-88fd-23606c407ee7
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kubernetes.io/metadata.name: kube-system
  name: kube-system
  resourceVersion: "10"
  uid: f752eed2-5cad-4524-889f-6a2e4fb0b1f0
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    kubernetes.io/metadata.name: kyverno
  name: kyverno
  resourceVersion: "430"
  uid: fb680113-46ad-40ec-a403-b442e8d8e2fe
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"kyverno-aws"}}
  creationTimestamp: "2025-05-17T04:10:59Z"
  labels:
    kubernetes.io/metadata.name: kyverno-aws
  name: kyverno-aws
  resourceVersion: "401"
  uid: b888db3b-339a-4688-904b-55d5d1b2a81b
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Namespace","metadata":{"annotations":{},"name":"local-path-storage"}}
  creationTimestamp: "2025-05-17T04:10:55Z"
  labels:
    kubernetes.io/metadata.name: local-path-storage
  name: local-path-storage
  resourceVersion: "311"
  uid: a087628c-77ba-43c1-838d-d904672f6fce
spec:
  finalizers:
    - kubernetes
status:
  phase: Active
---
apiVersion: v1
kind: Node
metadata:
  annotations:
    kubeadm.alpha.kubernetes.io/cri-socket: unix:///run/containerd/containerd.sock
    node.alpha.kubernetes.io/ttl: "0"
    volumes.kubernetes.io/controller-managed-attach-detach: "true"
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    beta.kubernetes.io/arch: arm64
    beta.kubernetes.io/os: linux
    kubernetes.io/arch: arm64
    kubernetes.io/hostname: demo-control-plane
    kubernetes.io/os: linux
    node-role.kubernetes.io/control-plane: ""
  name: demo-control-plane
  resourceVersion: "626"
  uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
spec:
  podCIDR: 10.244.0.0/24
  podCIDRs:
    - 10.244.0.0/24
  providerID: kind://docker/demo/demo-control-plane
status:
  addresses:
    - address: 192.168.107.2
      type: InternalIP
    - address: demo-control-plane
      type: Hostname
  allocatable:
    cpu: "16"
    ephemeral-storage: 703333564Ki
    memory: 85362244Ki
    pods: "110"
  capacity:
    cpu: "16"
    ephemeral-storage: 703333564Ki
    memory: 85362244Ki
    pods: "110"
  conditions:
    - lastHeartbeatTime: "2025-05-17T04:11:10Z"
      lastTransitionTime: "2025-05-17T04:10:51Z"
      message: kubelet has sufficient memory available
      reason: KubeletHasSufficientMemory
      status: "False"
      type: MemoryPressure
    - lastHeartbeatTime: "2025-05-17T04:11:10Z"
      lastTransitionTime: "2025-05-17T04:10:51Z"
      message: kubelet has no disk pressure
      reason: KubeletHasNoDiskPressure
      status: "False"
      type: DiskPressure
    - lastHeartbeatTime: "2025-05-17T04:11:10Z"
      lastTransitionTime: "2025-05-17T04:10:51Z"
      message: kubelet has sufficient PID available
      reason: KubeletHasSufficientPID
      status: "False"
      type: PIDPressure
    - lastHeartbeatTime: "2025-05-17T04:11:10Z"
      lastTransitionTime: "2025-05-17T04:11:10Z"
      message: kubelet is posting ready status
      reason: KubeletReady
      status: "True"
      type: Ready
  daemonEndpoints:
    kubeletEndpoint:
      Port: 10250
  images:
    - names:
        - registry.k8s.io/kube-proxy-arm64:v1.32.2
        - registry.k8s.io/kube-proxy:v1.32.2
      sizeBytes: 98311369
    - names:
        - registry.k8s.io/kube-apiserver-arm64:v1.32.2
        - registry.k8s.io/kube-apiserver:v1.32.2
      sizeBytes: 94986737
    - names:
        - registry.k8s.io/kube-controller-manager-arm64:v1.32.2
        - registry.k8s.io/kube-controller-manager:v1.32.2
      sizeBytes: 88236375
    - names:
        - registry.k8s.io/kube-scheduler-arm64:v1.32.2
        - registry.k8s.io/kube-scheduler:v1.32.2
      sizeBytes: 68968791
    - names:
        - registry.k8s.io/etcd:3.5.16-0
      sizeBytes: 67941650
    - names:
        - docker.io/kindest/kindnetd:v20250214-acbabc1a
      sizeBytes: 35677907
    - names:
        - docker.io/kindest/local-path-provisioner:v20250214-acbabc1a
      sizeBytes: 20222523
    - names:
        - registry.k8s.io/coredns/coredns:v1.11.3
      sizeBytes: 16948420
    - names:
        - docker.io/kindest/local-path-helper:v20241212-8ac705d0
      sizeBytes: 2954522
    - names:
        - registry.k8s.io/pause:3.10
      sizeBytes: 267933
  nodeInfo:
    architecture: arm64
    bootID: c85f5098-1f63-481b-a36d-72a418966876
    containerRuntimeVersion: containerd://2.0.2
    kernelVersion: 6.13.7-orbstack-00283-g9d1400e7e9c6
    kubeProxyVersion: v1.32.2
    kubeletVersion: v1.32.2
    machineID: 605c6c66510347728d523cc04638f5b1
    operatingSystem: linux
    osImage: Debian GNU/Linux 12 (bookworm)
    systemUUID: 605c6c66510347728d523cc04638f5b1
  runtimeHandlers:
    - features:
        recursiveReadOnlyMounts: true
        userNamespaces: true
      name: runc
    - features:
        recursiveReadOnlyMounts: true
        userNamespaces: true
      name: ""
    - features:
        recursiveReadOnlyMounts: true
        userNamespaces: true
      name: test-handler
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: admin
  resourceVersion: "512"
  uid: 6c61d43e-e128-4467-b6aa-cae8bdccfd27
rules:
  - apiGroups:
      - ""
    resources:
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
      - secrets
      - services/proxy
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - impersonate
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
      - persistentvolumeclaims
      - replicationcontrollers
      - replicationcontrollers/scale
      - secrets
      - serviceaccounts
      - services
      - services/proxy
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - deployments/rollback
      - deployments/scale
      - replicasets
      - replicasets/scale
      - statefulsets
      - statefulsets/scale
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - deployments/rollback
      - deployments/scale
      - ingresses
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - cleanuppolicies
      - clustercleanuppolicies
      - policies
      - clusterpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - clusterpolicyreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - updaterequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - pods
      - replicationcontrollers
      - replicationcontrollers/scale
      - serviceaccounts
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - events
      - limitranges
      - namespaces/status
      - pods/log
      - pods/status
      - replicationcontrollers/status
      - resourcequotas
      - resourcequotas/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - replicasets
      - replicasets/scale
      - replicasets/status
      - statefulsets
      - statefulsets/scale
      - statefulsets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
      - horizontalpodautoscalers/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - cronjobs/status
      - jobs
      - jobs/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - ingresses
      - ingresses/status
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicasets/status
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
      - poddisruptionbudgets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingresses/status
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - cleanuppolicies
      - clustercleanuppolicies
      - policies
      - clusterpolicies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - clusterpolicyreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - updaterequests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - localsubjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: cluster-admin
  resourceVersion: "72"
  uid: a33d6040-44f4-4d38-a7fd-6183632edf9f
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - '*'
  - nonResourceURLs:
      - '*'
    verbs:
      - '*'
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: edit
  resourceVersion: "511"
  uid: 81794aea-0b1b-4a69-b053-b3257536b97d
rules:
  - apiGroups:
      - ""
    resources:
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
      - secrets
      - services/proxy
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - impersonate
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
      - persistentvolumeclaims
      - replicationcontrollers
      - replicationcontrollers/scale
      - secrets
      - serviceaccounts
      - services
      - services/proxy
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - deployments/rollback
      - deployments/scale
      - replicasets
      - replicasets/scale
      - statefulsets
      - statefulsets/scale
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - deployments/rollback
      - deployments/scale
      - ingresses
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - cleanuppolicies
      - clustercleanuppolicies
      - policies
      - clusterpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - clusterpolicyreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - updaterequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - pods
      - replicationcontrollers
      - replicationcontrollers/scale
      - serviceaccounts
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - events
      - limitranges
      - namespaces/status
      - pods/log
      - pods/status
      - replicationcontrollers/status
      - resourcequotas
      - resourcequotas/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - replicasets
      - replicasets/scale
      - replicasets/status
      - statefulsets
      - statefulsets/scale
      - statefulsets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
      - horizontalpodautoscalers/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - cronjobs/status
      - jobs
      - jobs/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - ingresses
      - ingresses/status
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicasets/status
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
      - poddisruptionbudgets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingresses/status
      - networkpolicies
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kindnet
  resourceVersion: "306"
  uid: ef643223-2a0b-4a20-86bf-216ed3434a97
rules:
  - apiGroups:
      - policy
    resourceNames:
      - kindnet
    resources:
      - podsecuritypolicies
    verbs:
      - use
  - apiGroups:
      - ""
    resources:
      - nodes
      - pods
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:get-nodes
  resourceVersion: "250"
  uid: 2416dc29-5ffa-4bce-9cf3-710667e882b7
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-jobs
  resourceVersion: "485"
  uid: e6181d02-419d-4287-bbad-1ced7f3a6e1e
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
    verbs:
      - list
      - deletecollection
      - delete
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        app.kubernetes.io/component: admission-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:admission-controller
  resourceVersion: "475"
  uid: ee113b98-879e-4853-a0dd-7c3904328f83
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - clusterroles
      - rolebindings
      - clusterrolebindings
    verbs:
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - policies
      - policies/status
      - clusterpolicies
      - clusterpolicies/status
      - updaterequests
      - updaterequests/status
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - policyreports/status
      - clusterpolicyreports
      - clusterpolicyreports/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:admission-controller:core
  resourceVersion: "474"
  uid: 8d8fb56d-fb5a-4bc3-a9a8-4a3d8ec56e3c
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
      - validatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - roles
      - clusterroles
      - rolebindings
      - clusterrolebindings
    verbs:
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - policies
      - policies/status
      - clusterpolicies
      - clusterpolicies/status
      - updaterequests
      - updaterequests/status
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - policyreports/status
      - clusterpolicyreports
      - clusterpolicyreports/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - update
      - patch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        app.kubernetes.io/component: background-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:background-controller
  resourceVersion: "479"
  uid: c1d076d2-4d68-4662-9e9c-4132bc0feba8
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - policies
      - clusterpolicies
      - policyexceptions
      - updaterequests
      - updaterequests/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - namespaces
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
      - networkpolicies
    verbs:
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
      - resourcequotas
      - limitranges
    verbs:
      - create
      - update
      - patch
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:background-controller:core
  resourceVersion: "478"
  uid: 24148203-acfa-4fc1-92c1-6ffed792e516
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - policies
      - clusterpolicies
      - policyexceptions
      - updaterequests
      - updaterequests/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - ""
    resources:
      - namespaces
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingressclasses
      - networkpolicies
    verbs:
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
      - resourcequotas
      - limitranges
    verbs:
      - create
      - update
      - patch
      - delete
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        app.kubernetes.io/component: cleanup-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:cleanup-controller
  resourceVersion: "483"
  uid: e8146840-1a7b-49eb-81ff-08c349c4c635
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - clustercleanuppolicies
      - cleanuppolicies
    verbs:
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - clustercleanuppolicies/status
      - cleanuppolicies/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:cleanup-controller:core
  resourceVersion: "482"
  uid: d968e926-79a7-4642-89d6-166fec2135af
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - clustercleanuppolicies
      - cleanuppolicies
    verbs:
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - clustercleanuppolicies/status
      - cleanuppolicies/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kyverno:rbac:admin:policies
  resourceVersion: "487"
  uid: 574bbfbc-3b45-40d0-acaa-fce3a16b048b
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - cleanuppolicies
      - clustercleanuppolicies
      - policies
      - clusterpolicies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kyverno:rbac:admin:policyreports
  resourceVersion: "492"
  uid: f1e1893f-b53d-4048-816c-9cb83292efe9
rules:
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - clusterpolicyreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kyverno:rbac:admin:reports
  resourceVersion: "498"
  uid: 87098da3-fa75-4361-8a47-ad42872e3e8e
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: kyverno:rbac:admin:updaterequests
  resourceVersion: "504"
  uid: ad63314f-cc6b-44b8-9776-64efcec7c5d5
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - updaterequests
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kyverno:rbac:view:policies
  resourceVersion: "490"
  uid: 522923d5-c4c1-4153-b220-75a1b0098d25
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - cleanuppolicies
      - clustercleanuppolicies
      - policies
      - clusterpolicies
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kyverno:rbac:view:policyreports
  resourceVersion: "495"
  uid: f63d6541-aa47-492e-86b5-7415522c6bc2
rules:
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - clusterpolicyreports
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kyverno:rbac:view:reports
  resourceVersion: "501"
  uid: e69fc58b-dbc1-4672-a418-1c85e35dd87c
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: kyverno:rbac:view:updaterequests
  resourceVersion: "507"
  uid: bf8e63e3-5847-4d21-8c96-af5b75c2f2ff
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - updaterequests
    verbs:
      - get
      - list
      - watch
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        app.kubernetes.io/component: reports-controller
        app.kubernetes.io/instance: kyverno
        app.kubernetes.io/part-of: kyverno
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:reports-controller
  resourceVersion: "514"
  uid: 42104d91-772c-46ca-8cf6-6e62d1d5c02f
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - policyreports/status
      - clusterpolicyreports
      - clusterpolicyreports/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:reports-controller:core
  resourceVersion: "513"
  uid: 82cf82b3-9cda-4f9a-b62c-3ec60210927b
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - policyreports/status
      - clusterpolicyreports
      - clusterpolicyreports/status
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
      - deletecollection
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"local-path-provisioner-role"},"rules":[{"apiGroups":[""],"resources":["nodes","persistentvolumeclaims","configmaps","pods","pods/log"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["persistentvolumes"],"verbs":["get","list","watch","create","patch","update","delete"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["storage.k8s.io"],"resources":["storageclasses"],"verbs":["get","list","watch"]}]}
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: local-path-provisioner-role
  resourceVersion: "314"
  uid: f5016e42-2330-41e0-a560-76a88a61b6c8
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - persistentvolumeclaims
      - configmaps
      - pods
      - pods/log
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
      - create
      - patch
      - update
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
  name: system:aggregate-to-admin
  resourceVersion: "83"
  uid: 7c77ae55-da4c-4708-9a4f-cf487f8f4131
rules:
  - apiGroups:
      - authorization.k8s.io
    resources:
      - localsubjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - rolebindings
      - roles
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: system:aggregate-to-edit
  resourceVersion: "84"
  uid: 4dd01f24-366e-4054-9648-5656cfcd6ae0
rules:
  - apiGroups:
      - ""
    resources:
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
      - secrets
      - services/proxy
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - impersonate
  - apiGroups:
      - ""
    resources:
      - pods
      - pods/attach
      - pods/exec
      - pods/portforward
      - pods/proxy
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
      - events
      - persistentvolumeclaims
      - replicationcontrollers
      - replicationcontrollers/scale
      - secrets
      - serviceaccounts
      - services
      - services/proxy
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - daemonsets
      - deployments
      - deployments/rollback
      - deployments/scale
      - replicasets
      - replicasets/scale
      - statefulsets
      - statefulsets/scale
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - jobs
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - deployments
      - deployments/rollback
      - deployments/scale
      - ingresses
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicationcontrollers/scale
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - networkpolicies
    verbs:
      - create
      - delete
      - deletecollection
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: system:aggregate-to-view
  resourceVersion: "85"
  uid: 765d664b-20d8-4ebe-a1b2-4fe161ad2b95
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - pods
      - replicationcontrollers
      - replicationcontrollers/scale
      - serviceaccounts
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - events
      - limitranges
      - namespaces/status
      - pods/log
      - pods/status
      - replicationcontrollers/status
      - resourcequotas
      - resourcequotas/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - replicasets
      - replicasets/scale
      - replicasets/status
      - statefulsets
      - statefulsets/scale
      - statefulsets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
      - horizontalpodautoscalers/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - cronjobs/status
      - jobs
      - jobs/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - ingresses
      - ingresses/status
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicasets/status
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
      - poddisruptionbudgets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingresses/status
      - networkpolicies
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:auth-delegator
  resourceVersion: "90"
  uid: b8b0d798-eb05-4b98-832a-c3b92687b7be
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:basic-user
  resourceVersion: "78"
  uid: 7a679121-1f6e-4669-8a2c-710c75eb6ea0
rules:
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectaccessreviews
      - selfsubjectrulesreviews
    verbs:
      - create
  - apiGroups:
      - authentication.k8s.io
    resources:
      - selfsubjectreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
  resourceVersion: "95"
  uid: 2540339e-d7a7-4cde-b22f-2cfe01335eb9
rules:
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/nodeclient
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
  resourceVersion: "96"
  uid: 4ce975c3-729e-4faf-a23b-5b0383745cf5
rules:
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/selfnodeclient
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:certificates.k8s.io:kube-apiserver-client-approver
  resourceVersion: "100"
  uid: 836ea628-ac0e-40b3-bf71-56ac1c65fed1
rules:
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/kube-apiserver-client
    resources:
      - signers
    verbs:
      - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:certificates.k8s.io:kube-apiserver-client-kubelet-approver
  resourceVersion: "101"
  uid: 7a721272-3f8b-45c7-860c-b6da8f57533f
rules:
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/kube-apiserver-client-kubelet
    resources:
      - signers
    verbs:
      - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:certificates.k8s.io:kubelet-serving-approver
  resourceVersion: "99"
  uid: a2336d94-e17b-4ff3-ba72-b82dae7cc469
rules:
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/kubelet-serving
    resources:
      - signers
    verbs:
      - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:certificates.k8s.io:legacy-unknown-approver
  resourceVersion: "98"
  uid: 4a338612-d689-4bbe-9c40-b8ad7542af16
rules:
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/legacy-unknown
    resources:
      - signers
    verbs:
      - approve
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:attachdetach-controller
  resourceVersion: "106"
  uid: 8feec91b-b376-44f6-afad-3937ea82041d
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csidrivers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:certificate-controller
  resourceVersion: "132"
  uid: 012c0fbd-bfff-4638-a67d-1c2f8c771413
rules:
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests/approval
      - certificatesigningrequests/status
    verbs:
      - update
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/kube-apiserver-client-kubelet
    resources:
      - signers
    verbs:
      - approve
  - apiGroups:
      - certificates.k8s.io
    resourceNames:
      - kubernetes.io/kube-apiserver-client
      - kubernetes.io/kube-apiserver-client-kubelet
      - kubernetes.io/kubelet-serving
      - kubernetes.io/legacy-unknown
    resources:
      - signers
    verbs:
      - sign
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:clusterrole-aggregation-controller
  resourceVersion: "107"
  uid: edd56b79-5cd9-4d7b-8dba-897dc1ed9612
rules:
  - apiGroups:
      - rbac.authorization.k8s.io
    resources:
      - clusterroles
    verbs:
      - escalate
      - get
      - list
      - patch
      - update
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:cronjob-controller
  resourceVersion: "108"
  uid: 99cffa7b-a153-4e7a-9975-f0de77abbc73
rules:
  - apiGroups:
      - batch
    resources:
      - cronjobs
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs/status
    verbs:
      - update
  - apiGroups:
      - batch
    resources:
      - cronjobs/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:daemon-set-controller
  resourceVersion: "109"
  uid: b3256946-c090-40b1-b9f5-020b01f513d3
rules:
  - apiGroups:
      - apps
      - extensions
    resources:
      - daemonsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - daemonsets/status
    verbs:
      - update
  - apiGroups:
      - apps
      - extensions
    resources:
      - daemonsets/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
      - patch
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/binding
    verbs:
      - create
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:deployment-controller
  resourceVersion: "110"
  uid: 7299e017-698b-4eaf-a571-ac5b18ca6142
rules:
  - apiGroups:
      - apps
      - extensions
    resources:
      - deployments
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - deployments/status
    verbs:
      - update
  - apiGroups:
      - apps
      - extensions
    resources:
      - deployments/finalizers
    verbs:
      - update
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:disruption-controller
  resourceVersion: "111"
  uid: 6b9cd7b5-187a-4766-a6d7-2fa900a6a8da
rules:
  - apiGroups:
      - apps
      - extensions
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
      - update
  - apiGroups:
      - '*'
    resources:
      - '*/scale'
    verbs:
      - get
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:endpoint-controller
  resourceVersion: "112"
  uid: b2826feb-9897-474f-87cf-97d6a4c15212
rules:
  - apiGroups:
      - ""
    resources:
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - get
      - list
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints/restricted
    verbs:
      - create
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:endpointslice-controller
  resourceVersion: "113"
  uid: 10f24dfd-29cf-44d9-b1b6-6db1e8557cbc
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/finalizers
    verbs:
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - create
      - delete
      - get
      - list
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:endpointslicemirroring-controller
  resourceVersion: "114"
  uid: 472f3a4b-da14-4623-acea-a32c7a1a2de0
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - endpoints/finalizers
    verbs:
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - create
      - delete
      - get
      - list
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:ephemeral-volume-controller
  resourceVersion: "116"
  uid: 375c4760-a934-443f-be72-801751ac3d64
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:expand-controller
  resourceVersion: "115"
  uid: 9ef0a6ba-04e7-40b3-b8e5-17748242bc0e
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:generic-garbage-collector
  resourceVersion: "117"
  uid: 437cfe4e-ff78-4a7d-81eb-b5d529d2adbd
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:horizontal-pod-autoscaler
  resourceVersion: "118"
  uid: 8ab7b018-67e9-4b6c-a8d2-dc70894d4c65
rules:
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers/status
    verbs:
      - update
  - apiGroups:
      - '*'
    resources:
      - '*/scale'
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
  - apiGroups:
      - metrics.k8s.io
    resources:
      - pods
    verbs:
      - list
  - apiGroups:
      - custom.metrics.k8s.io
    resources:
      - '*'
    verbs:
      - get
      - list
  - apiGroups:
      - external.metrics.k8s.io
    resources:
      - '*'
    verbs:
      - get
      - list
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:job-controller
  resourceVersion: "119"
  uid: f136053d-ebb7-446d-b50e-60f6f02f4927
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs/status
    verbs:
      - update
  - apiGroups:
      - batch
    resources:
      - jobs/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
      - patch
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:legacy-service-account-token-cleaner
  resourceVersion: "138"
  uid: 14d4e0d1-aae5-4b3b-b60b-a1a98dae9b86
rules:
  - apiGroups:
      - ""
    resourceNames:
      - kube-apiserver-legacy-service-account-token-tracking
    resources:
      - configmaps
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:namespace-controller
  resourceVersion: "120"
  uid: 59d8feb1-d896-4413-88ff-ad1ded117473
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces/finalize
      - namespaces/status
    verbs:
      - update
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - delete
      - deletecollection
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:node-controller
  resourceVersion: "121"
  uid: c379c32b-1140-471e-8184-29efec35b8d5
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - delete
      - get
      - list
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
      - list
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:persistent-volume-binder
  resourceVersion: "122"
  uid: ce7f6e93-1d1e-440a-8be3-b44f09855f7a
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - create
      - delete
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumes/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - watch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:pod-garbage-collector
  resourceVersion: "123"
  uid: e2223bbc-3d35-4d2d-a8a0-a6cb3156aa36
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:pv-protection-controller
  resourceVersion: "134"
  uid: 8bec20fa-50af-4cea-afd3-1cce6c8441fe
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:pvc-protection-controller
  resourceVersion: "133"
  uid: b5c38ed4-9813-4ff4-b9a8-23b1b9fc0361
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:replicaset-controller
  resourceVersion: "124"
  uid: 0d5adf80-3900-486c-ae83-3bd26444bb41
rules:
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets/status
    verbs:
      - update
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
      - patch
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:replication-controller
  resourceVersion: "125"
  uid: 9794ace4-0399-4949-a6cd-c09383e9366d
rules:
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers/status
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - list
      - patch
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:resourcequota-controller
  resourceVersion: "126"
  uid: 7d863067-ff41-48fb-b205-c4c40cfa8ba9
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - resourcequotas/status
    verbs:
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:root-ca-cert-publisher
  resourceVersion: "136"
  uid: a7729051-a6f9-4f75-b90e-efbc7a4f7487
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:route-controller
  resourceVersion: "127"
  uid: 2dc6b10d-3165-47b8-8c5c-1067bb9cbd21
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:service-account-controller
  resourceVersion: "128"
  uid: 4672b529-0d0f-4377-9b57-c9a39841e6bd
rules:
  - apiGroups:
      - ""
    resources:
      - serviceaccounts
    verbs:
      - create
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:service-controller
  resourceVersion: "129"
  uid: 08c4afec-af4e-4240-99ec-31cd52bd7f75
rules:
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:statefulset-controller
  resourceVersion: "130"
  uid: 1c89d472-b6d9-4eb6-8573-f23c2d8e34d3
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets/status
    verbs:
      - update
  - apiGroups:
      - apps
    resources:
      - statefulsets/finalizers
    verbs:
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - delete
      - update
  - apiGroups:
      - ""
    resources:
      - pods/finalizers
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:ttl-after-finished-controller
  resourceVersion: "135"
  uid: c520ab37-8d7b-4cb9-ae7e-163dbb51830d
rules:
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:ttl-controller
  resourceVersion: "131"
  uid: e529b949-f4a2-4a96-b715-555aec179a99
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:validatingadmissionpolicy-status-controller
  resourceVersion: "137"
  uid: fc65cca8-7b62-4831-80e6-18e8d558397d
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingadmissionpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingadmissionpolicies/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: system:coredns
  resourceVersion: "262"
  uid: 0edcb411-cc07-4b74-9a0e-1480f32d517a
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
      - pods
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:discovery
  resourceVersion: "74"
  uid: c83f61a2-b003-4b5b-a28d-0ee50308ce0f
rules:
  - nonResourceURLs:
      - /api
      - /api/*
      - /apis
      - /apis/*
      - /healthz
      - /livez
      - /openapi
      - /openapi/*
      - /readyz
      - /version
      - /version/
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:heapster
  resourceVersion: "86"
  uid: d04bab9f-388f-4eb1-9912-0035cd2a6823
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - namespaces
      - nodes
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - deployments
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-aggregator
  resourceVersion: "91"
  uid: 9c9d322e-62c3-44bb-bb9e-087f3474dcaa
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-controller-manager
  resourceVersion: "92"
  uid: 58e17380-4782-40f0-b470-39a27d5c9dd5
rules:
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - kube-controller-manager
    resources:
      - leases
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - secrets
      - serviceaccounts
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps
      - namespaces
      - secrets
      - serviceaccounts
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - secrets
      - serviceaccounts
    verbs:
      - update
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-dns
  resourceVersion: "93"
  uid: 334d3552-e4a2-4d59-b6d3-d957eaa9ee62
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-scheduler
  resourceVersion: "105"
  uid: 7ad8c1f9-972b-4c67-838d-7bea9fb79148
rules:
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
  - apiGroups:
      - coordination.k8s.io
    resourceNames:
      - kube-scheduler
    resources:
      - leases
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leasecandidates
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - pods/binding
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - replicationcontrollers
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
      - extensions
    resources:
      - replicasets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csidrivers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csistoragecapacities
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kubelet-api-admin
  resourceVersion: "103"
  uid: 60019a2c-1492-4cf2-8da8-a93d3b9f8ab1
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - proxy
  - apiGroups:
      - ""
    resources:
      - nodes/log
      - nodes/metrics
      - nodes/proxy
      - nodes/stats
    verbs:
      - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:monitoring
  resourceVersion: "76"
  uid: 7dd23869-215e-4b4f-a0d6-dda02e2692af
rules:
  - nonResourceURLs:
      - /healthz
      - /healthz/*
      - /livez
      - /livez/*
      - /metrics
      - /metrics/slis
      - /readyz
      - /readyz/*
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node
  resourceVersion: "87"
  uid: 52a7f7a6-c2ec-437e-9c8f-345c78333bb7
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - localsubjectaccessreviews
      - subjectaccessreviews
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - create
      - delete
  - apiGroups:
      - ""
    resources:
      - pods/status
    verbs:
      - patch
      - update
  - apiGroups:
      - ""
    resources:
      - pods/eviction
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
      - persistentvolumes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - volumeattachments
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - serviceaccounts/token
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - storage.k8s.io
    resources:
      - csidrivers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - csinodes
    verbs:
      - create
      - delete
      - get
      - patch
      - update
  - apiGroups:
      - node.k8s.io
    resources:
      - runtimeclasses
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node-bootstrapper
  resourceVersion: "89"
  uid: 0ea36d1a-3519-43bb-b944-b50223043074
rules:
  - apiGroups:
      - certificates.k8s.io
    resources:
      - certificatesigningrequests
    verbs:
      - create
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node-problem-detector
  resourceVersion: "88"
  uid: 3eeb0be5-38eb-4469-9802-ae9cd72cbe2f
rules:
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node-proxier
  resourceVersion: "104"
  uid: 4500293c-ebaf-40e4-92b8-40f35dd16d18
rules:
  - apiGroups:
      - ""
    resources:
      - endpoints
      - services
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:persistent-volume-provisioner
  resourceVersion: "94"
  uid: e3042309-9203-4115-b68b-3067393b78b3
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - create
      - delete
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - update
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - watch
  - apiGroups:
      - ""
      - events.k8s.io
    resources:
      - events
    verbs:
      - create
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:public-info-viewer
  resourceVersion: "79"
  uid: f8b4803e-89e2-4061-8650-e13dc7e5f849
rules:
  - nonResourceURLs:
      - /healthz
      - /livez
      - /readyz
      - /version
      - /version/
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:service-account-issuer-discovery
  resourceVersion: "102"
  uid: f130fc2b-49b6-4cfa-9328-f134592e7703
rules:
  - nonResourceURLs:
      - /.well-known/openid-configuration
      - /.well-known/openid-configuration/
      - /openid/v1/jwks
      - /openid/v1/jwks/
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:volume-scheduler
  resourceVersion: "97"
  uid: 13d075f5-c6fa-4444-9fa9-a2219278b8a2
rules:
  - apiGroups:
      - ""
    resources:
      - persistentvolumes
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - storage.k8s.io
    resources:
      - storageclasses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - persistentvolumeclaims
    verbs:
      - get
      - list
      - patch
      - update
      - watch
---
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: view
  resourceVersion: "508"
  uid: 5a1a4a0b-5b21-4e38-9f9c-3ca0cd804b7d
rules:
  - apiGroups:
      - kyverno.io
    resources:
      - cleanuppolicies
      - clustercleanuppolicies
      - policies
      - clusterpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - wgpolicyk8s.io
    resources:
      - policyreports
      - clusterpolicyreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - admissionreports
      - clusteradmissionreports
      - backgroundscanreports
      - clusterbackgroundscanreports
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - kyverno.io
    resources:
      - updaterequests
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - persistentvolumeclaims
      - persistentvolumeclaims/status
      - pods
      - replicationcontrollers
      - replicationcontrollers/scale
      - serviceaccounts
      - services
      - services/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - bindings
      - events
      - limitranges
      - namespaces/status
      - pods/log
      - pods/status
      - replicationcontrollers/status
      - resourcequotas
      - resourcequotas/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - controllerrevisions
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - replicasets
      - replicasets/scale
      - replicasets/status
      - statefulsets
      - statefulsets/scale
      - statefulsets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - autoscaling
    resources:
      - horizontalpodautoscalers
      - horizontalpodautoscalers/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - batch
    resources:
      - cronjobs
      - cronjobs/status
      - jobs
      - jobs/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - daemonsets
      - daemonsets/status
      - deployments
      - deployments/scale
      - deployments/status
      - ingresses
      - ingresses/status
      - networkpolicies
      - replicasets
      - replicasets/scale
      - replicasets/status
      - replicationcontrollers/scale
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy
    resources:
      - poddisruptionbudgets
      - poddisruptionbudgets/status
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - networking.k8s.io
    resources:
      - ingresses
      - ingresses/status
      - networkpolicies
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: cluster-admin
  resourceVersion: "139"
  uid: 31ef0b18-9c09-43b5-bda3-6ebca8daefd1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kindnet
  resourceVersion: "307"
  uid: 9ca70315-99bb-48e3-a8e3-bdea218ca777
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kindnet
subjects:
  - kind: ServiceAccount
    name: kindnet
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:cluster-admins
  resourceVersion: "240"
  uid: 34d700e2-59aa-40fa-847e-16376fbbf305
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: kubeadm:cluster-admins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:get-nodes
  resourceVersion: "251"
  uid: 1c502f7d-c586-42ed-8d9c-f0ba3eaee7ef
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeadm:get-nodes
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:kubelet-bootstrap
  resourceVersion: "252"
  uid: 419c035b-b078-4fd6-8eb5-ecf23d229fa3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-bootstrapper
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:node-autoapprove-bootstrap
  resourceVersion: "253"
  uid: 5c29705c-eb8c-433d-b65b-e7ab1cf7c98c
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: kubeadm:node-autoapprove-certificate-rotation
  resourceVersion: "254"
  uid: cb36f6a5-81e3-4886-b810-80ca8d71589a
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:54Z"
  name: kubeadm:node-proxier
  resourceVersion: "288"
  uid: 2bd292f8-5a78-48f7-b1de-6212178c272d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-proxier
subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno-cleanup-jobs
  resourceVersion: "518"
  uid: 13089d84-07fb-43ed-9cbf-a1fcd9e5caf5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno-cleanup-jobs
subjects:
  - kind: ServiceAccount
    name: kyverno-cleanup-jobs
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: admission-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:admission-controller
  resourceVersion: "515"
  uid: 09ab9e9e-cf72-434f-a1ae-ea10ba5f6cbb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno:admission-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-admission-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: background-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:background-controller
  resourceVersion: "516"
  uid: 4b78d641-f80a-49a9-85b0-b51576019f10
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno:background-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-background-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: cleanup-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:cleanup-controller
  resourceVersion: "517"
  uid: 631babf8-f421-4fcb-ad84-12c3700aa572
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno:cleanup-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-cleanup-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    app.kubernetes.io/component: reports-controller
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/part-of: kyverno
    app.kubernetes.io/version: v1.11.1
  name: kyverno:reports-controller
  resourceVersion: "520"
  uid: f3a2e4c3-d860-4334-9be9-9bc40b6829b5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kyverno:reports-controller
subjects:
  - kind: ServiceAccount
    name: kyverno-reports-controller
    namespace: kyverno
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"local-path-provisioner-bind"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"local-path-provisioner-role"},"subjects":[{"kind":"ServiceAccount","name":"local-path-provisioner-service-account","namespace":"local-path-storage"}]}
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: local-path-provisioner-bind
  resourceVersion: "316"
  uid: 37daf0a6-1829-45ee-ab10-8ddd53426b26
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: local-path-provisioner-role
subjects:
  - kind: ServiceAccount
    name: local-path-provisioner-service-account
    namespace: local-path-storage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:basic-user
  resourceVersion: "142"
  uid: 6125fbc1-4dd5-4f91-a3df-690d6262d887
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:basic-user
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:attachdetach-controller
  resourceVersion: "151"
  uid: 8667bebf-65d6-49d9-8f4f-c153b1712b9a
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:attachdetach-controller
subjects:
  - kind: ServiceAccount
    name: attachdetach-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:certificate-controller
  resourceVersion: "177"
  uid: e62ebae4-c665-40b3-a619-2b7523b6bdc5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:certificate-controller
subjects:
  - kind: ServiceAccount
    name: certificate-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:clusterrole-aggregation-controller
  resourceVersion: "152"
  uid: f657a70f-2910-4f29-a6dc-57c7bbd61ffd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:clusterrole-aggregation-controller
subjects:
  - kind: ServiceAccount
    name: clusterrole-aggregation-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:cronjob-controller
  resourceVersion: "153"
  uid: f21dec28-2490-432e-a5e4-727c4b92e2f9
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:cronjob-controller
subjects:
  - kind: ServiceAccount
    name: cronjob-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:daemon-set-controller
  resourceVersion: "154"
  uid: ea05cdb3-9285-485d-9ec6-e9850d9512e4
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:daemon-set-controller
subjects:
  - kind: ServiceAccount
    name: daemon-set-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:deployment-controller
  resourceVersion: "155"
  uid: 40bd6bdb-3f80-45e2-8191-bf82d2dfbfee
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:deployment-controller
subjects:
  - kind: ServiceAccount
    name: deployment-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:disruption-controller
  resourceVersion: "156"
  uid: 488f0e3e-f88d-462c-b680-076ec98f9f42
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:disruption-controller
subjects:
  - kind: ServiceAccount
    name: disruption-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:endpoint-controller
  resourceVersion: "157"
  uid: e1a041e6-901e-4405-a73f-55a5dab8d9ab
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:endpoint-controller
subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:endpointslice-controller
  resourceVersion: "158"
  uid: 698676cd-4d83-4678-baaf-dd9f79f44662
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:endpointslice-controller
subjects:
  - kind: ServiceAccount
    name: endpointslice-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:endpointslicemirroring-controller
  resourceVersion: "159"
  uid: b042982c-ed45-4601-a52c-087f009d8f88
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:endpointslicemirroring-controller
subjects:
  - kind: ServiceAccount
    name: endpointslicemirroring-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:ephemeral-volume-controller
  resourceVersion: "161"
  uid: f3e226a5-938c-4d5c-a151-f307631b9f1b
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:ephemeral-volume-controller
subjects:
  - kind: ServiceAccount
    name: ephemeral-volume-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:expand-controller
  resourceVersion: "160"
  uid: aa7997f5-e7f6-4c8f-a937-32ccb29694f4
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:expand-controller
subjects:
  - kind: ServiceAccount
    name: expand-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:generic-garbage-collector
  resourceVersion: "162"
  uid: 24a878a1-c87b-4672-a7da-4cdaba9e722e
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:generic-garbage-collector
subjects:
  - kind: ServiceAccount
    name: generic-garbage-collector
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:horizontal-pod-autoscaler
  resourceVersion: "163"
  uid: 2473cb5f-edf4-4c1b-82fe-e0b4473c95eb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:horizontal-pod-autoscaler
subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:job-controller
  resourceVersion: "164"
  uid: 4634aefa-c739-4e5c-b9e1-67a845f27ecf
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:job-controller
subjects:
  - kind: ServiceAccount
    name: job-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:legacy-service-account-token-cleaner
  resourceVersion: "183"
  uid: 734ccd46-4762-4b73-abee-bd2a6801f961
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:legacy-service-account-token-cleaner
subjects:
  - kind: ServiceAccount
    name: legacy-service-account-token-cleaner
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:namespace-controller
  resourceVersion: "165"
  uid: 2c65e49a-c8fd-4f85-87fb-2232f9def9fd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:namespace-controller
subjects:
  - kind: ServiceAccount
    name: namespace-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:node-controller
  resourceVersion: "166"
  uid: 589c3a53-6551-45e4-9be9-7e3c30f075f1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:node-controller
subjects:
  - kind: ServiceAccount
    name: node-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:persistent-volume-binder
  resourceVersion: "167"
  uid: 934a2264-bff1-47d5-8aa4-fc04b0af3738
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:persistent-volume-binder
subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:pod-garbage-collector
  resourceVersion: "168"
  uid: d67da08a-bc8c-4a06-8990-da4c4b86d2a2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:pod-garbage-collector
subjects:
  - kind: ServiceAccount
    name: pod-garbage-collector
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:pv-protection-controller
  resourceVersion: "179"
  uid: c07044d6-cee1-4a19-a879-8497559c3e8f
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:pv-protection-controller
subjects:
  - kind: ServiceAccount
    name: pv-protection-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:pvc-protection-controller
  resourceVersion: "178"
  uid: 3af59696-e839-44d6-ac0b-9c1b8967fb63
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:pvc-protection-controller
subjects:
  - kind: ServiceAccount
    name: pvc-protection-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:replicaset-controller
  resourceVersion: "169"
  uid: a9638664-5a2c-4550-bdf3-32e792b67f0f
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:replicaset-controller
subjects:
  - kind: ServiceAccount
    name: replicaset-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:replication-controller
  resourceVersion: "170"
  uid: acd3a812-e7a4-4b70-be5b-aacd7a238dfb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:replication-controller
subjects:
  - kind: ServiceAccount
    name: replication-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:resourcequota-controller
  resourceVersion: "171"
  uid: 1e1972b0-ae14-4ca9-8d7f-82d39534e9f5
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:resourcequota-controller
subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:root-ca-cert-publisher
  resourceVersion: "181"
  uid: ab0381b7-30f7-465f-939d-23c9c003820a
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:root-ca-cert-publisher
subjects:
  - kind: ServiceAccount
    name: root-ca-cert-publisher
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:route-controller
  resourceVersion: "172"
  uid: bee31223-1941-4e25-82b8-8776149a513b
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:route-controller
subjects:
  - kind: ServiceAccount
    name: route-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:service-account-controller
  resourceVersion: "173"
  uid: 614b2b6c-ec93-4ba5-9d4b-6d2fdba627c1
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:service-account-controller
subjects:
  - kind: ServiceAccount
    name: service-account-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:service-controller
  resourceVersion: "174"
  uid: 3d39bc2b-b969-4bb7-a189-abcfddf692c2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:service-controller
subjects:
  - kind: ServiceAccount
    name: service-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:statefulset-controller
  resourceVersion: "175"
  uid: 344b24f1-397e-4da1-a969-66f059694664
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:statefulset-controller
subjects:
  - kind: ServiceAccount
    name: statefulset-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:ttl-after-finished-controller
  resourceVersion: "180"
  uid: 8fba200d-1d40-40ea-9231-c853d477c59c
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:ttl-after-finished-controller
subjects:
  - kind: ServiceAccount
    name: ttl-after-finished-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:ttl-controller
  resourceVersion: "176"
  uid: 93e1e8f2-b4d1-4297-8dee-eb3a253a5a18
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:ttl-controller
subjects:
  - kind: ServiceAccount
    name: ttl-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:controller:validatingadmissionpolicy-status-controller
  resourceVersion: "182"
  uid: 3336d22f-9904-49a9-b626-40e0e3d44201
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:controller:validatingadmissionpolicy-status-controller
subjects:
  - kind: ServiceAccount
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: "2025-05-17T04:10:53Z"
  name: system:coredns
  resourceVersion: "279"
  uid: 8ed40ec1-e61c-439d-8098-eeb92cf6a807
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:coredns
subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:discovery
  resourceVersion: "141"
  uid: 3a44b8f8-a52a-49c6-8102-8517ef58b902
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:discovery
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-controller-manager
  resourceVersion: "145"
  uid: e52c4516-4f97-40c0-966b-34b81fde14c9
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-controller-manager
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-dns
  resourceVersion: "146"
  uid: 52afcca4-5d9c-4117-b17b-87ab62fcfdbe
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-dns
subjects:
  - kind: ServiceAccount
    name: kube-dns
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:kube-scheduler
  resourceVersion: "147"
  uid: 83b5687a-de24-4400-beb8-d832f123604d
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:kube-scheduler
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:monitoring
  resourceVersion: "140"
  uid: 35918611-5d91-4f91-8209-43352cfb30a3
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:monitoring
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node
  resourceVersion: "149"
  uid: d866812b-1bef-457e-ab53-26221f665e8b
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:node-proxier
  resourceVersion: "144"
  uid: 2a5d9a56-1ee7-40b2-a59c-b99f35f80471
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:node-proxier
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-proxy
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:public-info-viewer
  resourceVersion: "143"
  uid: 109a1886-5f68-4208-9097-744e3e8e7688
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:public-info-viewer
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:service-account-issuer-discovery
  resourceVersion: "150"
  uid: fb002496-4729-48a4-885e-9e9b4e2fd80b
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:service-account-issuer-discovery
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: "2025-05-17T04:10:52Z"
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: system:volume-scheduler
  resourceVersion: "148"
  uid: e49c5727-af9e-4e97-8219-f5662b0f8129
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: system:volume-scheduler
subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"storage.k8s.io/v1","kind":"StorageClass","metadata":{"annotations":{"storageclass.kubernetes.io/is-default-class":"true"},"name":"standard"},"provisioner":"rancher.io/local-path","reclaimPolicy":"Delete","volumeBindingMode":"WaitForFirstConsumer"}
    storageclass.kubernetes.io/is-default-class: "true"
  creationTimestamp: "2025-05-17T04:10:55Z"
  name: standard
  resourceVersion: "318"
  uid: d5425cc7-9541-4384-9f3b-437f72d05d92
provisioner: rancher.io/local-path
reclaimPolicy: Delete
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: admissionreports.kyverno.io
  resourceVersion: "444"
  uid: eeb7964c-5727-4459-b904-eb8496e19728
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: AdmissionReport
    listKind: AdmissionReportList
    plural: admissionreports
    shortNames:
      - admr
    singular: admissionreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.summary.pass
          name: PASS
          type: integer
        - jsonPath: .spec.summary.fail
          name: FAIL
          type: integer
        - jsonPath: .spec.summary.warn
          name: WARN
          type: integer
        - jsonPath: .spec.summary.error
          name: ERROR
          type: integer
        - jsonPath: .spec.summary.skip
          name: SKIP
          type: integer
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.gvr']
          name: GVR
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.name']
          name: REF
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/report\.aggregate']
          name: AGGREGATE
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: AdmissionReport is the Schema for the AdmissionReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                owner:
                  description: Owner is a reference to the report owner (e.g. a Deployment, Namespace, or Node)
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    blockOwnerDeletion:
                      description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                      type: boolean
                    controller:
                      description: If true, this reference points to the managing controller.
                      type: boolean
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                    - uid
                  type: object
                  x-kubernetes-map-type: atomic
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              required:
                - owner
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: AdmissionReport
    listKind: AdmissionReportList
    plural: admissionreports
    shortNames:
      - admr
    singular: admissionreport
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: backgroundscanreports.kyverno.io
  resourceVersion: "447"
  uid: 56c117b6-961d-4c66-a45f-815e925ffbbf
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: BackgroundScanReport
    listKind: BackgroundScanReportList
    plural: backgroundscanreports
    shortNames:
      - bgscanr
    singular: backgroundscanreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.ownerReferences[0].apiVersion
          name: ApiVersion
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].name
          name: Subject
          priority: 1
          type: string
        - jsonPath: .spec.summary.pass
          name: Pass
          type: integer
        - jsonPath: .spec.summary.fail
          name: Fail
          type: integer
        - jsonPath: .spec.summary.warn
          name: Warn
          type: integer
        - jsonPath: .spec.summary.error
          name: Error
          type: integer
        - jsonPath: .spec.summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.hash']
          name: Hash
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: BackgroundScanReport is the Schema for the BackgroundScanReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: BackgroundScanReport
    listKind: BackgroundScanReportList
    plural: backgroundscanreports
    shortNames:
      - bgscanr
    singular: backgroundscanreport
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: cleanuppolicies.kyverno.io
  resourceVersion: "455"
  uid: a01a305d-cc2b-473b-8d93-eb22e50c4c95
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: CleanupPolicy
    listKind: CleanupPolicyList
    plural: cleanuppolicies
    shortNames:
      - cleanpol
    singular: cleanuppolicy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      name: v2alpha1
      schema:
        openAPIV3Schema:
          description: CleanupPolicy defines a rule for resource cleanup.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                conditions:
                  description: Conditions defines the conditions used to select the resources which will be cleaned up.
                  properties:
                    all:
                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    any:
                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                  type: object
                context:
                  description: Context defines variables and data sources that can be used during rule execution.
                  items:
                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                    properties:
                      apiCall:
                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                        properties:
                          data:
                            description: Data specifies the POST data sent to the server.
                            items:
                              description: RequestData contains the HTTP POST data
                              properties:
                                key:
                                  description: Key is a unique identifier for the data value
                                  type: string
                                value:
                                  description: Value is the data value
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                                - key
                                - value
                              type: object
                            type: array
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                            type: string
                          method:
                            default: GET
                            description: Method is the HTTP request type (GET or POST).
                            enum:
                              - GET
                              - POST
                            type: string
                          service:
                            description: Service is an API call to a JSON web service
                            properties:
                              caBundle:
                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                type: string
                              url:
                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                type: string
                            required:
                              - url
                            type: object
                          urlPath:
                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                            type: string
                        type: object
                      configMap:
                        description: ConfigMap is the ConfigMap reference.
                        properties:
                          name:
                            description: Name is the ConfigMap name.
                            type: string
                          namespace:
                            description: Namespace is the ConfigMap namespace.
                            type: string
                        required:
                          - name
                        type: object
                      imageRegistry:
                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                        properties:
                          imageRegistryCredentials:
                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                            properties:
                              allowInsecureRegistry:
                                description: AllowInsecureRegistry allows insecure access to a registry.
                                type: boolean
                              providers:
                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                items:
                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                  enum:
                                    - default
                                    - amazon
                                    - azure
                                    - google
                                    - github
                                  type: string
                                type: array
                              secrets:
                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                items:
                                  type: string
                                type: array
                            type: object
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                            type: string
                          reference:
                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                            type: string
                        required:
                          - reference
                        type: object
                      name:
                        description: Name is the variable name.
                        type: string
                      variable:
                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                        properties:
                          default:
                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                            x-kubernetes-preserve-unknown-fields: true
                          jmesPath:
                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                            type: string
                          value:
                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                  type: array
                exclude:
                  description: ExcludeResources defines when cleanuppolicy should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                match:
                  description: MatchResources defines when cleanuppolicy should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                schedule:
                  description: The schedule in Cron format
                  type: string
              required:
                - schedule
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastExecutionTime:
                  format: date-time
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: CleanupPolicy defines a rule for resource cleanup.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                conditions:
                  description: Conditions defines the conditions used to select the resources which will be cleaned up.
                  properties:
                    all:
                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    any:
                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                  type: object
                context:
                  description: Context defines variables and data sources that can be used during rule execution.
                  items:
                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                    properties:
                      apiCall:
                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                        properties:
                          data:
                            description: Data specifies the POST data sent to the server.
                            items:
                              description: RequestData contains the HTTP POST data
                              properties:
                                key:
                                  description: Key is a unique identifier for the data value
                                  type: string
                                value:
                                  description: Value is the data value
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                                - key
                                - value
                              type: object
                            type: array
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                            type: string
                          method:
                            default: GET
                            description: Method is the HTTP request type (GET or POST).
                            enum:
                              - GET
                              - POST
                            type: string
                          service:
                            description: Service is an API call to a JSON web service
                            properties:
                              caBundle:
                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                type: string
                              url:
                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                type: string
                            required:
                              - url
                            type: object
                          urlPath:
                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                            type: string
                        type: object
                      configMap:
                        description: ConfigMap is the ConfigMap reference.
                        properties:
                          name:
                            description: Name is the ConfigMap name.
                            type: string
                          namespace:
                            description: Namespace is the ConfigMap namespace.
                            type: string
                        required:
                          - name
                        type: object
                      imageRegistry:
                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                        properties:
                          imageRegistryCredentials:
                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                            properties:
                              allowInsecureRegistry:
                                description: AllowInsecureRegistry allows insecure access to a registry.
                                type: boolean
                              providers:
                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                items:
                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                  enum:
                                    - default
                                    - amazon
                                    - azure
                                    - google
                                    - github
                                  type: string
                                type: array
                              secrets:
                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                items:
                                  type: string
                                type: array
                            type: object
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                            type: string
                          reference:
                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                            type: string
                        required:
                          - reference
                        type: object
                      name:
                        description: Name is the variable name.
                        type: string
                      variable:
                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                        properties:
                          default:
                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                            x-kubernetes-preserve-unknown-fields: true
                          jmesPath:
                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                            type: string
                          value:
                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                  type: array
                exclude:
                  description: ExcludeResources defines when cleanuppolicy should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                match:
                  description: MatchResources defines when cleanuppolicy should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                schedule:
                  description: The schedule in Cron format
                  type: string
              required:
                - schedule
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastExecutionTime:
                  format: date-time
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: CleanupPolicy
    listKind: CleanupPolicyList
    plural: cleanuppolicies
    shortNames:
      - cleanpol
    singular: cleanuppolicy
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v2beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: clusteradmissionreports.kyverno.io
  resourceVersion: "457"
  uid: 3e3a20a6-d532-4601-83f6-ccac71abf5cd
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterAdmissionReport
    listKind: ClusterAdmissionReportList
    plural: clusteradmissionreports
    shortNames:
      - cadmr
    singular: clusteradmissionreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.summary.pass
          name: PASS
          type: integer
        - jsonPath: .spec.summary.fail
          name: FAIL
          type: integer
        - jsonPath: .spec.summary.warn
          name: WARN
          type: integer
        - jsonPath: .spec.summary.error
          name: ERROR
          type: integer
        - jsonPath: .spec.summary.skip
          name: SKIP
          type: integer
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.gvr']
          name: GVR
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.name']
          name: REF
          priority: 1
          type: string
        - jsonPath: .metadata.labels['audit\.kyverno\.io/report\.aggregate']
          name: AGGREGATE
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterAdmissionReport is the Schema for the ClusterAdmissionReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                owner:
                  description: Owner is a reference to the report owner (e.g. a Deployment, Namespace, or Node)
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    blockOwnerDeletion:
                      description: If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion for how the garbage collector interacts with this field and enforces the foreground deletion. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
                      type: boolean
                    controller:
                      description: If true, this reference points to the managing controller.
                      type: boolean
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids'
                      type: string
                  required:
                    - apiVersion
                    - kind
                    - name
                    - uid
                  type: object
                  x-kubernetes-map-type: atomic
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              required:
                - owner
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: ClusterAdmissionReport
    listKind: ClusterAdmissionReportList
    plural: clusteradmissionreports
    shortNames:
      - cadmr
    singular: clusteradmissionreport
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: clusterbackgroundscanreports.kyverno.io
  resourceVersion: "458"
  uid: 0559d4b2-90d4-400c-ad2f-ff4e3b8624cb
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterBackgroundScanReport
    listKind: ClusterBackgroundScanReportList
    plural: clusterbackgroundscanreports
    shortNames:
      - cbgscanr
    singular: clusterbackgroundscanreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.ownerReferences[0].apiVersion
          name: ApiVersion
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .metadata.ownerReferences[0].name
          name: Subject
          priority: 1
          type: string
        - jsonPath: .spec.summary.pass
          name: Pass
          type: integer
        - jsonPath: .spec.summary.fail
          name: Fail
          type: integer
        - jsonPath: .spec.summary.warn
          name: Warn
          type: integer
        - jsonPath: .spec.summary.error
          name: Error
          type: integer
        - jsonPath: .spec.summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .metadata.labels['audit\.kyverno\.io/resource\.hash']
          name: Hash
          priority: 1
          type: string
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterBackgroundScanReport is the Schema for the ClusterBackgroundScanReports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                results:
                  description: PolicyReportResult provides result details
                  items:
                    description: PolicyReportResult provides the result for an individual policy
                    properties:
                      category:
                        description: Category indicates policy category
                        type: string
                      message:
                        description: Description is a short user friendly message for the policy rule
                        type: string
                      policy:
                        description: Policy is the name or identifier of the policy
                        type: string
                      properties:
                        additionalProperties:
                          type: string
                        description: Properties provides additional information for the policy rule
                        type: object
                      resourceSelector:
                        description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      resources:
                        description: Subjects is an optional reference to the checked Kubernetes resources
                        items:
                          description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            fieldPath:
                              description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                              type: string
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                              type: string
                            namespace:
                              description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                              type: string
                            resourceVersion:
                              description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        type: array
                      result:
                        description: Result indicates the outcome of the policy rule execution
                        enum:
                          - pass
                          - fail
                          - warn
                          - error
                          - skip
                        type: string
                      rule:
                        description: Rule is the name or identifier of the rule within the policy
                        type: string
                      scored:
                        description: Scored indicates if this result is scored
                        type: boolean
                      severity:
                        description: Severity indicates policy check result criticality
                        enum:
                          - critical
                          - high
                          - low
                          - medium
                          - info
                        type: string
                      source:
                        description: Source is an identifier for the policy engine that manages this report
                        type: string
                      timestamp:
                        description: Timestamp indicates the time the result was found
                        properties:
                          nanos:
                            description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                            format: int32
                            type: integer
                          seconds:
                            description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                            format: int64
                            type: integer
                        required:
                          - nanos
                          - seconds
                        type: object
                    required:
                      - policy
                    type: object
                  type: array
                summary:
                  description: PolicyReportSummary provides a summary of results
                  properties:
                    error:
                      description: Error provides the count of policies that could not be evaluated
                      type: integer
                    fail:
                      description: Fail provides the count of policies whose requirements were not met
                      type: integer
                    pass:
                      description: Pass provides the count of policies whose requirements were met
                      type: integer
                    skip:
                      description: Skip indicates the count of policies that were not selected for evaluation
                      type: integer
                    warn:
                      description: Warn provides the count of non-scored policies whose requirements were not met
                      type: integer
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: ClusterBackgroundScanReport
    listKind: ClusterBackgroundScanReportList
    plural: clusterbackgroundscanreports
    shortNames:
      - cbgscanr
    singular: clusterbackgroundscanreport
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: clustercleanuppolicies.kyverno.io
  resourceVersion: "460"
  uid: 6aaa8376-352b-4a47-800a-fbe0dfb267a0
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterCleanupPolicy
    listKind: ClusterCleanupPolicyList
    plural: clustercleanuppolicies
    shortNames:
      - ccleanpol
    singular: clustercleanuppolicy
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      deprecated: true
      name: v2alpha1
      schema:
        openAPIV3Schema:
          description: ClusterCleanupPolicy defines rule for resource cleanup.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                conditions:
                  description: Conditions defines the conditions used to select the resources which will be cleaned up.
                  properties:
                    all:
                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    any:
                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                  type: object
                context:
                  description: Context defines variables and data sources that can be used during rule execution.
                  items:
                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                    properties:
                      apiCall:
                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                        properties:
                          data:
                            description: Data specifies the POST data sent to the server.
                            items:
                              description: RequestData contains the HTTP POST data
                              properties:
                                key:
                                  description: Key is a unique identifier for the data value
                                  type: string
                                value:
                                  description: Value is the data value
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                                - key
                                - value
                              type: object
                            type: array
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                            type: string
                          method:
                            default: GET
                            description: Method is the HTTP request type (GET or POST).
                            enum:
                              - GET
                              - POST
                            type: string
                          service:
                            description: Service is an API call to a JSON web service
                            properties:
                              caBundle:
                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                type: string
                              url:
                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                type: string
                            required:
                              - url
                            type: object
                          urlPath:
                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                            type: string
                        type: object
                      configMap:
                        description: ConfigMap is the ConfigMap reference.
                        properties:
                          name:
                            description: Name is the ConfigMap name.
                            type: string
                          namespace:
                            description: Namespace is the ConfigMap namespace.
                            type: string
                        required:
                          - name
                        type: object
                      imageRegistry:
                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                        properties:
                          imageRegistryCredentials:
                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                            properties:
                              allowInsecureRegistry:
                                description: AllowInsecureRegistry allows insecure access to a registry.
                                type: boolean
                              providers:
                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                items:
                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                  enum:
                                    - default
                                    - amazon
                                    - azure
                                    - google
                                    - github
                                  type: string
                                type: array
                              secrets:
                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                items:
                                  type: string
                                type: array
                            type: object
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                            type: string
                          reference:
                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                            type: string
                        required:
                          - reference
                        type: object
                      name:
                        description: Name is the variable name.
                        type: string
                      variable:
                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                        properties:
                          default:
                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                            x-kubernetes-preserve-unknown-fields: true
                          jmesPath:
                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                            type: string
                          value:
                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                  type: array
                exclude:
                  description: ExcludeResources defines when cleanuppolicy should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                match:
                  description: MatchResources defines when cleanuppolicy should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                schedule:
                  description: The schedule in Cron format
                  type: string
              required:
                - schedule
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastExecutionTime:
                  format: date-time
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.schedule
          name: Schedule
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: ClusterCleanupPolicy defines rule for resource cleanup.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                conditions:
                  description: Conditions defines the conditions used to select the resources which will be cleaned up.
                  properties:
                    all:
                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                    any:
                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                      items:
                        properties:
                          key:
                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                            x-kubernetes-preserve-unknown-fields: true
                          message:
                            description: Message is an optional display message
                            type: string
                          operator:
                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                            enum:
                              - Equals
                              - NotEquals
                              - AnyIn
                              - AllIn
                              - AnyNotIn
                              - AllNotIn
                              - GreaterThanOrEquals
                              - GreaterThan
                              - LessThanOrEquals
                              - LessThan
                              - DurationGreaterThanOrEquals
                              - DurationGreaterThan
                              - DurationLessThanOrEquals
                              - DurationLessThan
                            type: string
                          value:
                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                      type: array
                  type: object
                context:
                  description: Context defines variables and data sources that can be used during rule execution.
                  items:
                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                    properties:
                      apiCall:
                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                        properties:
                          data:
                            description: Data specifies the POST data sent to the server.
                            items:
                              description: RequestData contains the HTTP POST data
                              properties:
                                key:
                                  description: Key is a unique identifier for the data value
                                  type: string
                                value:
                                  description: Value is the data value
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                                - key
                                - value
                              type: object
                            type: array
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                            type: string
                          method:
                            default: GET
                            description: Method is the HTTP request type (GET or POST).
                            enum:
                              - GET
                              - POST
                            type: string
                          service:
                            description: Service is an API call to a JSON web service
                            properties:
                              caBundle:
                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                type: string
                              url:
                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                type: string
                            required:
                              - url
                            type: object
                          urlPath:
                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                            type: string
                        type: object
                      configMap:
                        description: ConfigMap is the ConfigMap reference.
                        properties:
                          name:
                            description: Name is the ConfigMap name.
                            type: string
                          namespace:
                            description: Namespace is the ConfigMap namespace.
                            type: string
                        required:
                          - name
                        type: object
                      imageRegistry:
                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                        properties:
                          imageRegistryCredentials:
                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                            properties:
                              allowInsecureRegistry:
                                description: AllowInsecureRegistry allows insecure access to a registry.
                                type: boolean
                              providers:
                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                items:
                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                  enum:
                                    - default
                                    - amazon
                                    - azure
                                    - google
                                    - github
                                  type: string
                                type: array
                              secrets:
                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                items:
                                  type: string
                                type: array
                            type: object
                          jmesPath:
                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                            type: string
                          reference:
                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                            type: string
                        required:
                          - reference
                        type: object
                      name:
                        description: Name is the variable name.
                        type: string
                      variable:
                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                        properties:
                          default:
                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                            x-kubernetes-preserve-unknown-fields: true
                          jmesPath:
                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                            type: string
                          value:
                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                            x-kubernetes-preserve-unknown-fields: true
                        type: object
                    type: object
                  type: array
                exclude:
                  description: ExcludeResources defines when cleanuppolicy should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                match:
                  description: MatchResources defines when cleanuppolicy should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
                schedule:
                  description: The schedule in Cron format
                  type: string
              required:
                - schedule
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastExecutionTime:
                  format: date-time
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: ClusterCleanupPolicy
    listKind: ClusterCleanupPolicyList
    plural: clustercleanuppolicies
    shortNames:
      - ccleanpol
    singular: clustercleanuppolicy
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v2beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:02Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: clusterpolicies.kyverno.io
  resourceVersion: "476"
  uid: 5b02ac45-5b6c-454e-b22e-2296cca9c2d0
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: ClusterPolicy
    listKind: ClusterPolicyList
    plural: clusterpolicies
    shortNames:
      - cpol
    singular: clusterpolicy
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.admission
          name: ADMISSION
          type: boolean
        - jsonPath: .spec.background
          name: BACKGROUND
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: VALIDATE ACTION
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.failurePolicy
          name: FAILURE POLICY
          priority: 1
          type: string
        - jsonPath: .status.rulecount.validate
          name: VALIDATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: MUTATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: GENERATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: VERIFY IMAGES
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: ClusterPolicy declares validation, mutation, and generation behaviors for matching resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                admission:
                  default: true
                  description: Admission controls if rules are applied during admission. Optional. Default value is "true".
                  type: boolean
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. This field should not be accessed directly, instead `GetFailurePolicy()` should be used. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      celPreconditions:
                        description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                        items:
                          description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                          properties:
                            expression:
                              description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                              type: string
                            name:
                              description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                              type: string
                          required:
                            - expression
                            - name
                          type: object
                        type: array
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                          uid:
                            description: UID specifies the resource uid.
                            type: string
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                                uid:
                                  description: UID specifies the resource uid.
                                  type: string
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                        x-kubernetes-preserve-unknown-fields: true
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          cel:
                            description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                            properties:
                              auditAnnotations:
                                description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                items:
                                  description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                  properties:
                                    key:
                                      description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                      type: string
                                    valueExpression:
                                      description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                      type: string
                                  required:
                                    - key
                                    - valueExpression
                                  type: object
                                type: array
                              expressions:
                                description: Expressions is a list of CELExpression types.
                                items:
                                  description: Validation specifies the CEL expression which is used to apply the validation.
                                  properties:
                                    expression:
                                      description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                      type: string
                                    message:
                                      description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                      type: string
                                    messageExpression:
                                      description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                      type: string
                                    reason:
                                      description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                      type: string
                                  required:
                                    - expression
                                  type: object
                                type: array
                              paramKind:
                                description: ParamKind is a tuple of Group Kind and Version.
                                properties:
                                  apiVersion:
                                    description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                    type: string
                                  kind:
                                    description: Kind is the API kind the resources belong to. Required.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              paramRef:
                                description: ParamRef references a parameter resource.
                                properties:
                                  name:
                                    description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    type: string
                                  namespace:
                                    description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                    type: string
                                  parameterNotFoundAction:
                                    description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                    type: string
                                  selector:
                                    description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              variables:
                                description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                items:
                                  description: Variable is the definition of a variable that is used for composition.
                                  properties:
                                    expression:
                                      description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                      type: string
                                    name:
                                      description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                      type: string
                                  required:
                                    - expression
                                    - name
                                  type: object
                                type: array
                            type: object
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates.
                                            properties:
                                              cert:
                                                description: Cert is an optional PEM-encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                type: string
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address.
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys.
                                            properties:
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            additionalExtensions:
                              additionalProperties:
                                type: string
                              description: Deprecated.
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Deprecated. Use annotations per Attestor instead.
                              type: object
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities).
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: Deprecated in favour of 'Type', to be removed soon
                                    type: string
                                  type:
                                    description: Type defines the type of attestation contained within the Statement.
                                    type: string
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates.
                                          properties:
                                            cert:
                                              description: Cert is an optional PEM-encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertChain is an optional PEM encoded set of certificates used to verify.
                                              type: string
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address.
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys.
                                          properties:
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            image:
                              description: Deprecated. Use ImageReferences instead.
                              type: string
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            imageRegistryCredentials:
                              description: ImageRegistryCredentials provides credentials that will be used for authentication with registry.
                              properties:
                                allowInsecureRegistry:
                                  description: AllowInsecureRegistry allows insecure access to a registry.
                                  type: boolean
                                providers:
                                  description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                  items:
                                    description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                    enum:
                                      - default
                                      - amazon
                                      - azure
                                      - google
                                      - github
                                    type: string
                                  type: array
                                secrets:
                                  description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            issuer:
                              description: Deprecated. Use KeylessAttestor instead.
                              type: string
                            key:
                              description: Deprecated. Use StaticKeyAttestor instead.
                              type: string
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            roots:
                              description: Deprecated. Use KeylessAttestor instead.
                              type: string
                            subject:
                              description: Deprecated. Use KeylessAttestor instead.
                              type: string
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            useCache:
                              default: true
                              description: UseCache enables caching of image verify responses for this rule.
                              type: boolean
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                useServerSideApply:
                  description: UseServerSideApply controls whether to use server-side apply for generate rules If is set to "true" create & update for generate rules will use apply instead of create/update. Defaults to "false" if not specified.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                autogen:
                  description: AutogenStatus contains autogen status information.
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          celPreconditions:
                            description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                            items:
                              description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                              properties:
                                expression:
                                  description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                                  type: string
                                name:
                                  description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                                  type: string
                              required:
                                - expression
                                - name
                              type: object
                            type: array
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    imageRegistryCredentials:
                                      description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                      properties:
                                        allowInsecureRegistry:
                                          description: AllowInsecureRegistry allows insecure access to a registry.
                                          type: boolean
                                        providers:
                                          description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                          items:
                                            description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                            enum:
                                              - default
                                              - amazon
                                              - azure
                                              - google
                                              - github
                                            type: string
                                          type: array
                                        secrets:
                                          description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                              uid:
                                description: UID specifies the resource uid.
                                type: string
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                    uid:
                                      description: UID specifies the resource uid.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              cel:
                                description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                                properties:
                                  auditAnnotations:
                                    description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                    items:
                                      description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                      properties:
                                        key:
                                          description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                          type: string
                                        valueExpression:
                                          description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                          type: string
                                      required:
                                        - key
                                        - valueExpression
                                      type: object
                                    type: array
                                  expressions:
                                    description: Expressions is a list of CELExpression types.
                                    items:
                                      description: Validation specifies the CEL expression which is used to apply the validation.
                                      properties:
                                        expression:
                                          description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                          type: string
                                        message:
                                          description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                          type: string
                                        messageExpression:
                                          description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                          type: string
                                        reason:
                                          description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                          type: string
                                      required:
                                        - expression
                                      type: object
                                    type: array
                                  paramKind:
                                    description: ParamKind is a tuple of Group Kind and Version.
                                    properties:
                                      apiVersion:
                                        description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                        type: string
                                      kind:
                                        description: Kind is the API kind the resources belong to. Required.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  paramRef:
                                    description: ParamRef references a parameter resource.
                                    properties:
                                      name:
                                        description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        type: string
                                      namespace:
                                        description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                        type: string
                                      parameterNotFoundAction:
                                        description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                        type: string
                                      selector:
                                        description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  variables:
                                    description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                    items:
                                      description: Variable is the definition of a variable that is used for composition.
                                      properties:
                                        expression:
                                          description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                          type: string
                                        name:
                                          description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                          type: string
                                      required:
                                        - expression
                                        - name
                                      type: object
                                    type: array
                                type: object
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities).
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates.
                                                    properties:
                                                      cert:
                                                        description: Cert is an optional PEM-encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                        type: string
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address.
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys.
                                                    properties:
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: Deprecated in favour of 'Type', to be removed soon
                                        type: string
                                      type:
                                        description: Type defines the type of attestation contained within the Statement.
                                        type: string
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates.
                                              properties:
                                                cert:
                                                  description: Cert is an optional PEM-encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                  type: string
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address.
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys.
                                              properties:
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: Deprecated. Use ImageReferences instead.
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry.
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                issuer:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                useCache:
                                  default: true
                                  description: UseCache enables caching of image verify responses for this rule.
                                  type: boolean
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCountStatus contains four variables which describes counts for validate, generate, mutate and verify images rules
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
                validatingadmissionpolicy:
                  description: ValidatingAdmissionPolicy contains status information
                  properties:
                    generated:
                      description: Generated indicates whether a validating admission policy is generated from the policy or not
                      type: boolean
                    message:
                      description: Message is a human readable message indicating details about the generation of validating admission policy It is an empty string when validating admission policy is successfully generated.
                      type: string
                  required:
                    - generated
                    - message
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.admission
          name: ADMISSION
          type: boolean
        - jsonPath: .spec.background
          name: BACKGROUND
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: VALIDATE ACTION
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.failurePolicy
          name: FAILURE POLICY
          priority: 1
          type: string
        - jsonPath: .status.rulecount.validate
          name: VALIDATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: MUTATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: GENERATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: VERIFY IMAGES
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: ClusterPolicy declares validation, mutation, and generation behaviors for matching resources.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy behaviors.
              properties:
                admission:
                  default: true
                  description: Admission controls if rules are applied during admission. Optional. Default value is "true".
                  type: boolean
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      celPreconditions:
                        description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                        items:
                          description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                          properties:
                            expression:
                              description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                              type: string
                            name:
                              description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                              type: string
                          required:
                            - expression
                            - name
                          type: object
                        type: array
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                          uid:
                            description: UID specifies the resource uid.
                            type: string
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                                uid:
                                  description: UID specifies the resource uid.
                                  type: string
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                        properties:
                          all:
                            description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          any:
                            description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          cel:
                            description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                            properties:
                              auditAnnotations:
                                description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                items:
                                  description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                  properties:
                                    key:
                                      description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                      type: string
                                    valueExpression:
                                      description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                      type: string
                                  required:
                                    - key
                                    - valueExpression
                                  type: object
                                type: array
                              expressions:
                                description: Expressions is a list of CELExpression types.
                                items:
                                  description: Validation specifies the CEL expression which is used to apply the validation.
                                  properties:
                                    expression:
                                      description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                      type: string
                                    message:
                                      description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                      type: string
                                    messageExpression:
                                      description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                      type: string
                                    reason:
                                      description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                      type: string
                                  required:
                                    - expression
                                  type: object
                                type: array
                              paramKind:
                                description: ParamKind is a tuple of Group Kind and Version.
                                properties:
                                  apiVersion:
                                    description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                    type: string
                                  kind:
                                    description: Kind is the API kind the resources belong to. Required.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              paramRef:
                                description: ParamRef references a parameter resource.
                                properties:
                                  name:
                                    description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    type: string
                                  namespace:
                                    description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                    type: string
                                  parameterNotFoundAction:
                                    description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                    type: string
                                  selector:
                                    description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              variables:
                                description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                items:
                                  description: Variable is the definition of a variable that is used for composition.
                                  properties:
                                    expression:
                                      description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                      type: string
                                    name:
                                      description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                      type: string
                                  required:
                                    - expression
                                    - name
                                  type: object
                                type: array
                            type: object
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                properties:
                                  all:
                                    description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                  any:
                                    description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                type: object
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates.
                                            properties:
                                              cert:
                                                description: Cert is an optional PEM-encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                type: string
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address.
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys.
                                            properties:
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities).
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: Deprecated in favour of 'Type', to be removed soon
                                    type: string
                                  type:
                                    description: Type defines the type of attestation contained within the Statement.
                                    type: string
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates.
                                          properties:
                                            cert:
                                              description: Cert is an optional PEM-encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertChain is an optional PEM encoded set of certificates used to verify.
                                              type: string
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address.
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys.
                                          properties:
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            imageRegistryCredentials:
                              description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                              properties:
                                allowInsecureRegistry:
                                  description: AllowInsecureRegistry allows insecure access to a registry.
                                  type: boolean
                                providers:
                                  description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                  items:
                                    description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                    enum:
                                      - default
                                      - amazon
                                      - azure
                                      - google
                                      - github
                                    type: string
                                  type: array
                                secrets:
                                  description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            useCache:
                              default: true
                              description: UseCache enables caching of image verify responses for this rule
                              type: boolean
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                useServerSideApply:
                  description: UseServerSideApply controls whether to use server-side apply for generate rules If is set to "true" create & update for generate rules will use apply instead of create/update. Defaults to "false" if not specified.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                autogen:
                  description: AutogenStatus contains autogen status information.
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          celPreconditions:
                            description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                            items:
                              description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                              properties:
                                expression:
                                  description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                                  type: string
                                name:
                                  description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                                  type: string
                              required:
                                - expression
                                - name
                              type: object
                            type: array
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    imageRegistryCredentials:
                                      description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                      properties:
                                        allowInsecureRegistry:
                                          description: AllowInsecureRegistry allows insecure access to a registry.
                                          type: boolean
                                        providers:
                                          description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                          items:
                                            description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                            enum:
                                              - default
                                              - amazon
                                              - azure
                                              - google
                                              - github
                                            type: string
                                          type: array
                                        secrets:
                                          description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                              uid:
                                description: UID specifies the resource uid.
                                type: string
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                    uid:
                                      description: UID specifies the resource uid.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              cel:
                                description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                                properties:
                                  auditAnnotations:
                                    description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                    items:
                                      description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                      properties:
                                        key:
                                          description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                          type: string
                                        valueExpression:
                                          description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                          type: string
                                      required:
                                        - key
                                        - valueExpression
                                      type: object
                                    type: array
                                  expressions:
                                    description: Expressions is a list of CELExpression types.
                                    items:
                                      description: Validation specifies the CEL expression which is used to apply the validation.
                                      properties:
                                        expression:
                                          description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                          type: string
                                        message:
                                          description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                          type: string
                                        messageExpression:
                                          description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                          type: string
                                        reason:
                                          description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                          type: string
                                      required:
                                        - expression
                                      type: object
                                    type: array
                                  paramKind:
                                    description: ParamKind is a tuple of Group Kind and Version.
                                    properties:
                                      apiVersion:
                                        description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                        type: string
                                      kind:
                                        description: Kind is the API kind the resources belong to. Required.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  paramRef:
                                    description: ParamRef references a parameter resource.
                                    properties:
                                      name:
                                        description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        type: string
                                      namespace:
                                        description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                        type: string
                                      parameterNotFoundAction:
                                        description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                        type: string
                                      selector:
                                        description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  variables:
                                    description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                    items:
                                      description: Variable is the definition of a variable that is used for composition.
                                      properties:
                                        expression:
                                          description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                          type: string
                                        name:
                                          description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                          type: string
                                      required:
                                        - expression
                                        - name
                                      type: object
                                    type: array
                                type: object
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities).
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates.
                                                    properties:
                                                      cert:
                                                        description: Cert is an optional PEM-encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                        type: string
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address.
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys.
                                                    properties:
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: Deprecated in favour of 'Type', to be removed soon
                                        type: string
                                      type:
                                        description: Type defines the type of attestation contained within the Statement.
                                        type: string
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates.
                                              properties:
                                                cert:
                                                  description: Cert is an optional PEM-encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                  type: string
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address.
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys.
                                              properties:
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: Deprecated. Use ImageReferences instead.
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry.
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                issuer:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                useCache:
                                  default: true
                                  description: UseCache enables caching of image verify responses for this rule.
                                  type: boolean
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCountStatus contains four variables which describes counts for validate, generate, mutate and verify images rules
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
                validatingadmissionpolicy:
                  description: ValidatingAdmissionPolicy contains status information
                  properties:
                    generated:
                      description: Generated indicates whether a validating admission policy is generated from the policy or not
                      type: boolean
                    message:
                      description: Message is a human readable message indicating details about the generation of validating admission policy It is an empty string when validating admission policy is successfully generated.
                      type: string
                  required:
                    - generated
                    - message
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: ClusterPolicy
    listKind: ClusterPolicyList
    plural: clusterpolicies
    shortNames:
      - cpol
    singular: clusterpolicy
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: clusterpolicyreports.wgpolicyk8s.io
  resourceVersion: "528"
  uid: b3aaf7b7-69ec-461f-8ce2-d682a116f6e1
spec:
  conversion:
    strategy: None
  group: wgpolicyk8s.io
  names:
    kind: ClusterPolicyReport
    listKind: ClusterPolicyReportList
    plural: clusterpolicyreports
    shortNames:
      - cpolr
    singular: clusterpolicyreport
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .scope.kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .scope.name
          name: Name
          priority: 1
          type: string
        - jsonPath: .summary.pass
          name: Pass
          type: integer
        - jsonPath: .summary.fail
          name: Fail
          type: integer
        - jsonPath: .summary.warn
          name: Warn
          type: integer
        - jsonPath: .summary.error
          name: Error
          type: integer
        - jsonPath: .summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: ClusterPolicyReport is the Schema for the clusterpolicyreports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            results:
              description: PolicyReportResult provides result details
              items:
                description: PolicyReportResult provides the result for an individual policy
                properties:
                  category:
                    description: Category indicates policy category
                    type: string
                  message:
                    description: Description is a short user friendly message for the policy rule
                    type: string
                  policy:
                    description: Policy is the name or identifier of the policy
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: Properties provides additional information for the policy rule
                    type: object
                  resourceSelector:
                    description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  resources:
                    description: Subjects is an optional reference to the checked Kubernetes resources
                    items:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  result:
                    description: Result indicates the outcome of the policy rule execution
                    enum:
                      - pass
                      - fail
                      - warn
                      - error
                      - skip
                    type: string
                  rule:
                    description: Rule is the name or identifier of the rule within the policy
                    type: string
                  scored:
                    description: Scored indicates if this result is scored
                    type: boolean
                  severity:
                    description: Severity indicates policy check result criticality
                    enum:
                      - critical
                      - high
                      - low
                      - medium
                      - info
                    type: string
                  source:
                    description: Source is an identifier for the policy engine that manages this report
                    type: string
                  timestamp:
                    description: Timestamp indicates the time the result was found
                    properties:
                      nanos:
                        description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                        format: int32
                        type: integer
                      seconds:
                        description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                        format: int64
                        type: integer
                    required:
                      - nanos
                      - seconds
                    type: object
                required:
                  - policy
                type: object
              type: array
            scope:
              description: Scope is an optional reference to the report scope (e.g. a Deployment, Namespace, or Node)
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            scopeSelector:
              description: ScopeSelector is an optional selector for multiple scopes (e.g. Pods). Either one of, or none of, but not both of, Scope or ScopeSelector should be specified.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                      - key
                      - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                  type: object
              type: object
              x-kubernetes-map-type: atomic
            summary:
              description: PolicyReportSummary provides a summary of results
              properties:
                error:
                  description: Error provides the count of policies that could not be evaluated
                  type: integer
                fail:
                  description: Fail provides the count of policies whose requirements were not met
                  type: integer
                pass:
                  description: Pass provides the count of policies whose requirements were met
                  type: integer
                skip:
                  description: Skip indicates the count of policies that were not selected for evaluation
                  type: integer
                warn:
                  description: Warn provides the count of non-scored policies whose requirements were not met
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    kind: ClusterPolicyReport
    listKind: ClusterPolicyReportList
    plural: clusterpolicyreports
    shortNames:
      - cpolr
    singular: clusterpolicyreport
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: policies.kyverno.io
  resourceVersion: "519"
  uid: 327e00f1-b1f6-4a71-9363-a1cc641cc85a
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: Policy
    listKind: PolicyList
    plural: policies
    shortNames:
      - pol
    singular: policy
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.admission
          name: ADMISSION
          type: boolean
        - jsonPath: .spec.background
          name: BACKGROUND
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: VALIDATE ACTION
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.failurePolicy
          name: FAILURE POLICY
          priority: 1
          type: string
        - jsonPath: .status.rulecount.validate
          name: VALIDATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: MUTATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: GENERATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: VERIFY IMAGES
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v1
      schema:
        openAPIV3Schema:
          description: 'Policy declares validation, mutation, and generation behaviors for matching resources. See: https://kyverno.io/docs/writing-policies/ for more information.'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines policy behaviors and contains one or more rules.
              properties:
                admission:
                  default: true
                  description: Admission controls if rules are applied during admission. Optional. Default value is "true".
                  type: boolean
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. This field should not be accessed directly, instead `GetFailurePolicy()` should be used. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      celPreconditions:
                        description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                        items:
                          description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                          properties:
                            expression:
                              description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                              type: string
                            name:
                              description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                              type: string
                          required:
                            - expression
                            - name
                          type: object
                        type: array
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                          uid:
                            description: UID specifies the resource uid.
                            type: string
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                                uid:
                                  description: UID specifies the resource uid.
                                  type: string
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                        x-kubernetes-preserve-unknown-fields: true
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          cel:
                            description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                            properties:
                              auditAnnotations:
                                description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                items:
                                  description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                  properties:
                                    key:
                                      description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                      type: string
                                    valueExpression:
                                      description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                      type: string
                                  required:
                                    - key
                                    - valueExpression
                                  type: object
                                type: array
                              expressions:
                                description: Expressions is a list of CELExpression types.
                                items:
                                  description: Validation specifies the CEL expression which is used to apply the validation.
                                  properties:
                                    expression:
                                      description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                      type: string
                                    message:
                                      description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                      type: string
                                    messageExpression:
                                      description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                      type: string
                                    reason:
                                      description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                      type: string
                                  required:
                                    - expression
                                  type: object
                                type: array
                              paramKind:
                                description: ParamKind is a tuple of Group Kind and Version.
                                properties:
                                  apiVersion:
                                    description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                    type: string
                                  kind:
                                    description: Kind is the API kind the resources belong to. Required.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              paramRef:
                                description: ParamRef references a parameter resource.
                                properties:
                                  name:
                                    description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    type: string
                                  namespace:
                                    description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                    type: string
                                  parameterNotFoundAction:
                                    description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                    type: string
                                  selector:
                                    description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              variables:
                                description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                items:
                                  description: Variable is the definition of a variable that is used for composition.
                                  properties:
                                    expression:
                                      description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                      type: string
                                    name:
                                      description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                      type: string
                                  required:
                                    - expression
                                    - name
                                  type: object
                                type: array
                            type: object
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                x-kubernetes-preserve-unknown-fields: true
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates.
                                            properties:
                                              cert:
                                                description: Cert is an optional PEM-encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                type: string
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address.
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys.
                                            properties:
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            additionalExtensions:
                              additionalProperties:
                                type: string
                              description: Deprecated.
                              type: object
                            annotations:
                              additionalProperties:
                                type: string
                              description: Deprecated. Use annotations per Attestor instead.
                              type: object
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities).
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: Deprecated in favour of 'Type', to be removed soon
                                    type: string
                                  type:
                                    description: Type defines the type of attestation contained within the Statement.
                                    type: string
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates.
                                          properties:
                                            cert:
                                              description: Cert is an optional PEM-encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertChain is an optional PEM encoded set of certificates used to verify.
                                              type: string
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address.
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys.
                                          properties:
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            image:
                              description: Deprecated. Use ImageReferences instead.
                              type: string
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            imageRegistryCredentials:
                              description: ImageRegistryCredentials provides credentials that will be used for authentication with registry.
                              properties:
                                allowInsecureRegistry:
                                  description: AllowInsecureRegistry allows insecure access to a registry.
                                  type: boolean
                                providers:
                                  description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                  items:
                                    description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                    enum:
                                      - default
                                      - amazon
                                      - azure
                                      - google
                                      - github
                                    type: string
                                  type: array
                                secrets:
                                  description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            issuer:
                              description: Deprecated. Use KeylessAttestor instead.
                              type: string
                            key:
                              description: Deprecated. Use StaticKeyAttestor instead.
                              type: string
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            roots:
                              description: Deprecated. Use KeylessAttestor instead.
                              type: string
                            subject:
                              description: Deprecated. Use KeylessAttestor instead.
                              type: string
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            useCache:
                              default: true
                              description: UseCache enables caching of image verify responses for this rule.
                              type: boolean
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                useServerSideApply:
                  description: UseServerSideApply controls whether to use server-side apply for generate rules If is set to "true" create & update for generate rules will use apply instead of create/update. Defaults to "false" if not specified.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Deprecated. Policy metrics are available via the metrics endpoint
              properties:
                autogen:
                  description: AutogenStatus contains autogen status information.
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          celPreconditions:
                            description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                            items:
                              description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                              properties:
                                expression:
                                  description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                                  type: string
                                name:
                                  description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                                  type: string
                              required:
                                - expression
                                - name
                              type: object
                            type: array
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    imageRegistryCredentials:
                                      description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                      properties:
                                        allowInsecureRegistry:
                                          description: AllowInsecureRegistry allows insecure access to a registry.
                                          type: boolean
                                        providers:
                                          description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                          items:
                                            description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                            enum:
                                              - default
                                              - amazon
                                              - azure
                                              - google
                                              - github
                                            type: string
                                          type: array
                                        secrets:
                                          description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                              uid:
                                description: UID specifies the resource uid.
                                type: string
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                    uid:
                                      description: UID specifies the resource uid.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              cel:
                                description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                                properties:
                                  auditAnnotations:
                                    description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                    items:
                                      description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                      properties:
                                        key:
                                          description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                          type: string
                                        valueExpression:
                                          description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                          type: string
                                      required:
                                        - key
                                        - valueExpression
                                      type: object
                                    type: array
                                  expressions:
                                    description: Expressions is a list of CELExpression types.
                                    items:
                                      description: Validation specifies the CEL expression which is used to apply the validation.
                                      properties:
                                        expression:
                                          description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                          type: string
                                        message:
                                          description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                          type: string
                                        messageExpression:
                                          description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                          type: string
                                        reason:
                                          description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                          type: string
                                      required:
                                        - expression
                                      type: object
                                    type: array
                                  paramKind:
                                    description: ParamKind is a tuple of Group Kind and Version.
                                    properties:
                                      apiVersion:
                                        description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                        type: string
                                      kind:
                                        description: Kind is the API kind the resources belong to. Required.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  paramRef:
                                    description: ParamRef references a parameter resource.
                                    properties:
                                      name:
                                        description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        type: string
                                      namespace:
                                        description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                        type: string
                                      parameterNotFoundAction:
                                        description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                        type: string
                                      selector:
                                        description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  variables:
                                    description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                    items:
                                      description: Variable is the definition of a variable that is used for composition.
                                      properties:
                                        expression:
                                          description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                          type: string
                                        name:
                                          description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                          type: string
                                      required:
                                        - expression
                                        - name
                                      type: object
                                    type: array
                                type: object
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities).
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates.
                                                    properties:
                                                      cert:
                                                        description: Cert is an optional PEM-encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                        type: string
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address.
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys.
                                                    properties:
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: Deprecated in favour of 'Type', to be removed soon
                                        type: string
                                      type:
                                        description: Type defines the type of attestation contained within the Statement.
                                        type: string
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates.
                                              properties:
                                                cert:
                                                  description: Cert is an optional PEM-encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                  type: string
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address.
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys.
                                              properties:
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: Deprecated. Use ImageReferences instead.
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry.
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                issuer:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                useCache:
                                  default: true
                                  description: UseCache enables caching of image verify responses for this rule.
                                  type: boolean
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCountStatus contains four variables which describes counts for validate, generate, mutate and verify images rules
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
                validatingadmissionpolicy:
                  description: ValidatingAdmissionPolicy contains status information
                  properties:
                    generated:
                      description: Generated indicates whether a validating admission policy is generated from the policy or not
                      type: boolean
                    message:
                      description: Message is a human readable message indicating details about the generation of validating admission policy It is an empty string when validating admission policy is successfully generated.
                      type: string
                  required:
                    - generated
                    - message
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
    - additionalPrinterColumns:
        - jsonPath: .spec.admission
          name: ADMISSION
          type: boolean
        - jsonPath: .spec.background
          name: BACKGROUND
          type: boolean
        - jsonPath: .spec.validationFailureAction
          name: VALIDATE ACTION
          type: string
        - jsonPath: .status.conditions[?(@.type == "Ready")].status
          name: READY
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - jsonPath: .spec.failurePolicy
          name: FAILURE POLICY
          priority: 1
          type: string
        - jsonPath: .status.rulecount.validate
          name: VALIDATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.mutate
          name: MUTATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.generate
          name: GENERATE
          priority: 1
          type: integer
        - jsonPath: .status.rulecount.verifyimages
          name: VERIFY IMAGES
          priority: 1
          type: integer
        - jsonPath: .status.conditions[?(@.type == "Ready")].message
          name: MESSAGE
          type: string
      name: v2beta1
      schema:
        openAPIV3Schema:
          description: 'Policy declares validation, mutation, and generation behaviors for matching resources. See: https://kyverno.io/docs/writing-policies/ for more information.'
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec defines policy behaviors and contains one or more rules.
              properties:
                admission:
                  default: true
                  description: Admission controls if rules are applied during admission. Optional. Default value is "true".
                  type: boolean
                applyRules:
                  description: ApplyRules controls how rules in a policy are applied. Rule are processed in the order of declaration. When set to `One` processing stops after a rule has been applied i.e. the rule matches and results in a pass, fail, or error. When set to `All` all rules in the policy are processed. The default is `All`.
                  enum:
                    - All
                    - One
                  type: string
                background:
                  default: true
                  description: Background controls if rules are applied to existing resources during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                failurePolicy:
                  description: FailurePolicy defines how unexpected policy errors and webhook response timeout errors are handled. Rules within the same policy share the same failure behavior. Allowed values are Ignore or Fail. Defaults to Fail.
                  enum:
                    - Ignore
                    - Fail
                  type: string
                generateExisting:
                  description: GenerateExisting controls whether to trigger generate rule in existing resources If is set to "true" generate rule will be triggered and applied to existing matched resources. Defaults to "false" if not specified.
                  type: boolean
                generateExistingOnPolicyUpdate:
                  description: Deprecated, use generateExisting instead
                  type: boolean
                mutateExistingOnPolicyUpdate:
                  description: MutateExistingOnPolicyUpdate controls if a mutateExisting policy is applied on policy events. Default value is "false".
                  type: boolean
                rules:
                  description: Rules is a list of Rule instances. A Policy contains multiple rules and each rule can validate, mutate, or generate resources.
                  items:
                    description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                    properties:
                      celPreconditions:
                        description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                        items:
                          description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                          properties:
                            expression:
                              description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                              type: string
                            name:
                              description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                              type: string
                          required:
                            - expression
                            - name
                          type: object
                        type: array
                      context:
                        description: Context defines variables and data sources that can be used during rule execution.
                        items:
                          description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                          properties:
                            apiCall:
                              description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                              properties:
                                data:
                                  description: Data specifies the POST data sent to the server.
                                  items:
                                    description: RequestData contains the HTTP POST data
                                    properties:
                                      key:
                                        description: Key is a unique identifier for the data value
                                        type: string
                                      value:
                                        description: Value is the data value
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                      - key
                                      - value
                                    type: object
                                  type: array
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                  type: string
                                method:
                                  default: GET
                                  description: Method is the HTTP request type (GET or POST).
                                  enum:
                                    - GET
                                    - POST
                                  type: string
                                service:
                                  description: Service is an API call to a JSON web service
                                  properties:
                                    caBundle:
                                      description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                      type: string
                                    url:
                                      description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                      type: string
                                  required:
                                    - url
                                  type: object
                                urlPath:
                                  description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                  type: string
                              type: object
                            configMap:
                              description: ConfigMap is the ConfigMap reference.
                              properties:
                                name:
                                  description: Name is the ConfigMap name.
                                  type: string
                                namespace:
                                  description: Namespace is the ConfigMap namespace.
                                  type: string
                              required:
                                - name
                              type: object
                            imageRegistry:
                              description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                              properties:
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                jmesPath:
                                  description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                  type: string
                                reference:
                                  description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                  type: string
                              required:
                                - reference
                              type: object
                            name:
                              description: Name is the variable name.
                              type: string
                            variable:
                              description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                              properties:
                                default:
                                  description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                  x-kubernetes-preserve-unknown-fields: true
                                jmesPath:
                                  description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                  type: string
                                value:
                                  description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                        type: array
                      exclude:
                        description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      generate:
                        description: Generation is used to create new resources.
                        properties:
                          apiVersion:
                            description: APIVersion specifies resource apiVersion.
                            type: string
                          clone:
                            description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                            properties:
                              name:
                                description: Name specifies name of the resource.
                                type: string
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                            type: object
                          cloneList:
                            description: CloneList specifies the list of source resource used to populate each generated resource.
                            properties:
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              namespace:
                                description: Namespace specifies source resource namespace.
                                type: string
                              selector:
                                description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          data:
                            description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                            x-kubernetes-preserve-unknown-fields: true
                          kind:
                            description: Kind specifies resource kind.
                            type: string
                          name:
                            description: Name specifies the resource name.
                            type: string
                          namespace:
                            description: Namespace specifies resource namespace.
                            type: string
                          synchronize:
                            description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                            type: boolean
                          uid:
                            description: UID specifies the resource uid.
                            type: string
                        type: object
                      imageExtractors:
                        additionalProperties:
                          items:
                            properties:
                              jmesPath:
                                description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                type: string
                              key:
                                description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                type: string
                              name:
                                description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                type: string
                              path:
                                description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                type: string
                              value:
                                description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                type: string
                            required:
                              - path
                            type: object
                          type: array
                        description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                        type: object
                      match:
                        description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                        properties:
                          all:
                            description: All allows specifying resources which will be ANDed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                          any:
                            description: Any allows specifying resources which will be ORed
                            items:
                              description: ResourceFilter allow users to "AND" or "OR" between resources
                              properties:
                                clusterRoles:
                                  description: ClusterRoles is the list of cluster-wide role names for the user.
                                  items:
                                    type: string
                                  type: array
                                resources:
                                  description: ResourceDescription contains information about the resource being created or modified.
                                  properties:
                                    annotations:
                                      additionalProperties:
                                        type: string
                                      description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                      type: object
                                    kinds:
                                      description: Kinds is a list of resource kinds.
                                      items:
                                        type: string
                                      type: array
                                    name:
                                      description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                      type: string
                                    names:
                                      description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    namespaceSelector:
                                      description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                    namespaces:
                                      description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                      items:
                                        type: string
                                      type: array
                                    operations:
                                      description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                      items:
                                        description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                        enum:
                                          - CREATE
                                          - CONNECT
                                          - UPDATE
                                          - DELETE
                                        type: string
                                      type: array
                                    selector:
                                      description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                          items:
                                            description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                              - key
                                              - operator
                                            type: object
                                          type: array
                                        matchLabels:
                                          additionalProperties:
                                            type: string
                                          description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                          type: object
                                      type: object
                                      x-kubernetes-map-type: atomic
                                  type: object
                                roles:
                                  description: Roles is the list of namespaced role names for the user.
                                  items:
                                    type: string
                                  type: array
                                subjects:
                                  description: Subjects is the list of subject names like users, user groups, and service accounts.
                                  items:
                                    description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                    properties:
                                      apiGroup:
                                        description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                        type: string
                                      kind:
                                        description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                        type: string
                                      name:
                                        description: Name of the object being referenced.
                                        type: string
                                      namespace:
                                        description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                        type: string
                                    required:
                                      - kind
                                      - name
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  type: array
                              type: object
                            type: array
                        type: object
                      mutate:
                        description: Mutation is used to modify matching resources.
                        properties:
                          foreach:
                            description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                order:
                                  description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                  enum:
                                    - Ascending
                                    - Descending
                                  type: string
                                patchStrategicMerge:
                                  description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                  x-kubernetes-preserve-unknown-fields: true
                                patchesJson6902:
                                  description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                  type: string
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          patchStrategicMerge:
                            description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                            x-kubernetes-preserve-unknown-fields: true
                          patchesJson6902:
                            description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                            type: string
                          targets:
                            description: Targets defines the target resources to be mutated.
                            items:
                              description: TargetResourceSpec defines targets for mutating existing resources.
                              properties:
                                apiVersion:
                                  description: APIVersion specifies resource apiVersion.
                                  type: string
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                kind:
                                  description: Kind specifies resource kind.
                                  type: string
                                name:
                                  description: Name specifies the resource name.
                                  type: string
                                namespace:
                                  description: Namespace specifies resource namespace.
                                  type: string
                                preconditions:
                                  description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  x-kubernetes-preserve-unknown-fields: true
                                uid:
                                  description: UID specifies the resource uid.
                                  type: string
                              type: object
                            type: array
                        type: object
                      name:
                        description: Name is a label to identify the rule, It must be unique within the policy.
                        maxLength: 63
                        type: string
                      preconditions:
                        description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                        properties:
                          all:
                            description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          any:
                            description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                            items:
                              properties:
                                key:
                                  description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                  x-kubernetes-preserve-unknown-fields: true
                                message:
                                  description: Message is an optional display message
                                  type: string
                                operator:
                                  description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                  enum:
                                    - Equals
                                    - NotEquals
                                    - AnyIn
                                    - AllIn
                                    - AnyNotIn
                                    - AllNotIn
                                    - GreaterThanOrEquals
                                    - GreaterThan
                                    - LessThanOrEquals
                                    - LessThan
                                    - DurationGreaterThanOrEquals
                                    - DurationGreaterThan
                                    - DurationLessThanOrEquals
                                    - DurationLessThan
                                  type: string
                                value:
                                  description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                        type: object
                      validate:
                        description: Validation is used to validate matching resources.
                        properties:
                          anyPattern:
                            description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                            x-kubernetes-preserve-unknown-fields: true
                          cel:
                            description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                            properties:
                              auditAnnotations:
                                description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                items:
                                  description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                  properties:
                                    key:
                                      description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                      type: string
                                    valueExpression:
                                      description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                      type: string
                                  required:
                                    - key
                                    - valueExpression
                                  type: object
                                type: array
                              expressions:
                                description: Expressions is a list of CELExpression types.
                                items:
                                  description: Validation specifies the CEL expression which is used to apply the validation.
                                  properties:
                                    expression:
                                      description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                      type: string
                                    message:
                                      description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                      type: string
                                    messageExpression:
                                      description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                      type: string
                                    reason:
                                      description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                      type: string
                                  required:
                                    - expression
                                  type: object
                                type: array
                              paramKind:
                                description: ParamKind is a tuple of Group Kind and Version.
                                properties:
                                  apiVersion:
                                    description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                    type: string
                                  kind:
                                    description: Kind is the API kind the resources belong to. Required.
                                    type: string
                                type: object
                                x-kubernetes-map-type: atomic
                              paramRef:
                                description: ParamRef references a parameter resource.
                                properties:
                                  name:
                                    description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    type: string
                                  namespace:
                                    description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                    type: string
                                  parameterNotFoundAction:
                                    description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                    type: string
                                  selector:
                                    description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                                x-kubernetes-map-type: atomic
                              variables:
                                description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                items:
                                  description: Variable is the definition of a variable that is used for composition.
                                  properties:
                                    expression:
                                      description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                      type: string
                                    name:
                                      description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                      type: string
                                  required:
                                    - expression
                                    - name
                                  type: object
                                type: array
                            type: object
                          deny:
                            description: Deny defines conditions used to pass or fail a validation rule.
                            properties:
                              conditions:
                                description: 'Multiple conditions can be declared under an `any` or `all` statement. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                properties:
                                  all:
                                    description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                  any:
                                    description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass.
                                    items:
                                      properties:
                                        key:
                                          description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                          x-kubernetes-preserve-unknown-fields: true
                                        message:
                                          description: Message is an optional display message
                                          type: string
                                        operator:
                                          description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                          enum:
                                            - Equals
                                            - NotEquals
                                            - AnyIn
                                            - AllIn
                                            - AnyNotIn
                                            - AllNotIn
                                            - GreaterThanOrEquals
                                            - GreaterThan
                                            - LessThanOrEquals
                                            - LessThan
                                            - DurationGreaterThanOrEquals
                                            - DurationGreaterThan
                                            - DurationLessThanOrEquals
                                            - DurationLessThan
                                          type: string
                                        value:
                                          description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    type: array
                                type: object
                            type: object
                          foreach:
                            description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                            items:
                              description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                              properties:
                                anyPattern:
                                  description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                  x-kubernetes-preserve-unknown-fields: true
                                context:
                                  description: Context defines variables and data sources that can be used during rule execution.
                                  items:
                                    description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                    properties:
                                      apiCall:
                                        description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                        properties:
                                          data:
                                            description: Data specifies the POST data sent to the server.
                                            items:
                                              description: RequestData contains the HTTP POST data
                                              properties:
                                                key:
                                                  description: Key is a unique identifier for the data value
                                                  type: string
                                                value:
                                                  description: Value is the data value
                                                  x-kubernetes-preserve-unknown-fields: true
                                              required:
                                                - key
                                                - value
                                              type: object
                                            type: array
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                            type: string
                                          method:
                                            default: GET
                                            description: Method is the HTTP request type (GET or POST).
                                            enum:
                                              - GET
                                              - POST
                                            type: string
                                          service:
                                            description: Service is an API call to a JSON web service
                                            properties:
                                              caBundle:
                                                description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                type: string
                                              url:
                                                description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                type: string
                                            required:
                                              - url
                                            type: object
                                          urlPath:
                                            description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                            type: string
                                        type: object
                                      configMap:
                                        description: ConfigMap is the ConfigMap reference.
                                        properties:
                                          name:
                                            description: Name is the ConfigMap name.
                                            type: string
                                          namespace:
                                            description: Namespace is the ConfigMap namespace.
                                            type: string
                                        required:
                                          - name
                                        type: object
                                      imageRegistry:
                                        description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                        properties:
                                          imageRegistryCredentials:
                                            description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                            properties:
                                              allowInsecureRegistry:
                                                description: AllowInsecureRegistry allows insecure access to a registry.
                                                type: boolean
                                              providers:
                                                description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                items:
                                                  description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                  enum:
                                                    - default
                                                    - amazon
                                                    - azure
                                                    - google
                                                    - github
                                                  type: string
                                                type: array
                                              secrets:
                                                description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                items:
                                                  type: string
                                                type: array
                                            type: object
                                          jmesPath:
                                            description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                            type: string
                                          reference:
                                            description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                            type: string
                                        required:
                                          - reference
                                        type: object
                                      name:
                                        description: Name is the variable name.
                                        type: string
                                      variable:
                                        description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                        properties:
                                          default:
                                            description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                            x-kubernetes-preserve-unknown-fields: true
                                          jmesPath:
                                            description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                            type: string
                                          value:
                                            description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                    type: object
                                  type: array
                                deny:
                                  description: Deny defines conditions used to pass or fail a validation rule.
                                  properties:
                                    conditions:
                                      description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                elementScope:
                                  description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                  type: boolean
                                foreach:
                                  description: Foreach declares a nested foreach iterator
                                  x-kubernetes-preserve-unknown-fields: true
                                list:
                                  description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                  type: string
                                pattern:
                                  description: Pattern specifies an overlay-style pattern used to check resources.
                                  x-kubernetes-preserve-unknown-fields: true
                                preconditions:
                                  description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                  properties:
                                    all:
                                      description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                    any:
                                      description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                      items:
                                        description: Condition defines variable-based conditional criteria for rule execution.
                                        properties:
                                          key:
                                            description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                            x-kubernetes-preserve-unknown-fields: true
                                          message:
                                            description: Message is an optional display message
                                            type: string
                                          operator:
                                            description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                            enum:
                                              - Equals
                                              - NotEquals
                                              - In
                                              - AnyIn
                                              - AllIn
                                              - NotIn
                                              - AnyNotIn
                                              - AllNotIn
                                              - GreaterThanOrEquals
                                              - GreaterThan
                                              - LessThanOrEquals
                                              - LessThan
                                              - DurationGreaterThanOrEquals
                                              - DurationGreaterThan
                                              - DurationLessThanOrEquals
                                              - DurationLessThan
                                            type: string
                                          value:
                                            description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                            x-kubernetes-preserve-unknown-fields: true
                                        type: object
                                      type: array
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                            type: array
                          manifests:
                            description: Manifest specifies conditions for manifest verification
                            properties:
                              annotationDomain:
                                description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                type: string
                              attestors:
                                description: Attestors specified the required attestors (i.e. authorities)
                                items:
                                  properties:
                                    count:
                                      description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                      minimum: 1
                                      type: integer
                                    entries:
                                      description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                      items:
                                        properties:
                                          annotations:
                                            additionalProperties:
                                              type: string
                                            description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                            type: object
                                          attestor:
                                            description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                            x-kubernetes-preserve-unknown-fields: true
                                          certificates:
                                            description: Certificates specifies one or more certificates.
                                            properties:
                                              cert:
                                                description: Cert is an optional PEM-encoded public certificate.
                                                type: string
                                              certChain:
                                                description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                type: string
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                            type: object
                                          keyless:
                                            description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                            properties:
                                              additionalExtensions:
                                                additionalProperties:
                                                  type: string
                                                description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                type: object
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              issuer:
                                                description: Issuer is the certificate issuer used for keyless signing.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              roots:
                                                description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                type: string
                                              subject:
                                                description: Subject is the verified identity used for keyless signing, for example the email address.
                                                type: string
                                            type: object
                                          keys:
                                            description: Keys specifies one or more public keys.
                                            properties:
                                              ctlog:
                                                description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                properties:
                                                  ignoreSCT:
                                                    description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                    type: boolean
                                                  pubkey:
                                                    description: PubKey, if set, is used to validate SCTs against a custom source.
                                                    type: string
                                                type: object
                                              kms:
                                                description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                type: string
                                              publicKeys:
                                                description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                type: string
                                              rekor:
                                                description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                properties:
                                                  ignoreTlog:
                                                    description: IgnoreTlog skips transparency log verification.
                                                    type: boolean
                                                  pubkey:
                                                    description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                    type: string
                                                  url:
                                                    description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              secret:
                                                description: Reference to a Secret resource that contains a public key
                                                properties:
                                                  name:
                                                    description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                    type: string
                                                  namespace:
                                                    description: Namespace name where the Secret exists.
                                                    type: string
                                                required:
                                                  - name
                                                  - namespace
                                                type: object
                                              signatureAlgorithm:
                                                default: sha256
                                                description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                type: string
                                            type: object
                                          repository:
                                            description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              dryRun:
                                description: DryRun configuration
                                properties:
                                  enable:
                                    type: boolean
                                  namespace:
                                    type: string
                                type: object
                              ignoreFields:
                                description: Fields which will be ignored while comparing manifests.
                                items:
                                  properties:
                                    fields:
                                      items:
                                        type: string
                                      type: array
                                    objects:
                                      items:
                                        properties:
                                          group:
                                            type: string
                                          kind:
                                            type: string
                                          name:
                                            type: string
                                          namespace:
                                            type: string
                                          version:
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                type: array
                              repository:
                                description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                type: string
                            type: object
                          message:
                            description: Message specifies a custom message to be displayed on failure.
                            type: string
                          pattern:
                            description: Pattern specifies an overlay-style pattern used to check resources.
                            x-kubernetes-preserve-unknown-fields: true
                          podSecurity:
                            description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                            properties:
                              exclude:
                                description: Exclude specifies the Pod Security Standard controls to be excluded.
                                items:
                                  description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                  properties:
                                    controlName:
                                      description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                      enum:
                                        - HostProcess
                                        - Host Namespaces
                                        - Privileged Containers
                                        - Capabilities
                                        - HostPath Volumes
                                        - Host Ports
                                        - AppArmor
                                        - SELinux
                                        - /proc Mount Type
                                        - Seccomp
                                        - Sysctls
                                        - Volume Types
                                        - Privilege Escalation
                                        - Running as Non-root
                                        - Running as Non-root user
                                      type: string
                                    images:
                                      description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                      items:
                                        type: string
                                      type: array
                                  required:
                                    - controlName
                                  type: object
                                type: array
                              level:
                                description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                enum:
                                  - privileged
                                  - baseline
                                  - restricted
                                type: string
                              version:
                                description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                enum:
                                  - v1.19
                                  - v1.20
                                  - v1.21
                                  - v1.22
                                  - v1.23
                                  - v1.24
                                  - v1.25
                                  - v1.26
                                  - latest
                                type: string
                            type: object
                        type: object
                      verifyImages:
                        description: VerifyImages is used to verify image signatures and mutate them to add a digest
                        items:
                          description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                          properties:
                            attestations:
                              description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                              items:
                                description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                properties:
                                  attestors:
                                    description: Attestors specify the required attestors (i.e. authorities).
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  conditions:
                                    description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                    items:
                                      description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  predicateType:
                                    description: Deprecated in favour of 'Type', to be removed soon
                                    type: string
                                  type:
                                    description: Type defines the type of attestation contained within the Statement.
                                    type: string
                                type: object
                              type: array
                            attestors:
                              description: Attestors specified the required attestors (i.e. authorities)
                              items:
                                properties:
                                  count:
                                    description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                    minimum: 1
                                    type: integer
                                  entries:
                                    description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                    items:
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                          type: object
                                        attestor:
                                          description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                          x-kubernetes-preserve-unknown-fields: true
                                        certificates:
                                          description: Certificates specifies one or more certificates.
                                          properties:
                                            cert:
                                              description: Cert is an optional PEM-encoded public certificate.
                                              type: string
                                            certChain:
                                              description: CertChain is an optional PEM encoded set of certificates used to verify.
                                              type: string
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                          type: object
                                        keyless:
                                          description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                          properties:
                                            additionalExtensions:
                                              additionalProperties:
                                                type: string
                                              description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                              type: object
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            issuer:
                                              description: Issuer is the certificate issuer used for keyless signing.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            roots:
                                              description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                              type: string
                                            subject:
                                              description: Subject is the verified identity used for keyless signing, for example the email address.
                                              type: string
                                          type: object
                                        keys:
                                          description: Keys specifies one or more public keys.
                                          properties:
                                            ctlog:
                                              description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                              properties:
                                                ignoreSCT:
                                                  description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                  type: boolean
                                                pubkey:
                                                  description: PubKey, if set, is used to validate SCTs against a custom source.
                                                  type: string
                                              type: object
                                            kms:
                                              description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                              type: string
                                            publicKeys:
                                              description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                              type: string
                                            rekor:
                                              description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                              properties:
                                                ignoreTlog:
                                                  description: IgnoreTlog skips transparency log verification.
                                                  type: boolean
                                                pubkey:
                                                  description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                  type: string
                                                url:
                                                  description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                  type: string
                                              required:
                                                - url
                                              type: object
                                            secret:
                                              description: Reference to a Secret resource that contains a public key
                                              properties:
                                                name:
                                                  description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                  type: string
                                                namespace:
                                                  description: Namespace name where the Secret exists.
                                                  type: string
                                              required:
                                                - name
                                                - namespace
                                              type: object
                                            signatureAlgorithm:
                                              default: sha256
                                              description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                              type: string
                                          type: object
                                        repository:
                                          description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                          type: string
                                      type: object
                                    type: array
                                type: object
                              type: array
                            imageReferences:
                              description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                              items:
                                type: string
                              type: array
                            imageRegistryCredentials:
                              description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                              properties:
                                allowInsecureRegistry:
                                  description: AllowInsecureRegistry allows insecure access to a registry.
                                  type: boolean
                                providers:
                                  description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                  items:
                                    description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                    enum:
                                      - default
                                      - amazon
                                      - azure
                                      - google
                                      - github
                                    type: string
                                  type: array
                                secrets:
                                  description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            mutateDigest:
                              default: true
                              description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                              type: boolean
                            repository:
                              description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                              type: string
                            required:
                              default: true
                              description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                              type: boolean
                            type:
                              description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                              enum:
                                - Cosign
                                - Notary
                              type: string
                            useCache:
                              default: true
                              description: UseCache enables caching of image verify responses for this rule
                              type: boolean
                            verifyDigest:
                              default: true
                              description: VerifyDigest validates that images have a digest.
                              type: boolean
                          type: object
                        type: array
                    required:
                      - name
                    type: object
                  type: array
                schemaValidation:
                  description: SchemaValidation skips validation checks for policies as well as patched resources. Optional. The default value is set to "true", it must be set to "false" to disable the validation checks.
                  type: boolean
                useServerSideApply:
                  description: UseServerSideApply controls whether to use server-side apply for generate rules If is set to "true" create & update for generate rules will use apply instead of create/update. Defaults to "false" if not specified.
                  type: boolean
                validationFailureAction:
                  default: Audit
                  description: ValidationFailureAction defines if a validation policy rule violation should block the admission review request (enforce), or allow (audit) the admission review request and report an error in a policy report. Optional. Allowed values are audit or enforce. The default value is "Audit".
                  enum:
                    - audit
                    - enforce
                    - Audit
                    - Enforce
                  type: string
                validationFailureActionOverrides:
                  description: ValidationFailureActionOverrides is a Cluster Policy attribute that specifies ValidationFailureAction namespace-wise. It overrides ValidationFailureAction for the specified namespaces.
                  items:
                    properties:
                      action:
                        description: ValidationFailureAction defines the policy validation failure action
                        enum:
                          - audit
                          - enforce
                          - Audit
                          - Enforce
                        type: string
                      namespaceSelector:
                        description: A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                                - key
                                - operator
                              type: object
                            type: array
                          matchLabels:
                            additionalProperties:
                              type: string
                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                            type: object
                        type: object
                        x-kubernetes-map-type: atomic
                      namespaces:
                        items:
                          type: string
                        type: array
                    type: object
                  type: array
                webhookTimeoutSeconds:
                  description: WebhookTimeoutSeconds specifies the maximum time in seconds allowed to apply this policy. After the configured time expires, the admission request may fail, or may simply ignore the policy results, based on the failure policy. The default timeout is 10s, the value must be between 1 and 30 seconds.
                  format: int32
                  type: integer
              type: object
            status:
              description: Status contains policy runtime data.
              properties:
                autogen:
                  description: AutogenStatus contains autogen status information.
                  properties:
                    rules:
                      description: Rules is a list of Rule instances. It contains auto generated rules added for pod controllers
                      items:
                        description: Rule defines a validation, mutation, or generation control for matching resources. Each rules contains a match declaration to select resources, and an optional exclude declaration to specify which resources to exclude.
                        properties:
                          celPreconditions:
                            description: CELPreconditions are used to determine if a policy rule should be applied by evaluating a set of CEL conditions. It can only be used with the validate.cel subrule
                            items:
                              description: MatchCondition represents a condition which must by fulfilled for a request to be sent to a webhook.
                              properties:
                                expression:
                                  description: "Expression represents the expression which will be evaluated by CEL. Must evaluate to bool. CEL expressions have access to the contents of the AdmissionRequest and Authorizer, organized into CEL variables: \n 'object' - The object from the incoming request. The value is null for DELETE requests. 'oldObject' - The existing object. The value is null for CREATE requests. 'request' - Attributes of the admission request(/pkg/apis/admission/types.go#AdmissionRequest). 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. Documentation on CEL: https://kubernetes.io/docs/reference/using-api/cel/ \n Required."
                                  type: string
                                name:
                                  description: "Name is an identifier for this match condition, used for strategic merging of MatchConditions, as well as providing an identifier for logging purposes. A good name should be descriptive of the associated expression. Name must be a qualified name consisting of alphanumeric characters, '-', '_' or '.', and must start and end with an alphanumeric character (e.g. 'MyName',  or 'my.name',  or '123-abc', regex used for validation is '([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]') with an optional DNS subdomain prefix and '/' (e.g. 'example.com/MyName') \n Required."
                                  type: string
                              required:
                                - expression
                                - name
                              type: object
                            type: array
                          context:
                            description: Context defines variables and data sources that can be used during rule execution.
                            items:
                              description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                              properties:
                                apiCall:
                                  description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                  properties:
                                    data:
                                      description: Data specifies the POST data sent to the server.
                                      items:
                                        description: RequestData contains the HTTP POST data
                                        properties:
                                          key:
                                            description: Key is a unique identifier for the data value
                                            type: string
                                          value:
                                            description: Value is the data value
                                            x-kubernetes-preserve-unknown-fields: true
                                        required:
                                          - key
                                          - value
                                        type: object
                                      type: array
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                      type: string
                                    method:
                                      default: GET
                                      description: Method is the HTTP request type (GET or POST).
                                      enum:
                                        - GET
                                        - POST
                                      type: string
                                    service:
                                      description: Service is an API call to a JSON web service
                                      properties:
                                        caBundle:
                                          description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                          type: string
                                        url:
                                          description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                          type: string
                                      required:
                                        - url
                                      type: object
                                    urlPath:
                                      description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                      type: string
                                  type: object
                                configMap:
                                  description: ConfigMap is the ConfigMap reference.
                                  properties:
                                    name:
                                      description: Name is the ConfigMap name.
                                      type: string
                                    namespace:
                                      description: Namespace is the ConfigMap namespace.
                                      type: string
                                  required:
                                    - name
                                  type: object
                                imageRegistry:
                                  description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                  properties:
                                    imageRegistryCredentials:
                                      description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                      properties:
                                        allowInsecureRegistry:
                                          description: AllowInsecureRegistry allows insecure access to a registry.
                                          type: boolean
                                        providers:
                                          description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                          items:
                                            description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                            enum:
                                              - default
                                              - amazon
                                              - azure
                                              - google
                                              - github
                                            type: string
                                          type: array
                                        secrets:
                                          description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                          items:
                                            type: string
                                          type: array
                                      type: object
                                    jmesPath:
                                      description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                      type: string
                                    reference:
                                      description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                      type: string
                                  required:
                                    - reference
                                  type: object
                                name:
                                  description: Name is the variable name.
                                  type: string
                                variable:
                                  description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                  properties:
                                    default:
                                      description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                      x-kubernetes-preserve-unknown-fields: true
                                    jmesPath:
                                      description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                      type: string
                                    value:
                                      description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                              type: object
                            type: array
                          exclude:
                            description: ExcludeResources defines when this policy rule should not be applied. The exclude criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the name or role.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          generate:
                            description: Generation is used to create new resources.
                            properties:
                              apiVersion:
                                description: APIVersion specifies resource apiVersion.
                                type: string
                              clone:
                                description: Clone specifies the source resource used to populate each generated resource. At most one of Data or Clone can be specified. If neither are provided, the generated resource will be created with default data only.
                                properties:
                                  name:
                                    description: Name specifies name of the resource.
                                    type: string
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                type: object
                              cloneList:
                                description: CloneList specifies the list of source resource used to populate each generated resource.
                                properties:
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  namespace:
                                    description: Namespace specifies source resource namespace.
                                    type: string
                                  selector:
                                    description: Selector is a label selector. Label keys and values in `matchLabels`. wildcard characters are not supported.
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              data:
                                description: Data provides the resource declaration used to populate each generated resource. At most one of Data or Clone must be specified. If neither are provided, the generated resource will be created with default data only.
                                x-kubernetes-preserve-unknown-fields: true
                              kind:
                                description: Kind specifies resource kind.
                                type: string
                              name:
                                description: Name specifies the resource name.
                                type: string
                              namespace:
                                description: Namespace specifies resource namespace.
                                type: string
                              synchronize:
                                description: Synchronize controls if generated resources should be kept in-sync with their source resource. If Synchronize is set to "true" changes to generated resources will be overwritten with resource data from Data or the resource specified in the Clone declaration. Optional. Defaults to "false" if not specified.
                                type: boolean
                              uid:
                                description: UID specifies the resource uid.
                                type: string
                            type: object
                          imageExtractors:
                            additionalProperties:
                              items:
                                properties:
                                  jmesPath:
                                    description: 'JMESPath is an optional JMESPath expression to apply to the image value. This is useful when the extracted image begins with a prefix like ''docker://''. The ''trim_prefix'' function may be used to trim the prefix: trim_prefix(@, ''docker://''). Note - Image digest mutation may not be used when applying a JMESPAth to an image.'
                                    type: string
                                  key:
                                    description: Key is an optional name of the field within 'path' that will be used to uniquely identify an image. Note - this field MUST be unique.
                                    type: string
                                  name:
                                    description: Name is the entry the image will be available under 'images.<name>' in the context. If this field is not defined, image entries will appear under 'images.custom'.
                                    type: string
                                  path:
                                    description: Path is the path to the object containing the image field in a custom resource. It should be slash-separated. Each slash-separated key must be a valid YAML key or a wildcard '*'. Wildcard keys are expanded in case of arrays or objects.
                                    type: string
                                  value:
                                    description: Value is an optional name of the field within 'path' that points to the image URI. This is useful when a custom 'key' is also defined.
                                    type: string
                                required:
                                  - path
                                type: object
                              type: array
                            description: ImageExtractors defines a mapping from kinds to ImageExtractorConfigs. This config is only valid for verifyImages rules.
                            type: object
                          match:
                            description: MatchResources defines when this policy rule should be applied. The match criteria can include resource information (e.g. kind, name, namespace, labels) and admission review request information like the user name or role. At least one kind is required.
                            properties:
                              all:
                                description: All allows specifying resources which will be ANDed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              any:
                                description: Any allows specifying resources which will be ORed
                                items:
                                  description: ResourceFilter allow users to "AND" or "OR" between resources
                                  properties:
                                    clusterRoles:
                                      description: ClusterRoles is the list of cluster-wide role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    resources:
                                      description: ResourceDescription contains information about the resource being created or modified.
                                      properties:
                                        annotations:
                                          additionalProperties:
                                            type: string
                                          description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                          type: object
                                        kinds:
                                          description: Kinds is a list of resource kinds.
                                          items:
                                            type: string
                                          type: array
                                        name:
                                          description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                          type: string
                                        names:
                                          description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        namespaceSelector:
                                          description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                        namespaces:
                                          description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                          items:
                                            type: string
                                          type: array
                                        operations:
                                          description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                          items:
                                            description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                            enum:
                                              - CREATE
                                              - CONNECT
                                              - UPDATE
                                              - DELETE
                                            type: string
                                          type: array
                                        selector:
                                          description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                          properties:
                                            matchExpressions:
                                              description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                              items:
                                                description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                                properties:
                                                  key:
                                                    description: key is the label key that the selector applies to.
                                                    type: string
                                                  operator:
                                                    description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                    type: string
                                                  values:
                                                    description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                    items:
                                                      type: string
                                                    type: array
                                                required:
                                                  - key
                                                  - operator
                                                type: object
                                              type: array
                                            matchLabels:
                                              additionalProperties:
                                                type: string
                                              description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                              type: object
                                          type: object
                                          x-kubernetes-map-type: atomic
                                      type: object
                                    roles:
                                      description: Roles is the list of namespaced role names for the user.
                                      items:
                                        type: string
                                      type: array
                                    subjects:
                                      description: Subjects is the list of subject names like users, user groups, and service accounts.
                                      items:
                                        description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                        properties:
                                          apiGroup:
                                            description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                            type: string
                                          kind:
                                            description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                            type: string
                                          name:
                                            description: Name of the object being referenced.
                                            type: string
                                          namespace:
                                            description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                            type: string
                                        required:
                                          - kind
                                          - name
                                        type: object
                                        x-kubernetes-map-type: atomic
                                      type: array
                                  type: object
                                type: array
                              clusterRoles:
                                description: ClusterRoles is the list of cluster-wide role names for the user.
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceDescription contains information about the resource being created or modified. Requires at least one tag to be specified when under MatchResources. Specifying ResourceDescription directly under match is being deprecated. Please specify under "any" or "all" instead.
                                properties:
                                  annotations:
                                    additionalProperties:
                                      type: string
                                    description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                    type: object
                                  kinds:
                                    description: Kinds is a list of resource kinds.
                                    items:
                                      type: string
                                    type: array
                                  name:
                                    description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                    type: string
                                  names:
                                    description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  namespaceSelector:
                                    description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  namespaces:
                                    description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                    items:
                                      type: string
                                    type: array
                                  operations:
                                    description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                    items:
                                      description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                      enum:
                                        - CREATE
                                        - CONNECT
                                        - UPDATE
                                        - DELETE
                                      type: string
                                    type: array
                                  selector:
                                    description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                    properties:
                                      matchExpressions:
                                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                        items:
                                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                          properties:
                                            key:
                                              description: key is the label key that the selector applies to.
                                              type: string
                                            operator:
                                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                              type: string
                                            values:
                                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                              items:
                                                type: string
                                              type: array
                                          required:
                                            - key
                                            - operator
                                          type: object
                                        type: array
                                      matchLabels:
                                        additionalProperties:
                                          type: string
                                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                        type: object
                                    type: object
                                    x-kubernetes-map-type: atomic
                                type: object
                              roles:
                                description: Roles is the list of namespaced role names for the user.
                                items:
                                  type: string
                                type: array
                              subjects:
                                description: Subjects is the list of subject names like users, user groups, and service accounts.
                                items:
                                  description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                                  properties:
                                    apiGroup:
                                      description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                      type: string
                                    kind:
                                      description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                      type: string
                                    name:
                                      description: Name of the object being referenced.
                                      type: string
                                    namespace:
                                      description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                      type: string
                                  required:
                                    - kind
                                    - name
                                  type: object
                                  x-kubernetes-map-type: atomic
                                type: array
                            type: object
                          mutate:
                            description: Mutation is used to modify matching resources.
                            properties:
                              foreach:
                                description: ForEach applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachMutation applies mutation rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    order:
                                      description: Order defines the iteration order on the list. Can be Ascending to iterate from first to last element or Descending to iterate in from last to first element.
                                      enum:
                                        - Ascending
                                        - Descending
                                      type: string
                                    patchStrategicMerge:
                                      description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                      x-kubernetes-preserve-unknown-fields: true
                                    patchesJson6902:
                                      description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                      type: string
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              patchStrategicMerge:
                                description: PatchStrategicMerge is a strategic merge patch used to modify resources. See https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/ and https://kubectl.docs.kubernetes.io/references/kustomize/patchesstrategicmerge/.
                                x-kubernetes-preserve-unknown-fields: true
                              patchesJson6902:
                                description: PatchesJSON6902 is a list of RFC 6902 JSON Patch declarations used to modify resources. See https://tools.ietf.org/html/rfc6902 and https://kubectl.docs.kubernetes.io/references/kustomize/patchesjson6902/.
                                type: string
                              targets:
                                description: Targets defines the target resources to be mutated.
                                items:
                                  description: TargetResourceSpec defines targets for mutating existing resources.
                                  properties:
                                    apiVersion:
                                      description: APIVersion specifies resource apiVersion.
                                      type: string
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    kind:
                                      description: Kind specifies resource kind.
                                      type: string
                                    name:
                                      description: Name specifies the resource name.
                                      type: string
                                    namespace:
                                      description: Namespace specifies resource namespace.
                                      type: string
                                    preconditions:
                                      description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      x-kubernetes-preserve-unknown-fields: true
                                    uid:
                                      description: UID specifies the resource uid.
                                      type: string
                                  type: object
                                type: array
                            type: object
                          name:
                            description: Name is a label to identify the rule, It must be unique within the policy.
                            maxLength: 63
                            type: string
                          preconditions:
                            description: 'Preconditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. A direct list of conditions (without `any` or `all` statements is supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/preconditions/'
                            x-kubernetes-preserve-unknown-fields: true
                          validate:
                            description: Validation is used to validate matching resources.
                            properties:
                              anyPattern:
                                description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                x-kubernetes-preserve-unknown-fields: true
                              cel:
                                description: CEL allows validation checks using the Common Expression Language (https://kubernetes.io/docs/reference/using-api/cel/).
                                properties:
                                  auditAnnotations:
                                    description: AuditAnnotations contains CEL expressions which are used to produce audit annotations for the audit event of the API request.
                                    items:
                                      description: AuditAnnotation describes how to produce an audit annotation for an API request.
                                      properties:
                                        key:
                                          description: "key specifies the audit annotation key. The audit annotation keys of a ValidatingAdmissionPolicy must be unique. The key must be a qualified name ([A-Za-z0-9][-A-Za-z0-9_.]*) no more than 63 bytes in length. \n The key is combined with the resource name of the ValidatingAdmissionPolicy to construct an audit annotation key: \"{ValidatingAdmissionPolicy name}/{key}\". \n If an admission webhook uses the same resource name as this ValidatingAdmissionPolicy and the same audit annotation key, the annotation key will be identical. In this case, the first annotation written with the key will be included in the audit event and all subsequent annotations with the same key will be discarded. \n Required."
                                          type: string
                                        valueExpression:
                                          description: "valueExpression represents the expression which is evaluated by CEL to produce an audit annotation value. The expression must evaluate to either a string or null value. If the expression evaluates to a string, the audit annotation is included with the string value. If the expression evaluates to null or empty string the audit annotation will be omitted. The valueExpression may be no longer than 5kb in length. If the result of the valueExpression is more than 10kb in length, it will be truncated to 10kb. \n If multiple ValidatingAdmissionPolicyBinding resources match an API request, then the valueExpression will be evaluated for each binding. All unique values produced by the valueExpressions will be joined together in a comma-separated list. \n Required."
                                          type: string
                                      required:
                                        - key
                                        - valueExpression
                                      type: object
                                    type: array
                                  expressions:
                                    description: Expressions is a list of CELExpression types.
                                    items:
                                      description: Validation specifies the CEL expression which is used to apply the validation.
                                      properties:
                                        expression:
                                          description: "Expression represents the expression which will be evaluated by CEL. ref: https://github.com/google/cel-spec CEL expressions have access to the contents of the API request/response, organized into CEL variables as well as some other useful variables: \n - 'object' - The object from the incoming request. The value is null for DELETE requests. - 'oldObject' - The existing object. The value is null for CREATE requests. - 'request' - Attributes of the API request([ref](/pkg/apis/admission/types.go#AdmissionRequest)). - 'params' - Parameter resource referred to by the policy binding being evaluated. Only populated if the policy has a ParamKind. - 'namespaceObject' - The namespace object that the incoming object belongs to. The value is null for cluster-scoped resources. - 'variables' - Map of composited variables, from its name to its lazily evaluated value. For example, a variable named 'foo' can be accessed as 'variables.foo'. - 'authorizer' - A CEL Authorizer. May be used to perform authorization checks for the principal (user or service account) of the request. See https://pkg.go.dev/k8s.io/apiserver/pkg/cel/library#Authz - 'authorizer.requestResource' - A CEL ResourceCheck constructed from the 'authorizer' and configured with the request resource. \n The `apiVersion`, `kind`, `metadata.name` and `metadata.generateName` are always accessible from the root of the object. No other metadata properties are accessible. \n Only property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*` are accessible. Accessible property names are escaped according to the following rules when accessed in the expression: - '__' escapes to '__underscores__' - '.' escapes to '__dot__' - '-' escapes to '__dash__' - '/' escapes to '__slash__' - Property names that exactly match a CEL RESERVED keyword escape to '__{keyword}__'. The keywords are: \"true\", \"false\", \"null\", \"in\", \"as\", \"break\", \"const\", \"continue\", \"else\", \"for\", \"function\", \"if\", \"import\", \"let\", \"loop\", \"package\", \"namespace\", \"return\". Examples: - Expression accessing a property named \"namespace\": {\"Expression\": \"object.__namespace__ > 0\"} - Expression accessing a property named \"x-prop\": {\"Expression\": \"object.x__dash__prop > 0\"} - Expression accessing a property named \"redact__d\": {\"Expression\": \"object.redact__underscores__d > 0\"} \n Equality on arrays with list type of 'set' or 'map' ignores element order, i.e. [1, 2] == [2, 1]. Concatenation on arrays with x-kubernetes-list-type use the semantics of the list type: - 'set': `X + Y` performs a union where the array positions of all elements in `X` are preserved and non-intersecting elements in `Y` are appended, retaining their partial order. - 'map': `X + Y` performs a merge where the array positions of all keys in `X` are preserved but the values are overwritten by values in `Y` when the key sets of `X` and `Y` intersect. Elements in `Y` with non-intersecting keys are appended, retaining their partial order. Required."
                                          type: string
                                        message:
                                          description: 'Message represents the message displayed when validation fails. The message is required if the Expression contains line breaks. The message must not contain line breaks. If unset, the message is "failed rule: {Rule}". e.g. "must be a URL with the host matching spec.host" If the Expression contains line breaks. Message is required. The message must not contain line breaks. If unset, the message is "failed Expression: {Expression}".'
                                          type: string
                                        messageExpression:
                                          description: 'messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails. Since messageExpression is used as a failure message, it must evaluate to a string. If both message and messageExpression are present on a validation, then messageExpression will be used if validation fails. If messageExpression results in a runtime error, the runtime error is logged, and the validation failure message is produced as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset, and the fact that messageExpression produced an empty string/string with only spaces/string with line breaks will be logged. messageExpression has access to all the same variables as the `expression` except for ''authorizer'' and ''authorizer.requestResource''. Example: "object.x must be less than max ("+string(params.max)+")"'
                                          type: string
                                        reason:
                                          description: 'Reason represents a machine-readable description of why this validation failed. If this is the first validation in the list to fail, this reason, as well as the corresponding HTTP response code, are used in the HTTP response to the client. The currently supported reasons are: "Unauthorized", "Forbidden", "Invalid", "RequestEntityTooLarge". If not set, StatusReasonInvalid is used in the response to the client.'
                                          type: string
                                      required:
                                        - expression
                                      type: object
                                    type: array
                                  paramKind:
                                    description: ParamKind is a tuple of Group Kind and Version.
                                    properties:
                                      apiVersion:
                                        description: APIVersion is the API group version the resources belong to. In format of "group/version". Required.
                                        type: string
                                      kind:
                                        description: Kind is the API kind the resources belong to. Required.
                                        type: string
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  paramRef:
                                    description: ParamRef references a parameter resource.
                                    properties:
                                      name:
                                        description: "`name` is the name of the resource being referenced. \n `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        type: string
                                      namespace:
                                        description: "namespace is the namespace of the referenced resource. Allows limiting the search for params to a specific namespace. Applies to both `name` and `selector` fields. \n A per-namespace parameter may be used by specifying a namespace-scoped `paramKind` in the policy and leaving this field empty. \n - If `paramKind` is cluster-scoped, this field MUST be unset. Setting this field results in a configuration error. \n - If `paramKind` is namespace-scoped, the namespace of the object being evaluated for admission will be used when this field is left unset. Take care that if this is left empty the binding must not match any cluster-scoped resources, which will result in an error."
                                        type: string
                                      parameterNotFoundAction:
                                        description: "`parameterNotFoundAction` controls the behavior of the binding when the resource exists, and name or selector is valid, but there are no parameters matched by the binding. If the value is set to `Allow`, then no matched parameters will be treated as successful validation by the binding. If set to `Deny`, then no matched parameters will be subject to the `failurePolicy` of the policy. \n Allowed values are `Allow` or `Deny` Default to `Deny`"
                                        type: string
                                      selector:
                                        description: "selector can be used to match multiple param objects based on their labels. Supply selector: {} to match all resources of the ParamKind. \n If multiple params are found, they are all evaluated with the policy expressions and the results are ANDed together. \n One of `name` or `selector` must be set, but `name` and `selector` are mutually exclusive properties. If one is set, the other must be unset."
                                        properties:
                                          matchExpressions:
                                            description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                            items:
                                              description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                              properties:
                                                key:
                                                  description: key is the label key that the selector applies to.
                                                  type: string
                                                operator:
                                                  description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                                  type: string
                                                values:
                                                  description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                                  items:
                                                    type: string
                                                  type: array
                                              required:
                                                - key
                                                - operator
                                              type: object
                                            type: array
                                          matchLabels:
                                            additionalProperties:
                                              type: string
                                            description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                            type: object
                                        type: object
                                        x-kubernetes-map-type: atomic
                                    type: object
                                    x-kubernetes-map-type: atomic
                                  variables:
                                    description: Variables contain definitions of variables that can be used in composition of other expressions. Each variable is defined as a named CEL expression. The variables defined here will be available under `variables` in other expressions of the policy.
                                    items:
                                      description: Variable is the definition of a variable that is used for composition.
                                      properties:
                                        expression:
                                          description: Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
                                          type: string
                                        name:
                                          description: Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
                                          type: string
                                      required:
                                        - expression
                                        - name
                                      type: object
                                    type: array
                                type: object
                              deny:
                                description: Deny defines conditions used to pass or fail a validation rule.
                                properties:
                                  conditions:
                                    description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              foreach:
                                description: ForEach applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                items:
                                  description: ForEachValidation applies validate rules to a list of sub-elements by creating a context for each entry in the list and looping over it to apply the specified logic.
                                  properties:
                                    anyPattern:
                                      description: AnyPattern specifies list of validation patterns. At least one of the patterns must be satisfied for the validation rule to succeed.
                                      x-kubernetes-preserve-unknown-fields: true
                                    context:
                                      description: Context defines variables and data sources that can be used during rule execution.
                                      items:
                                        description: ContextEntry adds variables and data sources to a rule Context. Either a ConfigMap reference or a APILookup must be provided.
                                        properties:
                                          apiCall:
                                            description: APICall is an HTTP request to the Kubernetes API server, or other JSON web service. The data returned is stored in the context with the name for the context entry.
                                            properties:
                                              data:
                                                description: Data specifies the POST data sent to the server.
                                                items:
                                                  description: RequestData contains the HTTP POST data
                                                  properties:
                                                    key:
                                                      description: Key is a unique identifier for the data value
                                                      type: string
                                                    value:
                                                      description: Value is the data value
                                                      x-kubernetes-preserve-unknown-fields: true
                                                  required:
                                                    - key
                                                    - value
                                                  type: object
                                                type: array
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the JSON response returned from the server. For example a JMESPath of "items | length(@)" applied to the API server response for the URLPath "/apis/apps/v1/deployments" will return the total count of deployments across all namespaces.
                                                type: string
                                              method:
                                                default: GET
                                                description: Method is the HTTP request type (GET or POST).
                                                enum:
                                                  - GET
                                                  - POST
                                                type: string
                                              service:
                                                description: Service is an API call to a JSON web service
                                                properties:
                                                  caBundle:
                                                    description: CABundle is a PEM encoded CA bundle which will be used to validate the server certificate.
                                                    type: string
                                                  url:
                                                    description: URL is the JSON web service URL. A typical form is `https://{service}.{namespace}:{port}/{path}`.
                                                    type: string
                                                required:
                                                  - url
                                                type: object
                                              urlPath:
                                                description: URLPath is the URL path to be used in the HTTP GET or POST request to the Kubernetes API server (e.g. "/api/v1/namespaces" or  "/apis/apps/v1/deployments"). The format required is the same format used by the `kubectl get --raw` command. See https://kyverno.io/docs/writing-policies/external-data-sources/#variables-from-kubernetes-api-server-calls for details.
                                                type: string
                                            type: object
                                          configMap:
                                            description: ConfigMap is the ConfigMap reference.
                                            properties:
                                              name:
                                                description: Name is the ConfigMap name.
                                                type: string
                                              namespace:
                                                description: Namespace is the ConfigMap namespace.
                                                type: string
                                            required:
                                              - name
                                            type: object
                                          imageRegistry:
                                            description: ImageRegistry defines requests to an OCI/Docker V2 registry to fetch image details.
                                            properties:
                                              imageRegistryCredentials:
                                                description: ImageRegistryCredentials provides credentials that will be used for authentication with registry
                                                properties:
                                                  allowInsecureRegistry:
                                                    description: AllowInsecureRegistry allows insecure access to a registry.
                                                    type: boolean
                                                  providers:
                                                    description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                                    items:
                                                      description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                                      enum:
                                                        - default
                                                        - amazon
                                                        - azure
                                                        - google
                                                        - github
                                                      type: string
                                                    type: array
                                                  secrets:
                                                    description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                                    items:
                                                      type: string
                                                    type: array
                                                type: object
                                              jmesPath:
                                                description: JMESPath is an optional JSON Match Expression that can be used to transform the ImageData struct returned as a result of processing the image reference.
                                                type: string
                                              reference:
                                                description: 'Reference is image reference to a container image in the registry. Example: ghcr.io/kyverno/kyverno:latest'
                                                type: string
                                            required:
                                              - reference
                                            type: object
                                          name:
                                            description: Name is the variable name.
                                            type: string
                                          variable:
                                            description: Variable defines an arbitrary JMESPath context variable that can be defined inline.
                                            properties:
                                              default:
                                                description: Default is an optional arbitrary JSON object that the variable may take if the JMESPath expression evaluates to nil
                                                x-kubernetes-preserve-unknown-fields: true
                                              jmesPath:
                                                description: JMESPath is an optional JMESPath Expression that can be used to transform the variable.
                                                type: string
                                              value:
                                                description: Value is any arbitrary JSON object representable in YAML or JSON form.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                        type: object
                                      type: array
                                    deny:
                                      description: Deny defines conditions used to pass or fail a validation rule.
                                      properties:
                                        conditions:
                                          description: 'Multiple conditions can be declared under an `any` or `all` statement. A direct list of conditions (without `any` or `all` statements) is also supported for backwards compatibility but will be deprecated in the next major release. See: https://kyverno.io/docs/writing-policies/validate/#deny-rules'
                                          x-kubernetes-preserve-unknown-fields: true
                                      type: object
                                    elementScope:
                                      description: ElementScope specifies whether to use the current list element as the scope for validation. Defaults to "true" if not specified. When set to "false", "request.object" is used as the validation scope within the foreach block to allow referencing other elements in the subtree.
                                      type: boolean
                                    foreach:
                                      description: Foreach declares a nested foreach iterator
                                      x-kubernetes-preserve-unknown-fields: true
                                    list:
                                      description: List specifies a JMESPath expression that results in one or more elements to which the validation logic is applied.
                                      type: string
                                    pattern:
                                      description: Pattern specifies an overlay-style pattern used to check resources.
                                      x-kubernetes-preserve-unknown-fields: true
                                    preconditions:
                                      description: 'AnyAllConditions are used to determine if a policy rule should be applied by evaluating a set of conditions. The declaration can contain nested `any` or `all` statements. See: https://kyverno.io/docs/writing-policies/preconditions/'
                                      properties:
                                        all:
                                          description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                        any:
                                          description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                          items:
                                            description: Condition defines variable-based conditional criteria for rule execution.
                                            properties:
                                              key:
                                                description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                x-kubernetes-preserve-unknown-fields: true
                                              message:
                                                description: Message is an optional display message
                                                type: string
                                              operator:
                                                description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                enum:
                                                  - Equals
                                                  - NotEquals
                                                  - In
                                                  - AnyIn
                                                  - AllIn
                                                  - NotIn
                                                  - AnyNotIn
                                                  - AllNotIn
                                                  - GreaterThanOrEquals
                                                  - GreaterThan
                                                  - LessThanOrEquals
                                                  - LessThan
                                                  - DurationGreaterThanOrEquals
                                                  - DurationGreaterThan
                                                  - DurationLessThanOrEquals
                                                  - DurationLessThan
                                                type: string
                                              value:
                                                description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                x-kubernetes-preserve-unknown-fields: true
                                            type: object
                                          type: array
                                      type: object
                                      x-kubernetes-preserve-unknown-fields: true
                                  type: object
                                type: array
                              manifests:
                                description: Manifest specifies conditions for manifest verification
                                properties:
                                  annotationDomain:
                                    description: AnnotationDomain is custom domain of annotation for message and signature. Default is "cosign.sigstore.dev".
                                    type: string
                                  attestors:
                                    description: Attestors specified the required attestors (i.e. authorities)
                                    items:
                                      properties:
                                        count:
                                          description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                          minimum: 1
                                          type: integer
                                        entries:
                                          description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                          items:
                                            properties:
                                              annotations:
                                                additionalProperties:
                                                  type: string
                                                description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                type: object
                                              attestor:
                                                description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                x-kubernetes-preserve-unknown-fields: true
                                              certificates:
                                                description: Certificates specifies one or more certificates.
                                                properties:
                                                  cert:
                                                    description: Cert is an optional PEM-encoded public certificate.
                                                    type: string
                                                  certChain:
                                                    description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                    type: string
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                type: object
                                              keyless:
                                                description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                properties:
                                                  additionalExtensions:
                                                    additionalProperties:
                                                      type: string
                                                    description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                    type: object
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  issuer:
                                                    description: Issuer is the certificate issuer used for keyless signing.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  roots:
                                                    description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                    type: string
                                                  subject:
                                                    description: Subject is the verified identity used for keyless signing, for example the email address.
                                                    type: string
                                                type: object
                                              keys:
                                                description: Keys specifies one or more public keys.
                                                properties:
                                                  ctlog:
                                                    description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                    properties:
                                                      ignoreSCT:
                                                        description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                        type: boolean
                                                      pubkey:
                                                        description: PubKey, if set, is used to validate SCTs against a custom source.
                                                        type: string
                                                    type: object
                                                  kms:
                                                    description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                    type: string
                                                  publicKeys:
                                                    description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                    type: string
                                                  rekor:
                                                    description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                    properties:
                                                      ignoreTlog:
                                                        description: IgnoreTlog skips transparency log verification.
                                                        type: boolean
                                                      pubkey:
                                                        description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                        type: string
                                                      url:
                                                        description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                        type: string
                                                    required:
                                                      - url
                                                    type: object
                                                  secret:
                                                    description: Reference to a Secret resource that contains a public key
                                                    properties:
                                                      name:
                                                        description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                        type: string
                                                      namespace:
                                                        description: Namespace name where the Secret exists.
                                                        type: string
                                                    required:
                                                      - name
                                                      - namespace
                                                    type: object
                                                  signatureAlgorithm:
                                                    default: sha256
                                                    description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                    type: string
                                                type: object
                                              repository:
                                                description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  dryRun:
                                    description: DryRun configuration
                                    properties:
                                      enable:
                                        type: boolean
                                      namespace:
                                        type: string
                                    type: object
                                  ignoreFields:
                                    description: Fields which will be ignored while comparing manifests.
                                    items:
                                      properties:
                                        fields:
                                          items:
                                            type: string
                                          type: array
                                        objects:
                                          items:
                                            properties:
                                              group:
                                                type: string
                                              kind:
                                                type: string
                                              name:
                                                type: string
                                              namespace:
                                                type: string
                                              version:
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                    type: array
                                  repository:
                                    description: Repository is an optional alternate OCI repository to use for resource bundle reference. The repository can be overridden per Attestor or Attestation.
                                    type: string
                                type: object
                              message:
                                description: Message specifies a custom message to be displayed on failure.
                                type: string
                              pattern:
                                description: Pattern specifies an overlay-style pattern used to check resources.
                                x-kubernetes-preserve-unknown-fields: true
                              podSecurity:
                                description: PodSecurity applies exemptions for Kubernetes Pod Security admission by specifying exclusions for Pod Security Standards controls.
                                properties:
                                  exclude:
                                    description: Exclude specifies the Pod Security Standard controls to be excluded.
                                    items:
                                      description: PodSecurityStandard specifies the Pod Security Standard controls to be excluded.
                                      properties:
                                        controlName:
                                          description: 'ControlName specifies the name of the Pod Security Standard control. See: https://kubernetes.io/docs/concepts/security/pod-security-standards/'
                                          enum:
                                            - HostProcess
                                            - Host Namespaces
                                            - Privileged Containers
                                            - Capabilities
                                            - HostPath Volumes
                                            - Host Ports
                                            - AppArmor
                                            - SELinux
                                            - /proc Mount Type
                                            - Seccomp
                                            - Sysctls
                                            - Volume Types
                                            - Privilege Escalation
                                            - Running as Non-root
                                            - Running as Non-root user
                                          type: string
                                        images:
                                          description: 'Images selects matching containers and applies the container level PSS. Each image is the image name consisting of the registry address, repository, image, and tag. Empty list matches no containers, PSS checks are applied at the pod level only. Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - controlName
                                      type: object
                                    type: array
                                  level:
                                    description: Level defines the Pod Security Standard level to be applied to workloads. Allowed values are privileged, baseline, and restricted.
                                    enum:
                                      - privileged
                                      - baseline
                                      - restricted
                                    type: string
                                  version:
                                    description: Version defines the Pod Security Standard versions that Kubernetes supports. Allowed values are v1.19, v1.20, v1.21, v1.22, v1.23, v1.24, v1.25, v1.26, latest. Defaults to latest.
                                    enum:
                                      - v1.19
                                      - v1.20
                                      - v1.21
                                      - v1.22
                                      - v1.23
                                      - v1.24
                                      - v1.25
                                      - v1.26
                                      - latest
                                    type: string
                                type: object
                            type: object
                          verifyImages:
                            description: VerifyImages is used to verify image signatures and mutate them to add a digest
                            items:
                              description: ImageVerification validates that images that match the specified pattern are signed with the supplied public key. Once the image is verified it is mutated to include the SHA digest retrieved during the registration.
                              properties:
                                additionalExtensions:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated.
                                  type: object
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: Deprecated. Use annotations per Attestor instead.
                                  type: object
                                attestations:
                                  description: Attestations are optional checks for signed in-toto Statements used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statement declarations.
                                  items:
                                    description: Attestation are checks for signed in-toto Statements that are used to verify the image. See https://github.com/in-toto/attestation. Kyverno fetches signed attestations from the OCI registry and decodes them into a list of Statements.
                                    properties:
                                      attestors:
                                        description: Attestors specify the required attestors (i.e. authorities).
                                        items:
                                          properties:
                                            count:
                                              description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                              minimum: 1
                                              type: integer
                                            entries:
                                              description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                              items:
                                                properties:
                                                  annotations:
                                                    additionalProperties:
                                                      type: string
                                                    description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                                    type: object
                                                  attestor:
                                                    description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  certificates:
                                                    description: Certificates specifies one or more certificates.
                                                    properties:
                                                      cert:
                                                        description: Cert is an optional PEM-encoded public certificate.
                                                        type: string
                                                      certChain:
                                                        description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                        type: string
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                    type: object
                                                  keyless:
                                                    description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                                    properties:
                                                      additionalExtensions:
                                                        additionalProperties:
                                                          type: string
                                                        description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                        type: object
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      issuer:
                                                        description: Issuer is the certificate issuer used for keyless signing.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      roots:
                                                        description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                        type: string
                                                      subject:
                                                        description: Subject is the verified identity used for keyless signing, for example the email address.
                                                        type: string
                                                    type: object
                                                  keys:
                                                    description: Keys specifies one or more public keys.
                                                    properties:
                                                      ctlog:
                                                        description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                        properties:
                                                          ignoreSCT:
                                                            description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                            type: boolean
                                                          pubkey:
                                                            description: PubKey, if set, is used to validate SCTs against a custom source.
                                                            type: string
                                                        type: object
                                                      kms:
                                                        description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                        type: string
                                                      publicKeys:
                                                        description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                        type: string
                                                      rekor:
                                                        description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                        properties:
                                                          ignoreTlog:
                                                            description: IgnoreTlog skips transparency log verification.
                                                            type: boolean
                                                          pubkey:
                                                            description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                            type: string
                                                          url:
                                                            description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                            type: string
                                                        required:
                                                          - url
                                                        type: object
                                                      secret:
                                                        description: Reference to a Secret resource that contains a public key
                                                        properties:
                                                          name:
                                                            description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                            type: string
                                                          namespace:
                                                            description: Namespace name where the Secret exists.
                                                            type: string
                                                        required:
                                                          - name
                                                          - namespace
                                                        type: object
                                                      signatureAlgorithm:
                                                        default: sha256
                                                        description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                        type: string
                                                    type: object
                                                  repository:
                                                    description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      conditions:
                                        description: Conditions are used to verify attributes within a Predicate. If no Conditions are specified the attestation check is satisfied as long there are predicates that match the predicate type.
                                        items:
                                          description: AnyAllConditions consists of conditions wrapped denoting a logical criteria to be fulfilled. AnyConditions get fulfilled when at least one of its sub-conditions passes. AllConditions get fulfilled only when all of its sub-conditions pass.
                                          properties:
                                            all:
                                              description: AllConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, all of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                            any:
                                              description: AnyConditions enable variable-based conditional rule execution. This is useful for finer control of when an rule is applied. A condition can reference object data using JMESPath notation. Here, at least one of the conditions need to pass
                                              items:
                                                description: Condition defines variable-based conditional criteria for rule execution.
                                                properties:
                                                  key:
                                                    description: Key is the context entry (using JMESPath) for conditional rule evaluation.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                  message:
                                                    description: Message is an optional display message
                                                    type: string
                                                  operator:
                                                    description: 'Operator is the conditional operation to perform. Valid operators are: Equals, NotEquals, In, AnyIn, AllIn, NotIn, AnyNotIn, AllNotIn, GreaterThanOrEquals, GreaterThan, LessThanOrEquals, LessThan, DurationGreaterThanOrEquals, DurationGreaterThan, DurationLessThanOrEquals, DurationLessThan'
                                                    enum:
                                                      - Equals
                                                      - NotEquals
                                                      - In
                                                      - AnyIn
                                                      - AllIn
                                                      - NotIn
                                                      - AnyNotIn
                                                      - AllNotIn
                                                      - GreaterThanOrEquals
                                                      - GreaterThan
                                                      - LessThanOrEquals
                                                      - LessThan
                                                      - DurationGreaterThanOrEquals
                                                      - DurationGreaterThan
                                                      - DurationLessThanOrEquals
                                                      - DurationLessThan
                                                    type: string
                                                  value:
                                                    description: Value is the conditional value, or set of values. The values can be fixed set or can be variables declared using JMESPath.
                                                    x-kubernetes-preserve-unknown-fields: true
                                                type: object
                                              type: array
                                          type: object
                                        type: array
                                      predicateType:
                                        description: Deprecated in favour of 'Type', to be removed soon
                                        type: string
                                      type:
                                        description: Type defines the type of attestation contained within the Statement.
                                        type: string
                                    type: object
                                  type: array
                                attestors:
                                  description: Attestors specified the required attestors (i.e. authorities)
                                  items:
                                    properties:
                                      count:
                                        description: Count specifies the required number of entries that must match. If the count is null, all entries must match (a logical AND). If the count is 1, at least one entry must match (a logical OR). If the count contains a value N, then N must be less than or equal to the size of entries, and at least N entries must match.
                                        minimum: 1
                                        type: integer
                                      entries:
                                        description: Entries contains the available attestors. An attestor can be a static key, attributes for keyless verification, or a nested attestor declaration.
                                        items:
                                          properties:
                                            annotations:
                                              additionalProperties:
                                                type: string
                                              description: Annotations are used for image verification. Every specified key-value pair must exist and match in the verified payload. The payload may contain other key-value pairs.
                                              type: object
                                            attestor:
                                              description: Attestor is a nested set of Attestor used to specify a more complex set of match authorities.
                                              x-kubernetes-preserve-unknown-fields: true
                                            certificates:
                                              description: Certificates specifies one or more certificates.
                                              properties:
                                                cert:
                                                  description: Cert is an optional PEM-encoded public certificate.
                                                  type: string
                                                certChain:
                                                  description: CertChain is an optional PEM encoded set of certificates used to verify.
                                                  type: string
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                              type: object
                                            keyless:
                                              description: Keyless is a set of attribute used to verify a Sigstore keyless attestor. See https://github.com/sigstore/cosign/blob/main/KEYLESS.md.
                                              properties:
                                                additionalExtensions:
                                                  additionalProperties:
                                                    type: string
                                                  description: AdditionalExtensions are certificate-extensions used for keyless signing.
                                                  type: object
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                issuer:
                                                  description: Issuer is the certificate issuer used for keyless signing.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                roots:
                                                  description: Roots is an optional set of PEM encoded trusted root certificates. If not provided, the system roots are used.
                                                  type: string
                                                subject:
                                                  description: Subject is the verified identity used for keyless signing, for example the email address.
                                                  type: string
                                              type: object
                                            keys:
                                              description: Keys specifies one or more public keys.
                                              properties:
                                                ctlog:
                                                  description: CTLog (certificate timestamp log) provides a configuration for validation of Signed Certificate Timestamps (SCTs). If the value is unset, the default behavior by Cosign is used.
                                                  properties:
                                                    ignoreSCT:
                                                      description: IgnoreSCT defines whether to use the Signed Certificate Timestamp (SCT) log to check for a certificate timestamp. Default is false. Set to true if this was opted out during signing.
                                                      type: boolean
                                                    pubkey:
                                                      description: PubKey, if set, is used to validate SCTs against a custom source.
                                                      type: string
                                                  type: object
                                                kms:
                                                  description: 'KMS provides the URI to the public key stored in a Key Management System. See: https://github.com/sigstore/cosign/blob/main/KMS.md'
                                                  type: string
                                                publicKeys:
                                                  description: Keys is a set of X.509 public keys used to verify image signatures. The keys can be directly specified or can be a variable reference to a key specified in a ConfigMap (see https://kyverno.io/docs/writing-policies/variables/), or reference a standard Kubernetes Secret elsewhere in the cluster by specifying it in the format "k8s://<namespace>/<secret_name>". The named Secret must specify a key `cosign.pub` containing the public key used for verification, (see https://github.com/sigstore/cosign/blob/main/KMS.md#kubernetes-secret). When multiple keys are specified each key is processed as a separate staticKey entry (.attestors[*].entries.keys) within the set of attestors and the count is applied across the keys.
                                                  type: string
                                                rekor:
                                                  description: Rekor provides configuration for the Rekor transparency log service. If an empty object is provided the public instance of Rekor (https://rekor.sigstore.dev) is used.
                                                  properties:
                                                    ignoreTlog:
                                                      description: IgnoreTlog skips transparency log verification.
                                                      type: boolean
                                                    pubkey:
                                                      description: RekorPubKey is an optional PEM-encoded public key to use for a custom Rekor. If set, this will be used to validate transparency log signatures from a custom Rekor.
                                                      type: string
                                                    url:
                                                      description: URL is the address of the transparency log. Defaults to the public Rekor log instance https://rekor.sigstore.dev.
                                                      type: string
                                                  required:
                                                    - url
                                                  type: object
                                                secret:
                                                  description: Reference to a Secret resource that contains a public key
                                                  properties:
                                                    name:
                                                      description: Name of the secret. The provided secret must contain a key named cosign.pub.
                                                      type: string
                                                    namespace:
                                                      description: Namespace name where the Secret exists.
                                                      type: string
                                                  required:
                                                    - name
                                                    - namespace
                                                  type: object
                                                signatureAlgorithm:
                                                  default: sha256
                                                  description: Specify signature algorithm for public keys. Supported values are sha256 and sha512.
                                                  type: string
                                              type: object
                                            repository:
                                              description: Repository is an optional alternate OCI repository to use for signatures and attestations that match this rule. If specified Repository will override other OCI image repository locations for this Attestor.
                                              type: string
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                                image:
                                  description: Deprecated. Use ImageReferences instead.
                                  type: string
                                imageReferences:
                                  description: 'ImageReferences is a list of matching image reference patterns. At least one pattern in the list must match the image for the rule to apply. Each image reference consists of a registry address (defaults to docker.io), repository, image, and tag (defaults to latest). Wildcards (''*'' and ''?'') are allowed. See: https://kubernetes.io/docs/concepts/containers/images.'
                                  items:
                                    type: string
                                  type: array
                                imageRegistryCredentials:
                                  description: ImageRegistryCredentials provides credentials that will be used for authentication with registry.
                                  properties:
                                    allowInsecureRegistry:
                                      description: AllowInsecureRegistry allows insecure access to a registry.
                                      type: boolean
                                    providers:
                                      description: 'Providers specifies a list of OCI Registry names, whose authentication providers are provided. It can be of one of these values: default,google,azure,amazon,github.'
                                      items:
                                        description: ImageRegistryCredentialsProvidersType provides the list of credential providers required.
                                        enum:
                                          - default
                                          - amazon
                                          - azure
                                          - google
                                          - github
                                        type: string
                                      type: array
                                    secrets:
                                      description: Secrets specifies a list of secrets that are provided for credentials. Secrets must live in the Kyverno namespace.
                                      items:
                                        type: string
                                      type: array
                                  type: object
                                issuer:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                key:
                                  description: Deprecated. Use StaticKeyAttestor instead.
                                  type: string
                                mutateDigest:
                                  default: true
                                  description: MutateDigest enables replacement of image tags with digests. Defaults to true.
                                  type: boolean
                                repository:
                                  description: Repository is an optional alternate OCI repository to use for image signatures and attestations that match this rule. If specified Repository will override the default OCI image repository configured for the installation. The repository can also be overridden per Attestor or Attestation.
                                  type: string
                                required:
                                  default: true
                                  description: Required validates that images are verified i.e. have matched passed a signature or attestation check.
                                  type: boolean
                                roots:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                subject:
                                  description: Deprecated. Use KeylessAttestor instead.
                                  type: string
                                type:
                                  description: Type specifies the method of signature validation. The allowed options are Cosign and Notary. By default Cosign is used if a type is not specified.
                                  enum:
                                    - Cosign
                                    - Notary
                                  type: string
                                useCache:
                                  default: true
                                  description: UseCache enables caching of image verify responses for this rule.
                                  type: boolean
                                verifyDigest:
                                  default: true
                                  description: VerifyDigest validates that images have a digest.
                                  type: boolean
                              type: object
                            type: array
                        required:
                          - name
                        type: object
                      type: array
                  type: object
                conditions:
                  items:
                    description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, \n type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: message is a human readable message indicating details about the transition. This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                ready:
                  description: Deprecated in favor of Conditions
                  type: boolean
                rulecount:
                  description: RuleCountStatus contains four variables which describes counts for validate, generate, mutate and verify images rules
                  properties:
                    generate:
                      description: Count for generate rules in policy
                      type: integer
                    mutate:
                      description: Count for mutate rules in policy
                      type: integer
                    validate:
                      description: Count for validate rules in policy
                      type: integer
                    verifyimages:
                      description: Count for verify image rules in policy
                      type: integer
                  required:
                    - generate
                    - mutate
                    - validate
                    - verifyimages
                  type: object
                validatingadmissionpolicy:
                  description: ValidatingAdmissionPolicy contains status information
                  properties:
                    generated:
                      description: Generated indicates whether a validating admission policy is generated from the policy or not
                      type: boolean
                    message:
                      description: Message is a human readable message indicating details about the generation of validating admission policy It is an empty string when validating admission policy is successfully generated.
                      type: string
                  required:
                    - generated
                    - message
                  type: object
              required:
                - ready
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
      subresources:
        status: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: Policy
    listKind: PolicyList
    plural: policies
    shortNames:
      - pol
    singular: policy
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: policyexceptions.kyverno.io
  resourceVersion: "524"
  uid: fdeb61d4-cfdc-4c8c-bdff-0d87d7ff1dfc
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: PolicyException
    listKind: PolicyExceptionList
    plural: policyexceptions
    shortNames:
      - polex
    singular: policyexception
  scope: Namespaced
  versions:
    - deprecated: true
      name: v2alpha1
      schema:
        openAPIV3Schema:
          description: PolicyException declares resources to be excluded from specified policies.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy exception behaviors.
              properties:
                background:
                  description: Background controls if exceptions are applied to existing policies during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                exceptions:
                  description: Exceptions is a list policy/rules to be excluded
                  items:
                    description: Exception stores infos about a policy and rules
                    properties:
                      policyName:
                        description: PolicyName identifies the policy to which the exception is applied. The policy name uses the format <namespace>/<name> unless it references a ClusterPolicy.
                        type: string
                      ruleNames:
                        description: RuleNames identifies the rules to which the exception is applied.
                        items:
                          type: string
                        type: array
                    required:
                      - policyName
                      - ruleNames
                    type: object
                  type: array
                match:
                  description: Match defines match clause used to check if a resource applies to the exception
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
              required:
                - exceptions
                - match
              type: object
          required:
            - spec
          type: object
      served: true
      storage: false
    - name: v2beta1
      schema:
        openAPIV3Schema:
          description: PolicyException declares resources to be excluded from specified policies.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec declares policy exception behaviors.
              properties:
                background:
                  description: Background controls if exceptions are applied to existing policies during a background scan. Optional. Default value is "true". The value must be set to "false" if the policy rule uses variables that are only available in the admission review request (e.g. user name).
                  type: boolean
                exceptions:
                  description: Exceptions is a list policy/rules to be excluded
                  items:
                    description: Exception stores infos about a policy and rules
                    properties:
                      policyName:
                        description: PolicyName identifies the policy to which the exception is applied. The policy name uses the format <namespace>/<name> unless it references a ClusterPolicy.
                        type: string
                      ruleNames:
                        description: RuleNames identifies the rules to which the exception is applied.
                        items:
                          type: string
                        type: array
                    required:
                      - policyName
                      - ruleNames
                    type: object
                  type: array
                match:
                  description: Match defines match clause used to check if a resource applies to the exception
                  properties:
                    all:
                      description: All allows specifying resources which will be ANDed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                    any:
                      description: Any allows specifying resources which will be ORed
                      items:
                        description: ResourceFilter allow users to "AND" or "OR" between resources
                        properties:
                          clusterRoles:
                            description: ClusterRoles is the list of cluster-wide role names for the user.
                            items:
                              type: string
                            type: array
                          resources:
                            description: ResourceDescription contains information about the resource being created or modified.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: Annotations is a  map of annotations (key-value pairs of type string). Annotation keys and values support the wildcard characters "*" (matches zero or many characters) and "?" (matches at least one character).
                                type: object
                              kinds:
                                description: Kinds is a list of resource kinds.
                                items:
                                  type: string
                                type: array
                              name:
                                description: 'Name is the name of the resource. The name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character). NOTE: "Name" is being deprecated in favor of "Names".'
                                type: string
                              names:
                                description: Names are the names of the resources. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              namespaceSelector:
                                description: 'NamespaceSelector is a label selector for the resource namespace. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character).Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                              namespaces:
                                description: Namespaces is a list of namespaces names. Each name supports wildcard characters "*" (matches zero or many characters) and "?" (at least one character).
                                items:
                                  type: string
                                type: array
                              operations:
                                description: Operations can contain values ["CREATE, "UPDATE", "CONNECT", "DELETE"], which are used to match a specific action.
                                items:
                                  description: AdmissionOperation can have one of the values CREATE, UPDATE, CONNECT, DELETE, which are used to match a specific action.
                                  enum:
                                    - CREATE
                                    - CONNECT
                                    - UPDATE
                                    - DELETE
                                  type: string
                                type: array
                              selector:
                                description: 'Selector is a label selector. Label keys and values in `matchLabels` support the wildcard characters `*` (matches zero or many characters) and `?` (matches one character). Wildcards allows writing label selectors like ["storage.k8s.io/*": "*"]. Note that using ["*" : "*"] matches any key and value but does not match an empty label set.'
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                        - key
                                        - operator
                                      type: object
                                    type: array
                                  matchLabels:
                                    additionalProperties:
                                      type: string
                                    description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    type: object
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          roles:
                            description: Roles is the list of namespaced role names for the user.
                            items:
                              type: string
                            type: array
                          subjects:
                            description: Subjects is the list of subject names like users, user groups, and service accounts.
                            items:
                              description: Subject contains a reference to the object or user identities a role binding applies to.  This can either hold a direct API object reference, or a value for non-objects such as user and group names.
                              properties:
                                apiGroup:
                                  description: APIGroup holds the API group of the referenced subject. Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io" for User and Group subjects.
                                  type: string
                                kind:
                                  description: Kind of object being referenced. Values defined by this API group are "User", "Group", and "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer should report an error.
                                  type: string
                                name:
                                  description: Name of the object being referenced.
                                  type: string
                                namespace:
                                  description: Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or "Group", and this value is not empty the Authorizer should report an error.
                                  type: string
                              required:
                                - kind
                                - name
                              type: object
                              x-kubernetes-map-type: atomic
                            type: array
                        type: object
                      type: array
                  type: object
              required:
                - exceptions
                - match
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
status:
  acceptedNames:
    categories:
      - kyverno
    kind: PolicyException
    listKind: PolicyExceptionList
    plural: policyexceptions
    shortNames:
      - polex
    singular: policyexception
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v2beta1
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: policyreports.wgpolicyk8s.io
  resourceVersion: "530"
  uid: 8c467b82-dd5e-4b75-89e7-32292dd6d2b0
spec:
  conversion:
    strategy: None
  group: wgpolicyk8s.io
  names:
    kind: PolicyReport
    listKind: PolicyReportList
    plural: policyreports
    shortNames:
      - polr
    singular: policyreport
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .scope.kind
          name: Kind
          priority: 1
          type: string
        - jsonPath: .scope.name
          name: Name
          priority: 1
          type: string
        - jsonPath: .summary.pass
          name: Pass
          type: integer
        - jsonPath: .summary.fail
          name: Fail
          type: integer
        - jsonPath: .summary.warn
          name: Warn
          type: integer
        - jsonPath: .summary.error
          name: Error
          type: integer
        - jsonPath: .summary.skip
          name: Skip
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha2
      schema:
        openAPIV3Schema:
          description: PolicyReport is the Schema for the policyreports API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            results:
              description: PolicyReportResult provides result details
              items:
                description: PolicyReportResult provides the result for an individual policy
                properties:
                  category:
                    description: Category indicates policy category
                    type: string
                  message:
                    description: Description is a short user friendly message for the policy rule
                    type: string
                  policy:
                    description: Policy is the name or identifier of the policy
                    type: string
                  properties:
                    additionalProperties:
                      type: string
                    description: Properties provides additional information for the policy rule
                    type: object
                  resourceSelector:
                    description: SubjectSelector is an optional label selector for checked Kubernetes resources. For example, a policy result may apply to all pods that match a label. Either a Subject or a SubjectSelector can be specified. If neither are provided, the result is assumed to be for the policy report scope.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                              items:
                                type: string
                              type: array
                          required:
                            - key
                            - operator
                          type: object
                        type: array
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                        type: object
                    type: object
                    x-kubernetes-map-type: atomic
                  resources:
                    description: Subjects is an optional reference to the checked Kubernetes resources
                    items:
                      description: "ObjectReference contains enough information to let you inspect or modify the referred object. --- New uses of this type are discouraged because of difficulty describing its usage when embedded in APIs. 1. Ignored fields.  It includes many fields which are not generally honored.  For instance, ResourceVersion and FieldPath are both very rarely valid in actual usage. 2. Invalid usage help.  It is impossible to add specific help for individual usage.  In most embedded usages, there are particular restrictions like, \"must refer only to types A and B\" or \"UID not honored\" or \"name must be restricted\". Those cannot be well described when embedded. 3. Inconsistent validation.  Because the usages are different, the validation rules are different by usage, which makes it hard for users to predict what will happen. 4. The fields are both imprecise and overly precise.  Kind is not a precise mapping to a URL. This can produce ambiguity during interpretation and require a REST mapping.  In most cases, the dependency is on the group,resource tuple and the version of the actual struct is irrelevant. 5. We cannot easily change it.  Because this type is embedded in many locations, updates to this type will affect numerous schemas.  Don't make new APIs embed an underspecified API type they do not control. \n Instead of using this type, create a locally provided and used type that is well-focused on your reference. For example, ServiceReferences for admission registration: https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533 ."
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                          type: string
                        kind:
                          description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                          type: string
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                        namespace:
                          description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                          type: string
                        resourceVersion:
                          description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                          type: string
                        uid:
                          description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                  result:
                    description: Result indicates the outcome of the policy rule execution
                    enum:
                      - pass
                      - fail
                      - warn
                      - error
                      - skip
                    type: string
                  rule:
                    description: Rule is the name or identifier of the rule within the policy
                    type: string
                  scored:
                    description: Scored indicates if this result is scored
                    type: boolean
                  severity:
                    description: Severity indicates policy check result criticality
                    enum:
                      - critical
                      - high
                      - low
                      - medium
                      - info
                    type: string
                  source:
                    description: Source is an identifier for the policy engine that manages this report
                    type: string
                  timestamp:
                    description: Timestamp indicates the time the result was found
                    properties:
                      nanos:
                        description: Non-negative fractions of a second at nanosecond resolution. Negative second values with fractions must still have non-negative nanos values that count forward in time. Must be from 0 to 999,999,999 inclusive. This field may be limited in precision depending on context.
                        format: int32
                        type: integer
                      seconds:
                        description: Represents seconds of UTC time since Unix epoch 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to 9999-12-31T23:59:59Z inclusive.
                        format: int64
                        type: integer
                    required:
                      - nanos
                      - seconds
                    type: object
                required:
                  - policy
                type: object
              type: array
            scope:
              description: Scope is an optional reference to the report scope (e.g. a Deployment, Namespace, or Node)
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers to the name of the container that triggered the event) or if no container name is specified "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object. TODO: this design is not final and this field is subject to change in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
              x-kubernetes-map-type: atomic
            scopeSelector:
              description: ScopeSelector is an optional selector for multiple scopes (e.g. Pods). Either one of, or none of, but not both of, Scope or ScopeSelector should be specified.
              properties:
                matchExpressions:
                  description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                  items:
                    description: A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
                    properties:
                      key:
                        description: key is the label key that the selector applies to.
                        type: string
                      operator:
                        description: operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
                        type: string
                      values:
                        description: values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
                        items:
                          type: string
                        type: array
                    required:
                      - key
                      - operator
                    type: object
                  type: array
                matchLabels:
                  additionalProperties:
                    type: string
                  description: matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
                  type: object
              type: object
              x-kubernetes-map-type: atomic
            summary:
              description: PolicyReportSummary provides a summary of results
              properties:
                error:
                  description: Error provides the count of policies that could not be evaluated
                  type: integer
                fail:
                  description: Fail provides the count of policies whose requirements were not met
                  type: integer
                pass:
                  description: Pass provides the count of policies whose requirements were met
                  type: integer
                skip:
                  description: Skip indicates the count of policies that were not selected for evaluation
                  type: integer
                warn:
                  description: Warn provides the count of non-scored policies whose requirements were not met
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources: {}
status:
  acceptedNames:
    kind: PolicyReport
    listKind: PolicyReportList
    plural: policyreports
    shortNames:
      - polr
    singular: policyreport
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1alpha2
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  creationTimestamp: "2025-05-17T04:11:03Z"
  generation: 1
  labels:
    app.kubernetes.io/component: crds
    app.kubernetes.io/instance: kyverno
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: kyverno-crds
    app.kubernetes.io/version: 3.1.1
    helm.sh/chart: crds-3.1.1
  name: updaterequests.kyverno.io
  resourceVersion: "527"
  uid: a9bce2d2-e7b3-4463-b31b-1d4b00ce0fc8
spec:
  conversion:
    strategy: None
  group: kyverno.io
  names:
    categories:
      - kyverno
    kind: UpdateRequest
    listKind: UpdateRequestList
    plural: updaterequests
    shortNames:
      - ur
    singular: updaterequest
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.policy
          name: Policy
          type: string
        - jsonPath: .spec.requestType
          name: RuleType
          type: string
        - jsonPath: .spec.resource.kind
          name: ResourceKind
          type: string
        - jsonPath: .spec.resource.name
          name: ResourceName
          type: string
        - jsonPath: .spec.resource.namespace
          name: ResourceNamespace
          type: string
        - jsonPath: .status.state
          name: status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1beta1
      schema:
        openAPIV3Schema:
          description: UpdateRequest is a request to process mutate and generate rules in background.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ResourceSpec is the information to identify the trigger resource.
              properties:
                context:
                  description: Context ...
                  properties:
                    admissionRequestInfo:
                      description: AdmissionRequestInfoObject stores the admission request and operation details
                      properties:
                        admissionRequest:
                          description: AdmissionRequest describes the admission.Attributes for the admission request.
                          properties:
                            dryRun:
                              description: DryRun indicates that modifications will definitely not be persisted for this request. Defaults to false.
                              type: boolean
                            kind:
                              description: Kind is the fully-qualified type of object being submitted (for example, v1.Pod or autoscaling.v1.Scale)
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - kind
                                - version
                              type: object
                            name:
                              description: Name is the name of the object as presented in the request.  On a CREATE operation, the client may omit name and rely on the server to generate the name.  If that is the case, this field will contain an empty string.
                              type: string
                            namespace:
                              description: Namespace is the namespace associated with the request (if any).
                              type: string
                            object:
                              description: Object is the object from the incoming request.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            oldObject:
                              description: OldObject is the existing object. Only populated for DELETE and UPDATE requests.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            operation:
                              description: Operation is the operation being performed. This may be different than the operation requested. e.g. a patch can result in either a CREATE or UPDATE Operation.
                              type: string
                            options:
                              description: Options is the operation option structure of the operation being performed. e.g. `meta.k8s.io/v1.DeleteOptions` or `meta.k8s.io/v1.CreateOptions`. This may be different than the options the caller provided. e.g. for a patch request the performed Operation might be a CREATE, in which case the Options will a `meta.k8s.io/v1.CreateOptions` even though the caller provided `meta.k8s.io/v1.PatchOptions`.
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            requestKind:
                              description: "RequestKind is the fully-qualified type of the original API request (for example, v1.Pod or autoscaling.v1.Scale). If this is specified and differs from the value in \"kind\", an equivalent match and conversion was performed. \n For example, if deployments can be modified via apps/v1 and apps/v1beta1, and a webhook registered a rule of `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]` and `matchPolicy: Equivalent`, an API request to apps/v1beta1 deployments would be converted and sent to the webhook with `kind: {group:\"apps\", version:\"v1\", kind:\"Deployment\"}` (matching the rule the webhook registered for), and `requestKind: {group:\"apps\", version:\"v1beta1\", kind:\"Deployment\"}` (indicating the kind of the original API request). \n See documentation for the \"matchPolicy\" field in the webhook configuration type for more details."
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - kind
                                - version
                              type: object
                            requestResource:
                              description: "RequestResource is the fully-qualified resource of the original API request (for example, v1.pods). If this is specified and differs from the value in \"resource\", an equivalent match and conversion was performed. \n For example, if deployments can be modified via apps/v1 and apps/v1beta1, and a webhook registered a rule of `apiGroups:[\"apps\"], apiVersions:[\"v1\"], resources: [\"deployments\"]` and `matchPolicy: Equivalent`, an API request to apps/v1beta1 deployments would be converted and sent to the webhook with `resource: {group:\"apps\", version:\"v1\", resource:\"deployments\"}` (matching the resource the webhook registered for), and `requestResource: {group:\"apps\", version:\"v1beta1\", resource:\"deployments\"}` (indicating the resource of the original API request). \n See documentation for the \"matchPolicy\" field in the webhook configuration type."
                              properties:
                                group:
                                  type: string
                                resource:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - resource
                                - version
                              type: object
                            requestSubResource:
                              description: RequestSubResource is the name of the subresource of the original API request, if any (for example, "status" or "scale") If this is specified and differs from the value in "subResource", an equivalent match and conversion was performed. See documentation for the "matchPolicy" field in the webhook configuration type.
                              type: string
                            resource:
                              description: Resource is the fully-qualified resource being requested (for example, v1.pods)
                              properties:
                                group:
                                  type: string
                                resource:
                                  type: string
                                version:
                                  type: string
                              required:
                                - group
                                - resource
                                - version
                              type: object
                            subResource:
                              description: SubResource is the subresource being requested, if any (for example, "status" or "scale")
                              type: string
                            uid:
                              description: UID is an identifier for the individual request/response. It allows us to distinguish instances of requests which are otherwise identical (parallel requests, requests when earlier requests did not modify etc) The UID is meant to track the round trip (request/response) between the KAS and the WebHook, not the user request. It is suitable for correlating log entries between the webhook and apiserver, for either auditing or debugging.
                              type: string
                            userInfo:
                              description: UserInfo is information about the requesting user
                              properties:
                                extra:
                                  additionalProperties:
                                    description: ExtraValue masks the value so protobuf can generate
                                    items:
                                      type: string
                                    type: array
                                  description: Any additional information provided by the authenticator.
                                  type: object
                                groups:
                                  description: The names of groups this user is a part of.
                                  items:
                                    type: string
                                  type: array
                                uid:
                                  description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                                  type: string
                                username:
                                  description: The name that uniquely identifies this user among all active users.
                                  type: string
                              type: object
                          required:
                            - kind
                            - operation
                            - resource
                            - uid
                            - userInfo
                          type: object
                        operation:
                          description: Operation is the type of resource operation being checked for admission control
                          type: string
                      type: object
                    userInfo:
                      description: RequestInfo contains permission info carried in an admission request.
                      properties:
                        clusterRoles:
                          description: ClusterRoles is a list of possible clusterRoles send the request.
                          items:
                            type: string
                          nullable: true
                          type: array
                        roles:
                          description: Roles is a list of possible role send the request.
                          items:
                            type: string
                          nullable: true
                          type: array
                        userInfo:
                          description: UserInfo is the userInfo carried in the admission request.
                          properties:
                            extra:
                              additionalProperties:
                                description: ExtraValue masks the value so protobuf can generate
                                items:
                                  type: string
                                type: array
                              description: Any additional information provided by the authenticator.
                              type: object
                            groups:
                              description: The names of groups this user is a part of.
                              items:
                                type: string
                              type: array
                            uid:
                              description: A unique value that identifies this user across time. If this user is deleted and another user by the same name is added, they will have different UIDs.
                              type: string
                            username:
                              description: The name that uniquely identifies this user among all active users.
                              type: string
                          type: object
                      type: object
                  type: object
                deleteDownstream:
                  description: DeleteDownstream represents whether the downstream needs to be deleted.
                  type: boolean
                policy:
                  description: Specifies the name of the policy.
                  type: string
                requestType:
                  description: Type represents request type for background processing
                  enum:
                    - mutate
                    - generate
                  type: string
                resource:
                  description: ResourceSpec is the information to identify the trigger resource.
                  properties:
                    apiVersion:
                      description: APIVersion specifies resource apiVersion.
                      type: string
                    kind:
                      description: Kind specifies resource kind.
                      type: string
                    name:
                      description: Name specifies the resource name.
                      type: string
                    namespace:
                      description: Namespace specifies resource namespace.
                      type: string
                    uid:
                      description: UID specifies the resource uid.
                      type: string
                  type: object
                rule:
                  description: Rule is the associate rule name of the current UR.
                  type: string
                synchronize:
                  description: Synchronize represents the sync behavior of the corresponding rule Optional. Defaults to "false" if not specified.
                  type: boolean
              required:
                - context
                - deleteDownstream
                - policy
                - resource
                - rule
              type: object
            status:
              description: Status contains statistics related to update request.
              properties:
                generatedResources:
                  description: This will track the resources that are updated by the generate Policy. Will be used during clean up resources.
                  items:
                    properties:
                      apiVersion:
                        description: APIVersion specifies resource apiVersion.
                        type: string
                      kind:
                        description: Kind specifies resource kind.
                        type: string
                      name:
                        description: Name specifies the resource name.
                        type: string
                      namespace:
                        description: Namespace specifies resource namespace.
                        type: string
                      uid:
                        description: UID specifies the resource uid.
                        type: string
                    type: object
                  type: array
                handler:
                  description: Deprecated
                  type: string
                message:
                  description: Specifies request status message.
                  type: string
                state:
                  description: State represents state of the update request.
                  type: string
              required:
                - state
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    categories:
      - kyverno
    kind: UpdateRequest
    listKind: UpdateRequestList
    plural: updaterequests
    shortNames:
      - ur
    singular: updaterequest
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: no conflicts found
      reason: NoConflicts
      status: "True"
      type: NamesAccepted
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: the initial names have been accepted
      reason: InitialNamesAccepted
      status: "True"
      type: Established
  storedVersions:
    - v1beta1
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.
  resourceVersion: "6"
  uid: d31a6197-6f29-49cb-9fff-6f4739cf807c
spec:
  groupPriorityMinimum: 18000
  version: v1
  versionPriority: 1
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.admissionregistration.k8s.io
  resourceVersion: "4"
  uid: f578bdbc-116b-49ff-be84-c916bda1d62d
spec:
  group: admissionregistration.k8s.io
  groupPriorityMinimum: 16700
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.apiextensions.k8s.io
  resourceVersion: "5"
  uid: 4da193d2-bb95-40f1-be2d-1965fd0c6e07
spec:
  group: apiextensions.k8s.io
  groupPriorityMinimum: 16700
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.apps
  resourceVersion: "8"
  uid: b6e5af60-8cff-42a5-aa9f-02b051f1a69f
spec:
  group: apps
  groupPriorityMinimum: 17800
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.authentication.k8s.io
  resourceVersion: "7"
  uid: ac4e783b-d5a4-4070-8730-423208907e3d
spec:
  group: authentication.k8s.io
  groupPriorityMinimum: 17700
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.authorization.k8s.io
  resourceVersion: "12"
  uid: 4affb50a-384b-4e1d-b2e9-c14b70044985
spec:
  group: authorization.k8s.io
  groupPriorityMinimum: 17600
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.autoscaling
  resourceVersion: "17"
  uid: 628d3f6a-ed62-44d3-9f9d-686eba8e97b6
spec:
  group: autoscaling
  groupPriorityMinimum: 17500
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.batch
  resourceVersion: "15"
  uid: 729c4547-b831-4116-9792-867fac794336
spec:
  group: batch
  groupPriorityMinimum: 17400
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.certificates.k8s.io
  resourceVersion: "14"
  uid: 22c5ac32-02fe-4efb-b528-725b7644a037
spec:
  group: certificates.k8s.io
  groupPriorityMinimum: 17300
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.coordination.k8s.io
  resourceVersion: "18"
  uid: 6e15c9c0-64ea-4fe2-b291-7665598481c8
spec:
  group: coordination.k8s.io
  groupPriorityMinimum: 16500
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.discovery.k8s.io
  resourceVersion: "20"
  uid: e96f4467-c309-4810-9934-418c72594234
spec:
  group: discovery.k8s.io
  groupPriorityMinimum: 16200
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.events.k8s.io
  resourceVersion: "25"
  uid: de5e32d2-4ad2-4ae1-a18b-98df98c61830
spec:
  group: events.k8s.io
  groupPriorityMinimum: 17750
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.flowcontrol.apiserver.k8s.io
  resourceVersion: "23"
  uid: 87a57d63-61b7-4ece-ba74-798fee9782a0
spec:
  group: flowcontrol.apiserver.k8s.io
  groupPriorityMinimum: 16100
  version: v1
  versionPriority: 21
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: "true"
  name: v1.kyverno.io
  resourceVersion: "462"
  uid: a88e4078-43ec-4915-b3f5-7de8f5704da4
spec:
  group: kyverno.io
  groupPriorityMinimum: 1000
  version: v1
  versionPriority: 100
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.networking.k8s.io
  resourceVersion: "24"
  uid: a950b3f8-fde9-4487-b89e-c0a568ef2f61
spec:
  group: networking.k8s.io
  groupPriorityMinimum: 17200
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.node.k8s.io
  resourceVersion: "26"
  uid: bb408f54-f51b-484b-82a3-abeee6e87af4
spec:
  group: node.k8s.io
  groupPriorityMinimum: 16300
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.policy
  resourceVersion: "30"
  uid: 680d36c1-15da-45af-ae25-cdea554a122b
spec:
  group: policy
  groupPriorityMinimum: 17100
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.rbac.authorization.k8s.io
  resourceVersion: "29"
  uid: 7e2819b2-13f1-49f0-9480-10dd4fae7d2c
spec:
  group: rbac.authorization.k8s.io
  groupPriorityMinimum: 17000
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.scheduling.k8s.io
  resourceVersion: "27"
  uid: f89b7021-11bf-4ce4-ae69-a7581dcefff9
spec:
  group: scheduling.k8s.io
  groupPriorityMinimum: 16600
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v1.storage.k8s.io
  resourceVersion: "28"
  uid: c348b13c-3d7c-409e-8596-0bb3d7cf8d10
spec:
  group: storage.k8s.io
  groupPriorityMinimum: 16800
  version: v1
  versionPriority: 15
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: "true"
  name: v1alpha2.kyverno.io
  resourceVersion: "441"
  uid: e6e3c8ab-b352-47ff-9034-90b34297264c
spec:
  group: kyverno.io
  groupPriorityMinimum: 1000
  version: v1alpha2
  versionPriority: 100
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: "true"
  name: v1alpha2.wgpolicyk8s.io
  resourceVersion: "470"
  uid: ae5502ac-2ec8-414c-99f3-ef51eee46e8f
spec:
  group: wgpolicyk8s.io
  groupPriorityMinimum: 1000
  version: v1alpha2
  versionPriority: 100
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:11:03Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: "true"
  name: v1beta1.kyverno.io
  resourceVersion: "468"
  uid: 7d157ca6-1a8a-409f-ad30-9ea951056994
spec:
  group: kyverno.io
  groupPriorityMinimum: 1000
  version: v1beta1
  versionPriority: 100
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:03Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: onstart
  name: v2.autoscaling
  resourceVersion: "16"
  uid: 056eeea6-d251-4c07-82d0-e7badd2a31ed
spec:
  group: autoscaling
  groupPriorityMinimum: 17500
  version: v2
  versionPriority: 30
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:51Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: "true"
  name: v2alpha1.kyverno.io
  resourceVersion: "449"
  uid: ca77cd52-fd96-45bd-8163-bcda4cc9221a
spec:
  group: kyverno.io
  groupPriorityMinimum: 1000
  version: v2alpha1
  versionPriority: 100
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: apiregistration.k8s.io/v1
kind: APIService
metadata:
  creationTimestamp: "2025-05-17T04:11:02Z"
  labels:
    kube-aggregator.kubernetes.io/automanaged: "true"
  name: v2beta1.kyverno.io
  resourceVersion: "448"
  uid: 13b4a7c4-0346-4d83-a1cf-9a97dced60da
spec:
  group: kyverno.io
  groupPriorityMinimum: 1000
  version: v2beta1
  versionPriority: 100
status:
  conditions:
    - lastTransitionTime: "2025-05-17T04:11:02Z"
      message: Local APIServices are always available
      reason: Local
      status: "True"
      type: Available
---
apiVersion: certificates.k8s.io/v1
kind: CertificateSigningRequest
metadata:
  creationTimestamp: "2025-05-17T04:10:51Z"
  generateName: csr-
  name: csr-29h5v
  resourceVersion: "346"
  uid: d3652cc7-388c-4e9f-8889-9a9644e6b838
spec:
  extra:
    authentication.kubernetes.io/credential-id:
      - X509SHA256=41b775c6fc7d7ce1e07f951c466c161146a49d30af44e33c3c88f0d81d83da17
  groups:
    - system:nodes
    - system:authenticated
  request: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURSBSRVFVRVNULS0tLS0KTUlIN01JR2lBZ0VBTUVBeEZUQVRCZ05WQkFvVERITjVjM1JsYlRwdWIyUmxjekVuTUNVR0ExVUVBeE1lYzNsegpkR1Z0T201dlpHVTZaR1Z0YnkxamIyNTBjbTlzTFhCc1lXNWxNRmt3RXdZSEtvWkl6ajBDQVFZSUtvWkl6ajBECkFRY0RRZ0FFc291RVVRQkMzdldONnRqbitnb0ovZFMrUWxLWjBHL09KSjRkeXZBRG96bWdBSTRSWlArMC9MTG0KV3BSVFhrT1piejZDWGtjVkZUY0FPZDZEYXV3UEI2QUFNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNmQStHSQpPUlNvOGN1Rnh0bVdVOWQrRStZcnFBNk14VWplYjY0VUEwMmpHQUlnT0J5Zi92akdnQ1Rya0RLNFpUMTlNME93CnNQQkIzUitieEt1ZW9DbTJUS2c9Ci0tLS0tRU5EIENFUlRJRklDQVRFIFJFUVVFU1QtLS0tLQo=
  signerName: kubernetes.io/kube-apiserver-client-kubelet
  usages:
    - digital signature
    - client auth
  username: system:node:demo-control-plane
status:
  certificate: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNhakNDQVZLZ0F3SUJBZ0lRWUJ4bXZtaGMvV0NZZUdxWDlZbzd2REFOQmdrcWhraUc5dzBCQVFzRkFEQVYKTVJNd0VRWURWUVFERXdwcmRXSmxjbTVsZEdWek1CNFhEVEkxTURVeE56QTBNRFUxT0ZvWERUSTJNRFV4TnpBMApNRFUxT0Zvd1FERVZNQk1HQTFVRUNoTU1jM2x6ZEdWdE9tNXZaR1Z6TVNjd0pRWURWUVFERXg1emVYTjBaVzA2CmJtOWtaVHBrWlcxdkxXTnZiblJ5YjJ3dGNHeGhibVV3V1RBVEJnY3Foa2pPUFFJQkJnZ3Foa2pPUFFNQkJ3TkMKQUFTeWk0UlJBRUxlOVkzcTJPZjZDZ245MUw1Q1VwblFiODRrbmgzSzhBT2pPYUFBamhGay83VDhzdVphbEZOZQpRNWx2UG9KZVJ4VVZOd0E1M29OcTdBOEhvMVl3VkRBT0JnTlZIUThCQWY4RUJBTUNCNEF3RXdZRFZSMGxCQXd3CkNnWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVGFveUQ5ZVdFSHV0ZWkKb2IxYmpDYldkQjFpS3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUZLZWhKVWlZTytBcXp4aHE5MWttdHdvbQpXdlNuVzZQTisyQXI1Y0RickdXKzE3MFFCU1ZZY3BkZ3BBeWxTRy8rTWxNbEJBMjYrdE8xVE9EdFVicVVQN0FTCndUT0NVN1BwU08xNjRObTdwdUJEQnYvYVB2OENFYmx1YXBrRUVJWUw2Mzd0T21KVUVFcnBkWFdRaE5UWTl0OXMKU2xMYzM3SXJGc3BTU0hnWUl6NjQrSFZYSDhxTVVyS2F4c0tZQzdJOWN1OVpVQ2h5TU5EWENtVDJiUEJMYkluWAp0eGlWUXNvVDRXRHMranQ5VEwzZGVTNHJPejRxZGhRVi9CTkJRRXczMlM4R0w3TW9BM1dEUEVFMEMwNkJUR3RkCkNXRXMzdDR5UlB5cVJreVF3cGwzSDRDQkhoVUFRMk1GalB6RllSem5JajRuZXZ6ZUhxZlVXbnQ0bnpvYzZ3PT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  conditions:
    - lastTransitionTime: "2025-05-17T04:10:58Z"
      lastUpdateTime: "2025-05-17T04:10:58Z"
      message: Auto approving self kubelet client certificate after SubjectAccessReview.
      reason: AutoApproved
      status: "True"
      type: Approved
---
apiVersion: scheduling.k8s.io/v1
description: Used for system critical pods that must run in the cluster, but can be moved to another node if necessary.
kind: PriorityClass
metadata:
  creationTimestamp: "2025-05-17T04:10:52Z"
  generation: 1
  name: system-cluster-critical
  resourceVersion: "70"
  uid: 6b750223-8af7-4305-a53d-53ee3bc6991c
preemptionPolicy: PreemptLowerPriority
value: 2000000000
---
apiVersion: scheduling.k8s.io/v1
description: Used for system critical pods that must not be moved from their current node.
kind: PriorityClass
metadata:
  creationTimestamp: "2025-05-17T04:10:52Z"
  generation: 1
  name: system-node-critical
  resourceVersion: "69"
  uid: 1af47ec5-8a2a-4d2a-b163-ca602a955b02
preemptionPolicy: PreemptLowerPriority
value: 2000001000
---
apiVersion: storage.k8s.io/v1
kind: CSINode
metadata:
  annotations:
    storage.alpha.kubernetes.io/migrated-plugins: kubernetes.io/aws-ebs,kubernetes.io/azure-disk,kubernetes.io/azure-file,kubernetes.io/cinder,kubernetes.io/gce-pd,kubernetes.io/portworx-volume,kubernetes.io/vsphere-volume
  creationTimestamp: "2025-05-17T04:10:52Z"
  name: demo-control-plane
  ownerReferences:
    - apiVersion: v1
      kind: Node
      name: demo-control-plane
      uid: ffd965d7-c0ae-481c-b9d5-e3498d5f4555
  resourceVersion: "67"
  uid: f9cc48f2-09c0-4623-b48e-0858a1233b2c
spec:
  drivers: null
